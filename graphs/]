import plotly.graph_objects as go

gemini = [0.469, 0.715, 0.711, 0.729, 0.737, 0.707]
qwen = [0.398, 0.502, 0.484, 0.568, 0.441]
blank = [0.472, 0.573, 0.568]
example_count = [0, 1, 2, 3, 4, 5]


fig = go.Figure()

fig.update_yaxes(range=[0.2, 1])

fig.add_trace(
    go.Scatter(
        x=example_count,
        y=gemini,
        mode="lines+markers",
        name="Gemini 2.5 Flash",
        marker=dict(size=10, symbol="circle"),
        line=dict(width=3, color="red"),
    )
)

# Add annotations over each point with the exact MRR value
for i, mrr in enumerate(gemini):
    fig.add_annotation(
        x=example_count[i],
        y=mrr,
        text=f"{mrr:.3f}",
        showarrow=True,
        arrowhead=1,
        ax=0,
        ay=30,
        font=dict(size=20, color="black"),
        arrowcolor="red",
        arrowsize=1,
        arrowwidth=2,
    )

fig.add_trace(
    go.Scatter(
        x=example_count[: len(qwen)],
        y=qwen,
        mode="lines+markers",
        name="Qwen2.5 Coder 7B",
        marker=dict(size=10, symbol="square"),
        line=dict(width=3, color="blue"),
    )
)

# Add annotations over each point with the exact MRR value
for i, mrr in enumerate(qwen):
    fig.add_annotation(
        x=example_count[i],
        y=mrr,
        text=f"{mrr:.3f}",
        showarrow=True,
        arrowhead=1,
        ax=0,
        ay=30 if i != 1 else -30,
        font=dict(size=20, color="black"),
        arrowcolor="blue",
        arrowsize=1,
        arrowwidth=2,
    )

fig.update_layout(
    xaxis_title="Number of Examples",
    yaxis_title="Mean Reciprocal Rank",
    font=dict(size=32),
)


fig.add_hline(
    y=0.751,
    line=dict(color="red", width=2, dash="dot"),
    annotation_text="JSON schema / no examples",
    annotation=dict(font_size=16),
)
fig.add_hline(
    y=0.480,
    line=dict(color="blue", width=2, dash="dot"),
    annotation_text="JSON schema / no examples",
    annotation=dict(font_size=16),
)

fig.add_trace(
    go.Scatter(
        x=example_count[1 : 1 + len(blank)],
        y=blank,
        mode="lines+markers",
        name="Qwen2.5 Coder 7B Blank",
        marker=dict(size=10, symbol="diamond"),
        line=dict(width=3),
    )
)

# Add annotations over each point with the exact MRR value
for i, mrr in enumerate(blank):
    fig.add_annotation(
        x=example_count[i + 1],
        y=mrr,
        text=f"{mrr:.3f}",
        showarrow=True,
        arrowhead=1,
        ax=0,
        ay=-30 if i != 0 else 30,
        font=dict(size=20, color="black"),
        arrowcolor="#00CC96",
        arrowsize=1,
        arrowwidth=2,
    )

# Add a full contour (box) around the plot area
fig.update_layout(
    xaxis=dict(showline=True, linewidth=2, linecolor="black", mirror=True),
    yaxis=dict(showline=True, linewidth=2, linecolor="black", mirror=True),
)

fig.update_layout(
    legend=dict(
        font=dict(size=24),
        x=0.02,
        y=0.98,
        xanchor="left",
        yanchor="top",
        bgcolor="rgba(255,255,255,0.7)",
        bordercolor="black",
        borderwidth=1,
    )
)

fig.update_layout(template="plotly_white" margin=dict(t=20))
fig.write_image("examples-ablation.pdf", scale=2, width=1200, height=800)
