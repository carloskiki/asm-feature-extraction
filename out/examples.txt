0, arm

######
PACKET_get_net_4_0:
loc_AE188:
    PUSH {R7,LR}
    SUB SP, SP, #8
    ADD R7, SP, #0
    STR R0, [R7,#8+var_4]
    STR R1, [R7,#8+var_8]
    LDR R1, [R7,#8+var_8]
    LDR R0, [R7,#8+var_4]
    BL sub_AE11C
    MOV R3, R0
    CMP R3, #0
    BNE loc_AE1A4
loc_AE1A0:
    MOVS R3, #0
    B loc_AE1AE
loc_AE1A4:
    MOVS R1, #4
    LDR R0, [R7,#8+var_4]
    BL sub_ADF88
    MOVS R3, #1
loc_AE1AE:
    MOV R0, R3
    ADDS R7, #8
    MOV SP, R7
    POP {R7,PC}

=====

0, arm

######
ssl_load_ciphers:
loc_9AE7C:
    PUSH {R7,LR}
    SUB SP, SP, #0x18
    ADD R7, SP, #0
    MOV R3, #0x2EC75C
    MOVS R2, #0
    STR R2, [R3]
    BL sub_95CF8
    MOVS R3, #0
    STR R3, [R7,#0x18+var_14]
    MOV R3, #0x25DC6C
    STR R3, [R7,#0x18+var_10]
    B loc_9AF0C
loc_9AEA2:
    LDR R3, [R7,#0x18+var_10]
    LDR R3, [R3,#4]
    CMP R3, #0
    BNE loc_9AEBC
loc_9AEAA:
    MOV R3, #0x2EC69C
    LDR R2, [R7,#0x18+var_14]
    MOVS R1, #0
    STR.W R1, [R3,R2,LSL#2]
    B loc_9AF00
loc_9AEBC:
    LDR R3, [R7,#0x18+var_10]
    LDR R3, [R3,#4]
    MOV R0, R3
    BL sub_13F834
    MOV R3, R0
    MOV R0, R3
    BL sub_12AD88
    STR R0, [R7,#0x18+var_C]
    MOV R3, #0x2EC69C
    LDR R2, [R7,#0x18+var_14]
    LDR R1, [R7,#0x18+var_C]
    STR.W R1, [R3,R2,LSL#2]
    LDR R3, [R7,#0x18+var_C]
    CMP R3, #0
    BNE loc_9AF00
loc_9AEE6:
    LDR R3, [R7,#0x18+var_10]
    LDR R2, [R3]
    MOV R3, #0x2EC75C
    LDR R3, [R3]
    ORRS R2, R3
    MOV R3, #0x2EC75C
    STR R2, [R3]
loc_9AF00:
    LDR R3, [R7,#0x18+var_14]
    ADDS R3, #1
    STR R3, [R7,#0x18+var_14]
    LDR R3, [R7,#0x18+var_10]
    ADDS R3, #8
    STR R3, [R7,#0x18+var_10]
loc_9AF0C:
    LDR R3, [R7,#0x18+var_14]
    CMP R3, #0x15
    BLS loc_9AEA2
loc_9AF12:
    MOV R3, #0x2EC760
    MOVS R2, #0
    STR R2, [R3]
    MOVS R3, #0
    STR R3, [R7,#0x18+var_14]
    MOV R3, #0x25DD1C
    STR R3, [R7,#0x18+var_10]
    B loc_9AFA2
loc_9AF2E:
    LDR R3, [R7,#0x18+var_10]
    LDR R3, [R3,#4]
    MOV R0, R3
    BL sub_13F834
    MOV R3, R0
    MOV R0, R3
    BL sub_12ADBC
    STR R0, [R7,#0x18+var_8]
    MOV R3, #0x2EC6FC
    LDR R2, [R7,#0x18+var_14]
    LDR R1, [R7,#0x18+var_8]
    STR.W R1, [R3,R2,LSL#2]
    LDR R3, [R7,#0x18+var_8]
    CMP R3, #0
    BNE loc_9AF74
loc_9AF58:
    LDR R3, [R7,#0x18+var_10]
    LDR R2, [R3]
    MOV R3, #0x2EC760
    LDR R3, [R3]
    ORRS R2, R3
    MOV R3, #0x2EC760
    STR R2, [R3]
    B loc_9AF96
loc_9AF74:
    LDR R0, [R7,#0x18+var_8]
    BL sub_129164
    STR R0, [R7,#0x18+var_4]
    LDR R3, [R7,#0x18+var_4]
    CMP R3, #0
    BGE loc_9AF86
loc_9AF82:
    MOVS R3, #0
    B loc_9B126
loc_9AF86:
    LDR R1, [R7,#0x18+var_4]
    MOV R3, #0x2EC72C
    LDR R2, [R7,#0x18+var_14]
    STR.W R1, [R3,R2,LSL#2]
loc_9AF96:
    LDR R3, [R7,#0x18+var_14]
    ADDS R3, #1
    STR R3, [R7,#0x18+var_14]
    LDR R3, [R7,#0x18+var_10]
    ADDS R3, #8
    STR R3, [R7,#0x18+var_10]
loc_9AFA2:
    LDR R3, [R7,#0x18+var_14]
    CMP R3, #0xB
    BLS loc_9AF2E
loc_9AFA8:
    MOV R3, #0x2EC6FC
    LDR R3, [R3]
    CMP R3, #0
    BNE loc_9AFBA
loc_9AFB6:
    MOVS R3, #0
    B loc_9B126
loc_9AFBA:
    MOV R3, #0x2EC6FC
    LDR R3, [R3,#(dword_2EC700 - 0x2EC6FC)]
    CMP R3, #0
    BNE loc_9AFCC
loc_9AFC8:
    MOVS R3, #0
    B loc_9B126
loc_9AFCC:
    MOV R3, #0x2EC764
    MOVS R2, #0
    STR R2, [R3]
    MOV R3, #0x2EC768
    MOVS R2, #0
    STR R2, [R3]
    MOV R0, #0x25F384
    BL sub_9AE00
    MOV R2, R0
    MOV R3, #0x2E8A20
    STR R2, [R3,#(dword_2E8A2C - 0x2E8A20)]
    MOV R3, #0x2E8A20
    LDR R3, [R3,#(dword_2E8A2C - 0x2E8A20)]
    CMP R3, #0
    BEQ loc_9B018
loc_9B00A:
    MOV R3, #0x2EC72C
    MOVS R2, #0x20
    STR R2, [R3,#(dword_2EC738 - 0x2EC72C)]
    B loc_9B030
loc_9B018:
    MOV R3, #0x2EC760
    LDR R3, [R3]
    ORR.W R2, R3, #8
    MOV R3, #0x2EC760
    STR R2, [R3]
loc_9B030:
    MOV R0, #0x25F390
    BL sub_9AE00
    MOV R2, R0
    MOV R3, #0x2E8A20
    STR R2, [R3,#(dword_2E8A3C - 0x2E8A20)]
    MOV R3, #0x2E8A20
    LDR R3, [R3,#(dword_2E8A3C - 0x2E8A20)]
    CMP R3, #0
    BEQ loc_9B064
loc_9B056:
    MOV R3, #0x2EC72C
    MOVS R2, #0x20
    STR R2, [R3,#(dword_2EC748 - 0x2EC72C)]
    B loc_9B07C
loc_9B064:
    MOV R3, #0x2EC760
    LDR R3, [R3]
    ORR.W R2, R3, #0x100
    MOV R3, #0x2EC760
    STR R2, [R3]
loc_9B07C:
    MOV R0, #0x25F39C
    BL sub_9AE00
    MOV R3, R0
    CMP R3, #0
    BNE loc_9B0A6
loc_9B08E:
    MOV R3, #0x2EC768
    LDR R3, [R3]
    ORR.W R2, R3, #0xA0
    MOV R3, #0x2EC768
    STR R2, [R3]
loc_9B0A6:
    MOV R0, #0x25F3A8
    BL sub_9AE00
    MOV R3, R0
    CMP R3, #0
    BNE loc_9B0D0
loc_9B0B8:
    MOV R3, #0x2EC768
    LDR R3, [R3]
    ORR.W R2, R3, #0x80
    MOV R3, #0x2EC768
    STR R2, [R3]
loc_9B0D0:
    MOV R0, #0x25F3B8
    BL sub_9AE00
    MOV R3, R0
    CMP R3, #0
    BNE loc_9B0FA
loc_9B0E2:
    MOV R3, #0x2EC768
    LDR R3, [R3]
    ORR.W R2, R3, #0x80
    MOV R3, #0x2EC768
    STR R2, [R3]
loc_9B0FA:
    MOV R3, #0x2EC768
    LDR R3, [R3]
    AND.W R3, R3, #0xA0
    CMP R3, #0xA0
    BNE loc_9B124
loc_9B10C:
    MOV R3, #0x2EC764
    LDR R3, [R3]
    ORR.W R2, R3, #0x10
    MOV R3, #0x2EC764
    STR R2, [R3]
loc_9B124:
    MOVS R3, #1
loc_9B126:
    MOV R0, R3
    ADDS R7, #0x18
    MOV SP, R7
    POP {R7,PC}

=====

0, arm

######
EC_GF2m_simple_method:
loc_1CC86C:
    PUSH {R7}
    ADD R7, SP, #0
    MOV R3, #0x2A4AFC
    MOV R0, R3
    MOV SP, R7
    POP.W {R7}
    BX LR

=====

0, arm

######
BIO_read:
loc_E5470:
    PUSH {R7,LR}
    SUB SP, SP, #0x20
    ADD R7, SP, #0
    STR R0, [R7,#0x20+var_14]
    STR R1, [R7,#0x20+var_18]
    STR R2, [R7,#0x20+var_1C]
    MOV R3, #0x2DFF8C
    LDR R3, [R3]
    STR R3, [R7,#0x20+var_4]
    LDR R3, [R7,#0x20+var_1C]
    CMP R3, #0
    BGE loc_E5492
loc_E548E:
    MOVS R3, #0
    B loc_E54AE
loc_E5492:
    LDR R2, [R7,#0x20+var_1C]
    ADD.W R3, R7, #0x14
    LDR R1, [R7,#0x20+var_18]
    LDR R0, [R7,#0x20+var_14]
    BL sub_E5338
    STR R0, [R7,#0x20+var_8]
    LDR R3, [R7,#0x20+var_8]
    CMP R3, #0
    BLE loc_E54AC
loc_E54A8:
    LDR R3, [R7,#0x20+var_C]
    STR R3, [R7,#0x20+var_8]
loc_E54AC:
    LDR R3, [R7,#0x20+var_8]
loc_E54AE:
    MOV R0, R3
    MOV R3, #0x2DFF8C
    LDR R2, [R7,#0x20+var_4]
    LDR R3, [R3]
    CMP R2, R3
    BEQ loc_E54C4
loc_E54C0:
    BL sub_20D020
loc_E54C4:
    ADDS R7, #0x20
    MOV SP, R7
    POP {R7,PC}

=====

0, arm

######
rawmemchr:
loc_2043A0:
    LDRB R2, [R0]
    AND.W R3, R0, #7
    UXTB R1, R1
    RSB.W R3, R3, #0xF
    CMP R2, R1
    IT 
    BXEQ LR
loc_2043B2:
    LDRB.W R2, [R0,#1]!
    SUBS R3, #1
    IT 
    CMPNE R2, R1
    BNE loc_2043B2
loc_2043BE:
    CMP R2, R1
    IT 
    BXEQ LR
loc_2043C4:
    ADD.W R0, R0, #1
    LDRD.W R2, R3, [R0],#8
    ORR.W R1, R1, R1,LSL#8
    MOVW R12, #0x101
    PLD [R0,#0x40]
    MOVT.W R12, #0x101
    ORR.W R1, R1, R1,LSL#16
loc_2043E0:
    EOR.W R2, R2, R1
    EOR.W R3, R3, R1
    UQSUB8.W R2, R12, R2
    UQSUB8.W R3, R12, R3
    PLD [R0,#0x80]
    ORRS R3, R2
    IT 
    LDRDEQ.W R2, R3, [R0],#8
    BEQ loc_2043E0
loc_2043FE:
    CMP R2, #0
    SUB.W R0, R0, #4
    ITE 
    MOVEQ R2, R3
    SUBNE R0, #4
    REV R2, R2
    CLZ.W R2, R2
    ADD.W R0, R0, R2,LSR#3
    BX LR

=====

0, arm

######
cms_DigestedData_create:
loc_1B41E0:
    PUSH {R4,R7,LR}
    SUB SP, SP, #0x14
    ADD R7, SP, #0
    STR R0, [R7,#0x14+var_10]
    BL sub_F86AC
    STR R0, [R7,#0x14+var_C]
    LDR R3, [R7,#0x14+var_C]
    CMP R3, #0
    BNE loc_1B41F8
loc_1B41F4:
    MOVS R3, #0
    B loc_1B424C
loc_1B41F8:
    MOV R0, #0x270F08
    BL sub_DB36C
    STR R0, [R7,#0x14+var_8]
    LDR R3, [R7,#0x14+var_8]
    CMP R3, #0
    BEQ loc_1B4242
loc_1B420C:
    MOVS R0, #0x19
    BL sub_13F748
    MOV R2, R0
    LDR R3, [R7,#0x14+var_C]
    STR R2, [R3]
    LDR R3, [R7,#0x14+var_C]
    LDR R2, [R7,#0x14+var_8]
    STR R2, [R3,#4]
    LDR R3, [R7,#0x14+var_8]
    MOVS R2, #0
    STR R2, [R3]
    LDR R3, [R7,#0x14+var_8]
    LDR R4, [R3,#8]
    MOVS R0, #0x15
    BL sub_13F748
    MOV R3, R0
    STR R3, [R4]
    LDR R3, [R7,#0x14+var_8]
    LDR R3, [R3,#4]
    LDR R1, [R7,#0x14+var_10]
    MOV R0, R3
    BL sub_DD704
    LDR R3, [R7,#0x14+var_C]
    B loc_1B424C
loc_1B4242:
    NOP 
    LDR R0, [R7,#0x14+var_C]
    BL sub_F86C4
    MOVS R3, #0
loc_1B424C:
    MOV R0, R3
    ADDS R7, #0x14
    MOV SP, R7
    POP {R4,R7,PC}

=====

0, arm

######
sk_X509_dup:
loc_144490:
    PUSH {R7,LR}
    SUB SP, SP, #8
    ADD R7, SP, #0
    STR R0, [R7,#8+var_4]
    LDR R0, [R7,#8+var_4]
    BL sub_172DD0
    MOV R3, R0
    MOV R0, R3
    ADDS R7, #8
    MOV SP, R7
    POP {R7,PC}

=====

0, arm

######
sk_OPENSSL_STRING_value_15:
loc_1CE418:
    PUSH {R7,LR}
    SUB SP, SP, #8
    ADD R7, SP, #0
    STR R0, [R7,#8+var_4]
    STR R1, [R7,#8+var_8]
    LDR R1, [R7,#8+var_8]
    LDR R0, [R7,#8+var_4]
    BL sub_1735B4
    MOV R3, R0
    MOV R0, R3
    ADDS R7, #8
    MOV SP, R7
    POP {R7,PC}

=====

0, arm

######
SRP_user_pwd_set_ids:
loc_171D08:
    PUSH {R7,LR}
    SUB SP, SP, #0x10
    ADD R7, SP, #0
    STR R0, [R7,#0x10+var_4]
    STR R1, [R7,#0x10+var_8]
    STR R2, [R7,#0x10+var_C]
    LDR R3, [R7,#0x10+var_8]
    CMP R3, #0
    BEQ loc_171D3C
loc_171D1A:
    MOVS R2, #0x4F
    MOV R1, #0x293178
    LDR R0, [R7,#0x10+var_8]
    BL sub_13DAB0
    MOV R2, R0
    LDR R3, [R7,#0x10+var_4]
    STR R2, [R3]
    LDR R3, [R7,#0x10+var_4]
    LDR R3, [R3]
    CMP R3, #0
    BNE loc_171D3C
loc_171D38:
    MOVS R3, #0
    B loc_171D68
loc_171D3C:
    LDR R3, [R7,#0x10+var_C]
    CMP R3, #0
    BEQ loc_171D60
loc_171D42:
    MOVS R2, #0x51
    MOV R1, #0x293178
    LDR R0, [R7,#0x10+var_C]
    BL sub_13DAB0
    MOV R2, R0
    LDR R3, [R7,#0x10+var_4]
    STR R2, [R3,#0x14]
    LDR R3, [R7,#0x10+var_4]
    LDR R3, [R3,#0x14]
    CMP R3, #0
    BEQ loc_171D64
loc_171D60:
    MOVS R3, #1
    B loc_171D66
loc_171D64:
    MOVS R3, #0
loc_171D66:
    NOP 
loc_171D68:
    MOV R0, R3
    ADDS R7, #0x10
    MOV SP, R7
    POP {R7,PC}

=====

0, arm

######
SSL_use_certificate:
loc_A7490:
    PUSH {R7,LR}
    SUB SP, SP, #0x18
    ADD R7, SP, #8
    STR R0, [R7,#0x10+var_C]
    STR R1, [R7,#0x10+var_10]
    LDR R3, [R7,#0x10+var_10]
    CMP R3, #0
    BNE loc_A74BA
loc_A74A0:
    MOVS R3, #0x1F
    STR R3, [SP,#0x18+var_18]
    MOV R3, #0x2601EC
    MOVS R2, #0x43
    MOVS R1, #0xC6
    MOVS R0, #0x14
    BL sub_11E488
    MOVS R3, #0
    B loc_A74FC
loc_A74BA:
    MOVS R3, #1
    STR R3, [SP,#0x18+var_18]
    MOVS R3, #0
    LDR R2, [R7,#0x10+var_10]
    MOVS R1, #0
    LDR R0, [R7,#0x10+var_C]
    BL sub_C94C0
    STR R0, [R7,#0x10+var_4]
    LDR R3, [R7,#0x10+var_4]
    CMP R3, #1
    BEQ loc_A74EC
loc_A74D2:
    MOVS R3, #0x24
    STR R3, [SP,#0x18+var_18]
    MOV R3, #0x2601EC
    LDR R2, [R7,#0x10+var_4]
    MOVS R1, #0xC6
    MOVS R0, #0x14
    BL sub_11E488
    MOVS R3, #0
    B loc_A74FC
loc_A74EC:
    LDR R3, [R7,#0x10+var_C]
    LDR.W R3, [R3,#0x378]
    LDR R1, [R7,#0x10+var_10]
    MOV R0, R3
    BL sub_A7C04
    MOV R3, R0
loc_A74FC:
    MOV R0, R3
    ADDS R7, #0x10
    MOV SP, R7
    POP {R7,PC}

=====

1, arm

######
BIO_get_retry_reason:
loc_7D4AC:
    LDR R0, [R0,#0x1C]
    BX LR

=====

1, arm

######
tls13_generate_handshake_secret:
loc_6A78C:
    PUSH {R4-R6,LR}
    SUB SP, SP, #8
    MOV R4, R0
    MOV R5, R1
    MOV R6, R2
    BL sub_4C204
    ADD.W R3, R4, #0xFC
    STR R3, [SP,#0x18+var_14]
    STR R6, [SP,#0x18+var_18]
    MOV R3, R5
    ADD.W R2, R4, #0xBC
    MOV R1, R0
    MOV R0, R4
    BL sub_6A594
    ADD SP, SP, #8
    POP {R4-R6,PC}

=====

1, arm

######
i2d_RSAPrivateKey:
loc_CB028:
    PUSH {R3,LR}
    LDR R2, =unk_1BBB2C
    BL sub_75F10
    POP {R3,PC}

=====

1, arm

######
EVP_aes_256_cbc:
loc_A65F0:
    LDR R0, =unk_1A4EDC
    BX LR

=====

1, arm

######
HMAC_CTX_free:
loc_AE9E4:
    CBZ R0, locret_AEA12
loc_AE9E6:
    PUSH {R4,LR}
    MOV R4, R0
    BL sub_AE780
    LDR R0, [R4,#8]
    BL sub_A48FC
    LDR R0, [R4,#0xC]
    BL sub_A48FC
    LDR R0, [R4,#4]
    BL sub_A48FC
    MOVS R2, #0x9D
    MOV R1, #0x1A6A58
    MOV R0, R4
    BL sub_B2B18
    POP {R4,PC}
loc_AEA12:
    BX LR

=====

1, arm

######
UI_method_get_opener:
loc_DF8CC:
    CBZ R0, loc_DF8D2
loc_DF8CE:
    LDR R0, [R0,#4]
    BX LR
loc_DF8D2:
    MOVS R0, #0
    BX LR

=====

1, arm

######
POLICY_CONSTRAINTS_new:
loc_F2E90:
    PUSH {R3,LR}
    MOV R0, #0x1C1A4C
    BL sub_76AD0
    POP {R3,PC}

=====

1, arm

######
X509_VERIFY_PARAM_inherit:
loc_E7B78:
    PUSH {R3-R7,LR}
    CMP R1, #0
    BEQ.W loc_E7CAE
loc_E7B80:
    MOV R5, R1
    LDR R2, [R0,#8]
    LDR R3, [R1,#8]
    ORRS R3, R2
    TST.W R3, #0x10
    ITT 
    MOVNE R2, #0
    STRNE R2, [R0,#8]
    TST.W R3, #8
    IT 
    MOVNE R3, #1
    BNE.W loc_E7DBA
loc_E7B9E:
    MOV R4, R0
    AND.W R7, R3, #1
    ANDS.W R6, R3, #2
    BNE.W loc_E7D42
loc_E7BAC:
    LDR R2, [R1,#0x10]
    CBZ R2, loc_E7BC0
loc_E7BB0:
    CMP R7, #0
    BNE.W loc_E7D48
loc_E7BB6:
    LDR R2, [R0,#0x10]
    CMP R2, #0
    BEQ.W loc_E7D48
loc_E7BBE:
    B loc_E7D4E
loc_E7BC0:
    LDR R2, [R5,#0x14]
    CBZ R2, loc_E7BD8
loc_E7BC4:
    CBNZ R7, loc_E7BCE
loc_E7BC6:
    LDR R2, [R4,#0x14]
    CMP R2, #0
    BNE.W loc_E7D58
loc_E7BCE:
    LDR R2, [R5,#0x14]
    STR R2, [R4,#0x14]
    CMP R6, #0
    BNE.W loc_E7D64
loc_E7BD8:
    LDR R2, [R5,#0x18]
    CMP.W R2, #0xFFFFFFFF
    BEQ loc_E7BF6
loc_E7BE0:
    CBNZ R7, loc_E7BEC
loc_E7BE2:
    LDR R2, [R4,#0x18]
    CMP.W R2, #0xFFFFFFFF
    BNE.W loc_E7D6A
loc_E7BEC:
    LDR R2, [R5,#0x18]
    STR R2, [R4,#0x18]
    CMP R6, #0
    BNE.W loc_E7D76
loc_E7BF6:
    LDR R2, [R5,#0x1C]
    CMP.W R2, #0xFFFFFFFF
    BEQ loc_E7C12
loc_E7BFE:
    CBNZ R7, loc_E7C08
loc_E7C00:
    LDR R2, [R4,#0x1C]
    CMP.W R2, #0xFFFFFFFF
    BNE loc_E7C12
loc_E7C08:
    LDR R2, [R5,#0x1C]
    STR R2, [R4,#0x1C]
    CMP R6, #0
    BNE.W loc_E7D86
loc_E7C12:
    LDR R2, [R4,#0xC]
    TST.W R2, #2
    BNE loc_E7CC6
loc_E7C1A:
    LDR R2, [R5,#4]
    STR R2, [R4,#4]
    LDR R2, [R4,#0xC]
    BIC.W R2, R2, #2
    STR R2, [R4,#0xC]
    TST.W R3, #4
    BEQ loc_E7C30
loc_E7C2C:
    MOVS R3, #0
    STR R3, [R4,#0xC]
loc_E7C30:
    LDR R2, [R4,#0xC]
    LDR R3, [R5,#0xC]
    ORRS R3, R2
    STR R3, [R4,#0xC]
    CMP R6, #0
    BNE loc_E7CF6
loc_E7C3C:
    LDR R1, [R5,#0x20]
    CBZ R1, loc_E7C4E
loc_E7C40:
    CMP R7, #0
    BNE loc_E7CCE
loc_E7C44:
    LDR R3, [R4,#0x20]
    CMP R3, #0
    BNE.W loc_E7D9C
loc_E7C4C:
    B loc_E7CCE
loc_E7C4E:
    LDR R3, [R5,#0x24]
    CBZ R3, loc_E7C80
loc_E7C52:
    CMP R7, #0
    BNE loc_E7D06
loc_E7C56:
    LDR R3, [R4,#0x24]
    CMP R3, #0
    BNE.W loc_E7DA6
loc_E7C5E:
    B loc_E7D06
loc_E7C60:
    MOV R2, #0xE776D
    MOV R1, #0xE77D9
    BL sub_DA154
    STR R0, [R4,#0x24]
    CBZ R0, loc_E7CB2
loc_E7C78:
    LDR R3, [R5,#0x28]
    STR R3, [R4,#0x28]
    CMP R6, #0
    BNE loc_E7D30
loc_E7C80:
    LDR R1, [R5,#0x30]
    CBZ R1, loc_E7C92
loc_E7C84:
    CMP R7, #0
    BNE loc_E7D20
loc_E7C88:
    LDR R3, [R4,#0x30]
    CMP R3, #0
    BNE.W loc_E7DB0
loc_E7C90:
    B loc_E7D20
loc_E7C92:
    LDR R3, [R5,#0x38]
    CBZ R3, loc_E7CB6
loc_E7C96:
    CBNZ R7, loc_E7C9C
loc_E7C98:
    LDR R3, [R4,#0x38]
    CBNZ R3, loc_E7CBA
loc_E7C9C:
    LDR R2, [R5,#0x3C]
    LDR R1, [R5,#0x38]
    MOV R0, R4
    BL sub_E7B54
    MOVS R3, R0
    IT 
    MOVNE R3, #1
    B loc_E7DBA
loc_E7CAE:
    MOVS R3, #1
    B loc_E7DBA
loc_E7CB2:
    MOVS R3, #0
    B loc_E7DBA
loc_E7CB6:
    MOVS R3, #1
    B loc_E7DBA
loc_E7CBA:
    MOVS R3, #1
    B loc_E7DBA
loc_E7CBE:
    LDR R3, [R5,#0xC]
    ORRS R2, R3
    STR R2, [R4,#0xC]
    B loc_E7C3C
loc_E7CC6:
    TST.W R3, #4
    BNE loc_E7C2C
loc_E7CCC:
    B loc_E7CBE
loc_E7CCE:
    MOV R0, R4
    BL sub_E7A4C
    MOV R3, R0
    CMP R0, #0
    BEQ loc_E7DBA
loc_E7CDA:
    B loc_E7C4E
loc_E7CDC:
    MOV R1, #0xE776D
    LDR R0, [R4,#0x24]
    BL sub_DA220
    MOVS R3, #0
    STR R3, [R4,#0x24]
    LDR R0, [R5,#0x24]
    CMP R0, #0
    BNE loc_E7C60
loc_E7CF4:
    B loc_E7D30
loc_E7CF6:
    LDR R1, [R5,#0x20]
    MOV R0, R4
    BL sub_E7A4C
    MOV R3, R0
    CMP R0, #0
    BNE loc_E7CDC
loc_E7D04:
    B loc_E7DBA
loc_E7D06:
    MOV R1, #0xE776D
    LDR R0, [R4,#0x24]
    BL sub_DA220
    MOVS R3, #0
    STR R3, [R4,#0x24]
    LDR R0, [R5,#0x24]
    CMP R0, #0
    BNE loc_E7C60
loc_E7D1E:
    B loc_E7C80
loc_E7D20:
    LDR R2, [R5,#0x34]
    MOV R0, R4
    BL sub_E7B40
    MOV R3, R0
    CMP R0, #0
    BEQ loc_E7DBA
loc_E7D2E:
    B loc_E7C92
loc_E7D30:
    LDR R2, [R5,#0x34]
    LDR R1, [R5,#0x30]
    MOV R0, R4
    BL sub_E7B40
    MOV R3, R0
    CMP R0, #0
    BNE loc_E7C9C
loc_E7D40:
    B loc_E7DBA
loc_E7D42:
    LDR R2, [R1,#0x10]
    STR R2, [R0,#0x10]
    B loc_E7BCE
loc_E7D48:
    LDR R2, [R5,#0x10]
    STR R2, [R4,#0x10]
    B loc_E7BC0
loc_E7D4E:
    LDR R2, [R1,#0x14]
    CMP R2, #0
    BNE.W loc_E7BC6
loc_E7D56:
    B loc_E7BD8
loc_E7D58:
    LDR R2, [R5,#0x18]
    CMP.W R2, #0xFFFFFFFF
    BNE.W loc_E7BE2
loc_E7D62:
    B loc_E7BF6
loc_E7D64:
    LDR R2, [R5,#0x18]
    STR R2, [R4,#0x18]
    B loc_E7C08
loc_E7D6A:
    LDR R2, [R5,#0x1C]
    CMP.W R2, #0xFFFFFFFF
    BNE.W loc_E7C00
loc_E7D74:
    B loc_E7C12
loc_E7D76:
    LDR R2, [R5,#0x1C]
    STR R2, [R4,#0x1C]
    B loc_E7C1A
loc_E7D7C:
    LDR R2, [R4,#0xC]
    LDR R3, [R5,#0xC]
    ORRS R3, R2
    STR R3, [R4,#0xC]
    B loc_E7CF6
loc_E7D86:
    LDR R2, [R5,#4]
    STR R2, [R4,#4]
    LDR R2, [R4,#0xC]
    BIC.W R2, R2, #2
    STR R2, [R4,#0xC]
    TST.W R3, #4
    BNE.W loc_E7C2C
loc_E7D9A:
    B loc_E7D7C
loc_E7D9C:
    LDR R3, [R5,#0x24]
    CMP R3, #0
    BNE.W loc_E7C56
loc_E7DA4:
    B loc_E7C80
loc_E7DA6:
    LDR R1, [R5,#0x30]
    CMP R1, #0
    BNE.W loc_E7C88
loc_E7DAE:
    B loc_E7C92
loc_E7DB0:
    LDR R3, [R5,#0x38]
    CMP R3, #0
    BNE.W loc_E7C98
loc_E7DB8:
    MOVS R3, #1
loc_E7DBA:
    MOV R0, R3
    POP {R3-R7,PC}

=====

1, arm

######
fileno_unlocked:
loc_128678:
    LDR R3, [R0]
    LSLS R3, R3, #0x12
    BPL loc_128686
loc_12867E:
    LDR R0, [R0,#0x38]
    CMP R0, #0
    BLT loc_128686
loc_128684:
    BX LR
loc_128686:
    LDR R3, =(dword_209024 - 0x128696)
    MRC 0, R2,c13,c0, 3
    MOVS R1, #9
    MOV.W R0, #0xFFFFFFFF
    ADD R3, PC
    LDR R3, [R3]
    STR R1, [R2,R3]
    B locret_128684

=====

1, arm

######
NETSCAPE_SPKI_new:
loc_784B0:
    PUSH {R3,LR}
    LDR R0, =unk_1959BC
    BL sub_76AD0
    POP {R3,PC}

=====

2, arm

######
BN_mask_bits:
loc_7E8CC:
    CMP R1, #0
    BLT loc_7E920
loc_7E8D0:
    LDR R2, [R0,#4]
    ASRS R3, R1, #5
    CMP R3, R2
    BGE loc_7E920
loc_7E8D8:
    ANDS.W R1, R1, #0x1F
    PUSH {R4,R5}
    ITTTT 
    MOVNE.W R2, #0xFFFFFFFF
    LDRNE R4, [R0]
    ADDNE R5, R3, #1
    LSLNE.W R1, R2, R1
    ITETT 
    STRNE R5, [R0,#4]
    STREQ R3, [R0,#4]
    LDRNE.W R2, [R4,R3,LSL#2]
    BICNE R2, R1
    ITT 
    STRNE.W R2, [R4,R3,LSL#2]
    LDRNE R3, [R0,#4]
    CMP R3, #0
    BLE loc_7E916
loc_7E904:
    LDR R2, [R0]
    ADD.W R2, R2, R3,LSL#2
loc_7E90A:
    LDR.W R1, [R2,#-4]!
    CBNZ R1, loc_7E914
loc_7E910:
    SUBS R3, #1
    BNE loc_7E90A
loc_7E914:
    STR R3, [R0,#4]
loc_7E916:
    CBNZ R3, loc_7E924
loc_7E918:
    STR R3, [R0,#0xC]
    MOVS R0, #1
    POP {R4,R5}
    BX LR
loc_7E920:
    MOVS R0, #0
    BX LR
loc_7E924:
    MOVS R0, #1
    POP {R4,R5}
    BX LR

=====

2, arm

######
asn1_string_set_int64:
loc_6B424:
    PUSH {R4-R7,LR}
    MOV R6, #0x209F8C
    SUB SP, SP, #0x14
    CMP R2, #0
    LDR R1, [R6]
    LDR R7, [SP,#0x28+arg_0]
    STR R1, [SP,#0x28+var_1C]
    SBCS.W R1, R3, #0
    STR R7, [R0,#4]
    ITT 
    ADDGE.W R5, SP, #0x28+var_1D
    MOVGE.W LR, #8
    BLT loc_6B482
loc_6B44A:
    LSRS R4, R2, #8
    MOV.W R12, R3,LSR#8
    ORR.W R4, R4, R3,LSL#24
    MOV R1, R5
    MOV R3, R12
    STRB.W R2, [R5],#-1
    MOV R2, R4
    ORRS.W R4, R2, R3
    ADD.W LR, LR, #0xFFFFFFFF
    BNE loc_6B44A
loc_6B468:
    BIC.W R7, R7, #0x100
    STR R7, [R0,#4]
loc_6B46E:
    RSB.W R2, LR, #8
    BL sub_6F77C
    LDR R2, [SP,#0x28+var_1C]
    LDR R3, [R6]
    CMP R2, R3
    BNE loc_6B4B6
loc_6B47E:
    ADD SP, SP, #0x14
    POP {R4-R7,PC}
loc_6B482:
    NEGS R4, R2
    ADD.W R2, SP, #0x28+var_1D
    SBC.W R5, R3, R3,LSL#1
    MOV.W LR, #8
loc_6B490:
    LSRS R3, R4, #8
    MOV.W R12, R5,LSR#8
    ORR.W R3, R3, R5,LSL#24
    MOV R1, R2
    MOV R5, R12
    STRB.W R4, [R2],#-1
    MOV R4, R3
    ORRS.W R3, R4, R5
    ADD.W LR, LR, #0xFFFFFFFF
    BNE loc_6B490
loc_6B4AE:
    ORR.W R7, R7, #0x100
    STR R7, [R0,#4]
    B loc_6B46E
loc_6B4B6:
    BL sub_13BFF4

=====

2, arm

######
TS_MSG_IMPRINT_dup:
loc_D7714:
    MOV R1, R0
    MOV R0, #0x1BEB7C
    B.W sub_F216C

=====

2, arm

######
EVP_CIPHER_CTX_encrypting:
loc_A62D8:
    LDR R0, [R0,#8]
    BX LR

=====

2, arm

######
OBJ_NAME_cleanup:
loc_AD468:

loc_B4368:
    PUSH {R4-R6,LR}
    MOV R4, #0x2176B4
    MOV R5, R0
    LDR R0, [R4,#(dword_2176B8 - 0x2176B4)]
    CBZ R0, locret_B43A6
loc_B4378:
    STR R5, [R4,#(dword_2176C8 - 0x2176B4)]
    BL sub_AD464
    MOVS R1, #0
    MOV R6, R0
    LDR R0, [R4,#(dword_2176B8 - 0x2176B4)]
    BL sub_AD468
    MOVW R1, #0x4251
    LDR R0, [R4,#(dword_2176B8 - 0x2176B4)]
    MOVT.W R1, #0xB
    BL sub_AD3D4
    CMP R5, #0
    BLT loc_B43A8
loc_B439A:
    MOV R1, R6
    LDR R0, [R4,#(dword_2176B8 - 0x2176B4)]
    POP.W {R4-R6,LR}
    B.W sub_AD468
loc_B43A6:
    POP {R4-R6,PC}
loc_B43A8:
    LDR R0, [R4,#(dword_2176B8 - 0x2176B4)]
    BL sub_AD0F8
    LDR R0, [R4]
    MOV R1, #0xB3E55
    BL sub_D6904
    LDR R0, [R4,#(dword_2176BC - 0x2176B4)]
    BL sub_D75A0
    MOVS R3, #0
    STR R3, [R4,#(dword_2176B8 - 0x2176B4)]
    STR R3, [R4]
    STR R3, [R4,#(dword_2176BC - 0x2176B4)]
    POP {R4-R6,PC}

=====

2, arm

######
check_key_level:
loc_E0E84:
    PUSH {R4,LR}
    MOV R4, R0
    MOV R0, R1
    BL sub_DED38
    LDR R3, [R4]
    LDR R4, [R3,#0x1C]
    CBZ R0, locret_E0EBE
loc_E0E94:
    CMP R4, #0
    BLE loc_E0EBA
loc_E0E98:
    BL sub_A7CB8
    CMP R4, #5
    MOV R3, #0x1C0CF8
    IT 
    MOVGE R4, #5
    SUBS R4, #1
    LDR.W R3, [R3,R4,LSL#2]
    CMP R0, R3
    ITE 
    MOVLT R0, #0
    MOVGE R0, #1
    POP {R4,PC}
loc_E0EBA:
    MOVS R0, #1
    POP {R4,PC}
loc_E0EBE:
    POP {R4,PC}

=====

2, arm

######
EVP_CIPHER_meth_set_impl_ctx_size:
loc_10BD10:
    STR R1, [R0,#0x20]
    MOVS R0, #1
    BX LR

=====

2, arm

######
X509v3_asid_add_id_or_range:
loc_EA03C:
    PUSH {R3-R7,LR}
    CMP R0, #0
    BEQ loc_EA0A8
loc_EA042:
    CMP R1, #0
    BEQ loc_EA0BE
loc_EA046:
    CMP R1, #1
    BNE loc_EA0A8
loc_EA04A:
    LDR R1, [R0,#4]
    ADDS R4, R0, #4
loc_EA04E:
    MOV R7, R3
    MOV R6, R2
    CBZ R1, loc_EA09C
loc_EA054:
    LDR R3, [R1]
    CBZ R3, loc_EA0A8
loc_EA058:
    MOV R0, #0x1C1D08
    BL sub_739C0
    MOV R5, R0
    CBZ R0, loc_EA0A8
loc_EA068:
    CBZ R7, loc_EA0C4
loc_EA06A:
    MOVS R3, #1
    LDR R0, =unk_1C1D24
    STR R3, [R5]
    BL sub_739C0
    STR R0, [R5,#4]
    CBZ R0, loc_EA0AC
loc_EA078:
    LDR R0, [R0]
    BL sub_742FC
    LDR R3, [R5,#4]
    STR R6, [R3]
    LDR R0, [R3,#4]
    BL sub_742FC
    LDR R3, [R5,#4]
    STR R7, [R3,#4]
loc_EA08C:
    LDR R3, [R4]
    MOV R1, R5
    LDR R0, [R3,#4]
    BL sub_D6728
    CBZ R0, loc_EA0AC
loc_EA098:
    MOVS R0, #1
    POP {R3-R7,PC}
loc_EA09C:
    LDR R0, =unk_1C1D40
    BL sub_739C0
    MOV R5, R0
    STR R0, [R4]
    CBNZ R0, loc_EA0CA
loc_EA0A8:
    MOVS R0, #0
    POP {R3-R7,PC}
loc_EA0AC:
    MOV R0, R5
    MOV R1, #0x1C1D08
    BL sub_7346C
    MOVS R0, #0
    POP {R3-R7,PC}
loc_EA0BE:
    MOV R4, R0
    LDR R1, [R0]
    B loc_EA04E
loc_EA0C4:
    STR R7, [R0]
    STR R6, [R0,#4]
    B loc_EA08C
loc_EA0CA:
    MOV R0, #0xE98D5
    BL sub_D65D8
    STR R0, [R5,#4]
    LDR R3, [R4]
    LDR R2, [R3,#4]
    CMP R2, #0
    BEQ loc_EA0A8
loc_EA0E0:
    MOVS R2, #1
    STR R2, [R3]
    B loc_EA058

=====

2, arm

######
__stack_chk_fail:
loc_13BFF4:
    MOV R0, #0x1E5AA8
    PUSH {R3,LR}
    BL sub_13C004

=====

2, arm

######
bio_call_callback:
loc_79ABC:
    PUSH.W {R4-R10,LR}
    SUB SP, SP, #8
    LDR R6, [R0,#8]
    LDR.W R10, [SP,#0x28+arg_0]
    LDR.W R9, [SP,#0x28+arg_4]
    LDR R7, [SP,#0x28+arg_8]
    LDR.W R8, [SP,#0x28+arg_C]
    CBZ R6, loc_79ADE
loc_79AD4:
    MOV R12, R6
    ADD SP, SP, #8
    POP.W {R4-R10,LR}
    BX R12
loc_79ADE:
    BIC.W R6, R1, #0x80
    MOV R4, R0
    SUB.W R12, R6, #2
    MOV R5, R1
    CMP R6, #5
    IT 
    CMPNE.W R12, #1
    BHI loc_79B22
loc_79AF4:
    CMP R3, #0
    BLT loc_79B42
loc_79AF8:
    MOV LR, R2
    CBZ R7, loc_79B08
loc_79AFC:
    LSLS R2, R1, #0x18
    BPL loc_79B08
loc_79B00:
    LDR.W R7, [R8]
    CMP R7, #0
    BLT loc_79B42
loc_79B08:
    STR R7, [SP,#0x28+var_24]
    MOV R1, R5
    STR.W R9, [SP,#0x28+var_28]
    MOV R2, LR
    LDR R5, [R4,#4]
    MOV R0, R4
    BLX R5
    CMP R0, #0
    BGE loc_79B36
loc_79B1C:
    ADD SP, SP, #8
    POP.W {R4-R10,PC}
loc_79B22:
    STR R7, [SP,#0x28+var_24]
    MOV R3, R10
    STR.W R9, [SP,#0x28+var_28]
    LDR R4, [R0,#4]
    BLX R4
    CMP R0, #0
    BLT loc_79B1C
loc_79B32:
    CMP R6, #4
    BNE loc_79B1C
loc_79B36:
    STR.W R0, [R8]
    MOVS R0, #1
    ADD SP, SP, #8
    POP.W {R4-R10,PC}
loc_79B42:
    MOV.W R0, #0xFFFFFFFF
    B loc_79B1C

=====

3, arm

######
Camellia_set_key:
loc_99C54:
    CMP R2, #0
    IT 
    CMPNE R0, #0
    BEQ loc_99C8E
loc_99C5C:
    BIC.W R3, R1, #0x40
    CMP R3, #0x80
    IT 
    CMPNE.W R1, #0x100
    PUSH {R4-R6,LR}
    MOV R5, R1
    ITE 
    MOVNE R4, #1
    MOVEQ R4, #0
    BNE loc_99C88
loc_99C74:
    MOV R1, R0
    MOV R0, R5
    MOV R6, R2
    BL sub_135D30
    MOV R3, R4
    STR.W R0, [R6,#0x110]
loc_99C84:
    MOV R0, R3
    POP {R4-R6,PC}
loc_99C88:
    MOV R3, #0xFFFFFFFE
    B loc_99C84
loc_99C8E:
    MOV.W R3, #0xFFFFFFFF
    MOV R0, R3
    BX LR

=====

3, arm

######
ASN1_TIME_check:
loc_78C18:

loc_7D968:
    LDR R3, [R0,#4]
    CMP R3, #0x18
    BEQ loc_7D97A
loc_7D96E:
    CMP R3, #0x17
    BEQ loc_7D976
loc_7D972:
    MOVS R0, #0
    BX LR
loc_7D976:
    B.W sub_7E20C
loc_7D97A:
    B.W sub_78C18

=====

3, arm

######
X509_STORE_CTX_get_obj_by_subject:
loc_116460:
    PUSH {R4-R7,LR}
    MOV R6, R1
    SUB SP, SP, #0xC
    MOV R5, R0
    MOV R7, R2
    MOVW R1, #0x23E8
    MOVW R2, #0x17D
    MOVT.W R1, #0x20
    MOVS R0, #8
    BL sub_D5BDC
    MOV R4, R0
    CBZ R0, loc_1164C6
loc_116480:
    MOV R0, R5
    MOV R2, R7
    MOVS R5, #0
    MOV R1, R6
    MOV R3, R4
    STR R5, [R4]
    BL sub_11638C
    CBZ R0, loc_116498
loc_116492:
    MOV R0, R4
loc_116494:
    ADD SP, SP, #0xC
    POP {R4-R7,PC}
loc_116498:
    LDR R3, [R4]
    CMP R3, #1
    BEQ loc_1164BE
loc_11649E:
    CMP R3, #2
    BNE loc_1164A8
loc_1164A2:
    LDR R0, [R4,#4]
    BL sub_11D2BC
loc_1164A8:
    MOV R0, R4
    MOVW R1, #0x23E8
    MOV.W R2, #0x196
    MOVT.W R1, #0x20
    BL sub_D5A74
    MOVS R0, #0
    B loc_116494
loc_1164BE:
    LDR R0, [R4,#4]
    BL sub_11E818
    B loc_1164A8
loc_1164C6:
    MOV.W R2, #0x180
    MOVS R0, #0xB
    STR R2, [SP,#0x20+var_20]
    MOVW R3, #0x23E8
    MOVS R2, #0x41
    MOVT.W R3, #0x20
    MOVS R1, #0x96
    BL sub_BE318
    MOV R0, R4
    B loc_116494

=====

3, arm

######
crypto_cleanup_all_ex_data_int:
loc_D0650:
    PUSH {R3-R7,LR}
    MOVW R5, #0x611
    LDR R4, =dword_259540
    MOVT.W R5, #0xD
    MOVS R6, #0
    ADD.W R7, R4, #0x40
loc_D0662:
    LDR R0, [R4]
    MOV R1, R5
    BL sub_10A6EC
    STR.W R6, [R4],#4
    CMP R4, R7
    BNE loc_D0662
loc_D0672:
    MOV R4, #0x259538
    LDR R0, [R4]
    BL sub_10B470
    STR R6, [R4]
    POP {R3-R7,PC}

=====

3, arm

######
PKCS12_pack_authsafes:
loc_E95D0:
    LDR R2, [R0,#8]
    MOV R0, R1
    PUSH {R3,LR}
    ADDS R2, #0x14
    MOV R1, #0x1FE074
    BL sub_807C0
    ADDS R0, #0
    IT 
    MOVNE R0, #1
    POP {R3,PC}

=====

3, arm

######
ACCESS_DESCRIPTION_free:
loc_1279A4:
    MOV R1, #0x204F70
    B.W sub_85D14

=====

3, arm

######
memalign:
loc_172680:
    PUSH {LR}
    MOV R2, LR
    POP.W {LR}
    B sub_172270

=====

3, arm

######
PKCS1_MGF1:
loc_14D514:
    PUSH.W {R4-R11,LR}
    MOV R4, #0x24BF8C
    MOV R7, R1
    SUB SP, SP, #0x5C
    MOV R9, R2
    LDR R1, [R4]
    MOV R10, R3
    STR R4, [SP,#0x80+var_74]
    STR R0, [SP,#0x80+var_78]
    LDR.W R8, [SP,#0x80+arg_0]
    STR R1, [SP,#0x80+var_2C]
    BL sub_C3D80
    MOV R5, R0
    CMP R0, #0
    BEQ loc_14D5EA
loc_14D53E:
    MOV R0, R8
    BL sub_CBCA4
    SUBS.W R11, R0, #0
    BLT loc_14D5EA
loc_14D54A:
    CMP R7, #0
    ITT 
    MOVGT R6, #0
    MOVGT R4, R6
    BLE loc_14D5F0
loc_14D554:
    MOVS R2, #0
    MOV R1, R8
    MOV R0, R5
    ASRS R3, R4, #0x18
    STRB.W R4, [SP,#0x80+var_6D]
    STRB.W R3, [SP,#0x80+var_70]
    ASRS R3, R4, #0x10
    STRB.W R3, [SP,#0x80+var_6F]
    ASRS R3, R4, #8
    STRB.W R3, [SP,#0x80+var_6E]
    BL sub_C3FB4
    CMP R0, #0
    BEQ loc_14D5EA
loc_14D578:
    MOV R2, R10
    MOV R1, R9
    MOV R0, R5
    BL sub_C4128
    CBZ R0, loc_14D5EA
loc_14D584:
    MOVS R2, #4
    ADD R1, SP, #0x80+var_70
    MOV R0, R5
    BL sub_C4128
    CBZ R0, loc_14D5EA
loc_14D590:
    ADD.W R3, R11, R6
    STR R3, [SP,#0x80+var_7C]
    CMP R7, R3
    BLT loc_14D5B6
loc_14D59A:
    LDR R3, [SP,#0x80+var_78]
    MOVS R2, #0
    MOV R0, R5
    ADDS R1, R3, R6
    BL sub_C41E4
    LDR R3, [SP,#0x80+var_7C]
    CBZ R0, loc_14D5EA
loc_14D5AA:
    CMP R7, R3
    ADD.W R4, R4, #1
    BLE loc_14D5F0
loc_14D5B2:
    MOV R6, R3
    B loc_14D554
loc_14D5B6:
    MOVS R2, #0
    MOV R0, R5
    ADD R1, SP, #0x80+var_6C
    BL sub_C41E4
    CBZ R0, loc_14D5EA
loc_14D5C2:
    LDR R3, [SP,#0x80+var_78]
    SUBS R2, R7, R6
    ADD R1, SP, #0x80+var_6C
    MOVS R4, #0
    ADD R3, R6
    MOV R0, R3
    BLX sub_10170
loc_14D5D2:
    MOV R0, R5
    BL sub_C3D90
    LDR R3, [SP,#0x80+var_74]
    LDR R2, [SP,#0x80+var_2C]
    MOV R0, R4
    LDR R3, [R3]
    CMP R2, R3
    BNE loc_14D5F4
loc_14D5E4:
    ADD SP, SP, #0x5C
    POP.W {R4-R11,PC}
loc_14D5EA:
    MOV.W R4, #0xFFFFFFFF
    B loc_14D5D2
loc_14D5F0:
    MOVS R4, #0
    B loc_14D5D2
loc_14D5F4:
    BL sub_17E3F4

=====

3, arm

######
parse_lsda_header:
loc_1ADFC0:
    PUSH {R4-R6,LR}
    MOV R5, R1
    SUB SP, SP, #8
    MOV R4, R2
    MOV R6, R0
    CBZ R0, loc_1AE01C
loc_1ADFCC:
    BL sub_1ADE38
loc_1ADFD0:
    STR R0, [R4]
    ADDS R2, R5, #1
    LDRB R1, [R5]
    CMP R1, #0xFF
    IT 
    STREQ R0, [R4,#4]
    BEQ loc_1ADFE8
loc_1ADFDE:
    MOV R0, R6
    ADDS R3, R4, #4
    BL sub_1ADFA0
    MOV R2, R0
loc_1ADFE8:
    LDRB R3, [R2]
    ADDS R0, R2, #1
    ADD R5, SP, #0x18+var_14
    CMP R3, #0xFF
    STRB R3, [R4,#0x14]
    ITT 
    MOVEQ R3, #0
    STREQ R3, [R4,#0xC]
    BEQ loc_1AE006
loc_1ADFFA:
    MOV R1, R5
    BL sub_1ADE68
    LDR R3, [SP,#0x18+var_14]
    ADD R3, R0
    STR R3, [R4,#0xC]
loc_1AE006:
    LDRB R3, [R0]
    MOV R1, R5
    ADDS R0, #1
    STRB R3, [R4,#0x15]
    BL sub_1ADE68
    LDR R3, [SP,#0x18+var_14]
    ADD R3, R0
    STR R3, [R4,#0x10]
    ADD SP, SP, #8
    POP {R4-R6,PC}
loc_1AE01C:
    B loc_1ADFD0

=====

3, arm

######
bn_expand2_0:
loc_944B0:
    CMP.W R1, #0x1000000
    PUSH {R4-R6,LR}
    SUB SP, SP, #8
    BGE loc_94536
loc_944BA:
    LDR R3, [R0,#0x10]
    MOV R4, R0
    LSLS R0, R3, #0x1E
    BMI loc_94550
loc_944C2:
    LSLS R2, R3, #0x1C
    MOV R5, R1
    MOVW R1, #0xB794
    BPL loc_9451A
loc_944CC:
    MOVS R2, #0xFA
    MOVT.W R1, #0x1D
    LSLS R0, R5, #2
    BL sub_D6CE0
    MOV R6, R0
loc_944DA:
    CMP R6, #0
    BEQ loc_94568
loc_944DE:
    LDR R2, [R4,#4]
    CMP R2, #0
    BLE loc_944EE
loc_944E4:
    LSLS R2, R2, #2
    LDR R1, [R4]
    MOV R0, R6
    BLX sub_10170
loc_944EE:
    LDR R0, [R4]
    CBZ R0, loc_94510
loc_944F2:
    LDR R1, [R4,#8]
    LSLS R1, R1, #2
    BL sub_D5D94
    LDR R3, [R4,#0x10]
    LDR R0, [R4]
    MOVW R1, #0xB794
    LSLS R3, R3, #0x1C
    BMI loc_9452A
loc_94506:
    MOVS R2, #0xB0
    MOVT.W R1, #0x1D
    BL sub_D5A74
loc_94510:
    MOV R0, R4
    STR R6, [R4]
    STR R5, [R4,#8]
loc_94516:
    ADD SP, SP, #8
    POP {R4-R6,PC}
loc_9451A:
    MOVS R2, #0xFC
    MOVT.W R1, #0x1D
    LSLS R0, R5, #2
    BL sub_D5BDC
    MOV R6, R0
    B loc_944DA
loc_9452A:
    MOVS R2, #0xAE
    MOVT.W R1, #0x1D
    BL sub_D6CF8
    B loc_94510
loc_94536:
    MOVS R2, #0xF2
    MOVW R3, #0xB794
    STR R2, [SP,#0x18+var_18]
    MOVT.W R3, #0x1D
    MOVS R2, #0x72
    MOVS R1, #0x78
    MOVS R0, #3
    BL sub_BE318
loc_9454C:
    MOVS R0, #0
    B loc_94516
loc_94550:
    MOVS R2, #0xF6
    MOVW R3, #0xB794
    STR R2, [SP,#0x18+var_18]
    MOVT.W R3, #0x1D
    MOVS R2, #0x69
    MOVS R1, #0x78
    MOVS R0, #3
    BL sub_BE318
    B loc_9454C
loc_94568:
    MOVS R2, #0xFE
    MOVW R3, #0xB794
    STR R2, [SP,#0x18+var_18]
    MOVT.W R3, #0x1D
    MOVS R2, #0x41
    MOVS R1, #0x78
    MOVS R0, #3
    BL sub_BE318
    B loc_9454C

=====

0, gcc32

######
__mbsrtowcs_l:
loc_82BCAD0:
    PUSH ebp
    PUSH edi
    PUSH esi
    PUSH ebx
    SUB esp, 14Ch
    MOV eax, [esp+15Ch+arg_C]
    MOV ebx, [esp+15Ch+arg_8]
    MOV [esp+15Ch+var_130], 0
    MOV [esp+15Ch+var_12C], 1
    MOV [esp+15Ch+var_134], 1
    MOV [esp+15Ch+var_128], eax
    MOV eax, [esp+15Ch+arg_10]
    MOV esi, [eax]
    MOV eax, [esi+14h]
    TEST eax, eax
    JZ loc_82BCD50
loc_82BCB18:
    MOV eax, [eax]
    MOV [esp+15Ch+var_15C], eax
    MOV esi, [eax+14h]
    MOV eax, [eax]
    TEST eax, eax
    JZ loc_82BCB30
loc_82BCB26:
    ROR esi, 9
    XOR esi, large gs:18h
loc_82BCB30:
    MOV ebp, [esp+15Ch+arg_0]
    MOV eax, [esp+15Ch+arg_4]
    TEST ebp, ebp
    JZ loc_82BCC90
loc_82BCB46:
    MOV edi, [eax]
    MOV eax, [esp+15Ch+arg_0]
    TEST ebx, ebx
    MOV [esp+15Ch+var_13C], eax
    LEA eax, [eax+ebx*4]
    MOV [esp+15Ch+var_11C], edi
    MOV [esp+15Ch+var_138], eax
    JZ loc_82BCD70
loc_82BCB66:
    LEA eax, [esp+15Ch+var_11C]
    MOV [esp+15Ch+var_150], eax
    LEA eax, [esp+15Ch+var_14C]
    MOV [esp+15Ch+var_158], eax
    LEA eax, [esp+15Ch+var_13C]
    MOV [esp+15Ch+var_154], eax
    JMP loc_82BCBA1
loc_82BCB80:
    MOV edx, [esp+15Ch+var_11C]
    MOV ebp, [esp+15Ch+var_13C]
    CMP ebx, edx
    JNZ loc_82BCBEF
loc_82BCB8C:
    CMP byte ptr [edx-1], 0
    JZ loc_82BCBEF
loc_82BCB92:
    MOV ebx, [esp+15Ch+var_138]
    MOV edi, edx
    SUB ebx, ebp
    SAR ebx, 2
    TEST ebx, ebx
    JZ loc_82BCBEF
loc_82BCBA1:
    SUB esp, 8
    PUSH ebx
    PUSH edi
    CALL sub_80482D0
    LEA ebx, [edi+eax+1]
    MOV [esp+16Ch+var_16C], esi
    CALL sub_82A2B80
    PUSH 1
    PUSH 0
    PUSH [esp+174h+var_158]
    PUSH 0
    PUSH ebx
    PUSH [esp+180h+var_150]
    PUSH [esp+184h+var_154]
    PUSH [esp+188h+var_15C]
    CALL esi
    ADD esp, 30h
    CMP eax, 4
    SETNZ cl
    CMP eax, 7
    SETNZ dl
    AND dl, cl
    JZ loc_82BCB80
loc_82BCBE3:
    MOV edi, edx
    MOV ebp, [esp+15Ch+var_13C]
    MOV edx, [esp+15Ch+var_11C]
    MOV ecx, edi
loc_82BCBEF:
    SUB ebp, [esp+15Ch+arg_0]
    MOV esi, [esp+15Ch+arg_4]
    MOV [esi], edx
    MOV edx, 1
    SAR ebp, 2
    TEST eax, 0FFFFFFFBh
    MOV ebx, ebp
    JNZ loc_82BCC4C
loc_82BCC10:
    MOV esi, [esp+15Ch+arg_0]
    MOV esi, [esi+ebp*4-4]
    TEST esi, esi
    JNZ loc_82BCC45
loc_82BCC1F:
    TEST ebp, ebp
    JZ loc_82BCDB0
loc_82BCC27:
    MOV edx, [esp+15Ch+var_128]
    MOV edx, [edx]
    TEST edx, edx
    JNZ loc_82BCDC9
loc_82BCC35:
    MOV esi, [esp+15Ch+arg_4]
    SUB ebx, 1
    MOV dword ptr [esi], 0
loc_82BCC45:
    TEST eax, eax
    SETNZ dl
    AND ecx, edx
loc_82BCC4C:
    TEST cl, cl
    JZ loc_82BCC5C
loc_82BCC50:
    LEA ecx, [eax-5]
    CMP ecx, 2
    JA loc_82BCD97
loc_82BCC5C:
    MOV ecx, eax
    AND ecx, 0FFFFFFFDh
    CMP ecx, 5
    JZ loc_82BCC80
loc_82BCC66:
    TEST dl, dl
    JZ loc_82BCC80
loc_82BCC6A:
    CMP eax, 4
    JZ loc_82BCC80
loc_82BCC6F:
    MOV eax, 0FFFFFFE4h
    MOV ebx, 0FFFFFFFFh
    MOV dword ptr gs:[eax], 54h
loc_82BCC80:
    ADD esp, 14Ch
    MOV eax, ebx
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 
loc_82BCC90:
    MOV ebx, [eax]
    SUB esp, 0Ch
    MOV [esp+168h+var_148], ebx
    PUSH ebx
    CALL sub_8272F00
    ADD esp, 10h
    LEA edi, [ebx+eax+1]
    XOR ebx, ebx
    MOV eax, [esp+15Ch+var_128]
    LEA ecx, [esp+15Ch+var_1C]
    LEA ebp, [esp+15Ch+var_148]
    MOV [esp+15Ch+var_150], edi
    MOV edx, [eax+4]
    MOV eax, [eax]
    MOV [esp+15Ch+var_138], ecx
    LEA ecx, [esp+15Ch+var_14C]
    MOV [esp+15Ch+var_144], eax
    LEA eax, [esp+15Ch+var_144]
    MOV [esp+15Ch+var_158], ecx
    LEA ecx, [esp+15Ch+var_13C]
    MOV [esp+15Ch+var_140], edx
    MOV [esp+15Ch+var_128], eax
    LEA eax, [esp+15Ch+var_11C]
    MOV [esp+15Ch+var_154], ecx
    MOV edi, eax
    LEA esi, [esi+0]
loc_82BCCF0:
    MOV [esp+15Ch+var_13C], edi
    SUB esp, 0Ch
    PUSH esi
    CALL sub_82A2B80
    PUSH 1
    PUSH 0
    PUSH [esp+174h+var_158]
    PUSH 0
    PUSH [esp+17Ch+var_150]
    PUSH ebp
    PUSH [esp+184h+var_154]
    PUSH [esp+188h+var_15C]
    CALL esi
    MOV ecx, [esp+18Ch+var_13C]
    ADD esp, 30h
    MOV edx, ecx
    SUB edx, edi
    SAR edx, 2
    ADD ebx, edx
    CMP eax, 5
    JZ loc_82BCCF0
loc_82BCD2B:
    MOV edx, eax
    AND edx, 0FFFFFFFBh
    JNZ loc_82BCD3C
loc_82BCD32:
    MOV edi, [ecx-4]
    TEST edi, edi
    JNZ loc_82BCD81
loc_82BCD39:
    SUB ebx, 1
loc_82BCD3C:
    TEST edx, edx
    SETNZ cl
    TEST eax, eax
    SETNZ dl
    JMP loc_82BCC4C
loc_82BCD50:
    CMP esi, offset off_8364C00
    MOV eax, offset off_8361940
    JZ loc_82BCB18
loc_82BCD61:
    MOV eax, esi
    CALL sub_828EEA0
    MOV eax, [esi+14h]
    JMP loc_82BCB18
loc_82BCD70:
    MOV edx, 1
    MOV eax, 5
    XOR ebx, ebx
    JMP loc_82BCC50
loc_82BCD81:
    PUSH offset aMbsrtowcsL
    PUSH 5Eh
    PUSH offset aMbsrtowcsLC
    PUSH offset aWcharTDataOutb
    CALL sub_82508A0
loc_82BCD97:
    PUSH offset aMbsrtowcsL
    PUSH 99h
    PUSH offset aMbsrtowcsLC
    PUSH offset aStatusGconvOkS
    CALL sub_82508A0
loc_82BCDB0:
    PUSH offset aMbsrtowcsL
    PUSH 8Dh
    PUSH offset aMbsrtowcsLC
    PUSH offset aResult0
    CALL sub_82508A0
loc_82BCDC9:
    PUSH offset aMbsrtowcsL
    PUSH 8Eh
    PUSH offset aMbsrtowcsLC
    PUSH offset aMbsinitDataSta
    CALL sub_82508A0

=====

0, gcc32

######
dynamic_ctrl:
loc_8225B08:
    SUB esp, 1Ch
    SUB esp, 0Ch
    PUSH [esp+28h+arg_0]
    CALL sub_82258CF
    ADD esp, 10h
    MOV [esp+1Ch+var_18], eax
    CMP [esp+1Ch+var_18], 0
    JNZ loc_8225B4D
loc_8225B25:
    SUB esp, 0Ch
    PUSH 127h
    PUSH offset aCryptoEngineEn_5
    PUSH 70h
    PUSH 0B4h
    PUSH 26h
    CALL sub_8158682
    ADD esp, 20h
    MOV eax, 0
    JMP loc_8225E88
loc_8225B4D:
    MOV eax, [esp+1Ch+var_18]
    MOV eax, [eax]
    TEST eax, eax
    SETNZ al
    MOVZX eax, al
    MOV [esp+1Ch+var_14], eax
    CMP [esp+1Ch+var_14], 0
    JZ loc_8225B8E
loc_8225B66:
    SUB esp, 0Ch
    PUSH 12Dh
    PUSH offset aCryptoEngineEn_5
    PUSH 64h
    PUSH 0B4h
    PUSH 26h
    CALL sub_8158682
    ADD esp, 20h
    MOV eax, 0
    JMP loc_8225E88
loc_8225B8E:
    MOV eax, [esp+1Ch+arg_4]
    SUB eax, 0C8h
    CMP eax, 6
    JA def_8225BA7
loc_8225BA0:
    MOV eax, ds:jpt_8225BA7[eax*4]
    JMP eax
loc_8225BA9:
    CMP [esp+1Ch+arg_C], 0
    JZ loc_8225BC3
loc_8225BB0:
    MOV eax, [esp+1Ch+arg_C]
    MOVZX eax, byte ptr [eax]
    TEST al, al
    JNZ loc_8225BC3
loc_8225BBB:
    MOV [esp+1Ch+arg_C], 0
loc_8225BC3:
    MOV eax, [esp+1Ch+var_18]
    MOV eax, [eax+0Ch]
    SUB esp, 4
    PUSH 135h
    PUSH offset aCryptoEngineEn_5
    PUSH eax
    CALL sub_817720B
    ADD esp, 10h
    CMP [esp+1Ch+arg_C], 0
    JZ loc_8225C0B
loc_8225BE7:
    SUB esp, 4
    PUSH 137h
    PUSH offset aCryptoEngineEn_5
    PUSH [esp+28h+arg_C]
    CALL sub_818134E
    ADD esp, 10h
    MOV edx, eax
    MOV eax, [esp+1Ch+var_18]
    MOV [eax+0Ch], edx
    JMP loc_8225C16
loc_8225C0B:
    MOV eax, [esp+1Ch+var_18]
    MOV dword ptr [eax+0Ch], 0
loc_8225C16:
    MOV eax, [esp+1Ch+var_18]
    MOV eax, [eax+0Ch]
    TEST eax, eax
    SETNZ al
    MOVZX eax, al
    JMP loc_8225E88
loc_8225C2A:
    CMP [esp+1Ch+arg_8], 0
    SETNZ al
    MOVZX edx, al
    MOV eax, [esp+1Ch+var_18]
    MOV [eax+10h], edx
    MOV eax, 1
    JMP loc_8225E88
loc_8225C46:
    CMP [esp+1Ch+arg_C], 0
    JZ loc_8225C60
loc_8225C4D:
    MOV eax, [esp+1Ch+arg_C]
    MOVZX eax, byte ptr [eax]
    TEST al, al
    JNZ loc_8225C60
loc_8225C58:
    MOV [esp+1Ch+arg_C], 0
loc_8225C60:
    MOV eax, [esp+1Ch+var_18]
    MOV eax, [eax+14h]
    SUB esp, 4
    PUSH 142h
    PUSH offset aCryptoEngineEn_5
    PUSH eax
    CALL sub_817720B
    ADD esp, 10h
    CMP [esp+1Ch+arg_C], 0
    JZ loc_8225CA8
loc_8225C84:
    SUB esp, 4
    PUSH 144h
    PUSH offset aCryptoEngineEn_5
    PUSH [esp+28h+arg_C]
    CALL sub_818134E
    ADD esp, 10h
    MOV edx, eax
    MOV eax, [esp+1Ch+var_18]
    MOV [eax+14h], edx
    JMP loc_8225CB3
loc_8225CA8:
    MOV eax, [esp+1Ch+var_18]
    MOV dword ptr [eax+14h], 0
loc_8225CB3:
    MOV eax, [esp+1Ch+var_18]
    MOV eax, [eax+14h]
    TEST eax, eax
    SETNZ al
    MOVZX eax, al
    JMP loc_8225E88
loc_8225CC7:
    CMP [esp+1Ch+arg_8], 0
    JS loc_8225CD5
loc_8225CCE:
    CMP [esp+1Ch+arg_8], 2
    JLE loc_8225D00
loc_8225CD5:
    SUB esp, 0Ch
    PUSH 14Ah
    PUSH offset aCryptoEngineEn_5
    PUSH 8Fh
    PUSH 0B4h
    PUSH 26h
    CALL sub_8158682
    ADD esp, 20h
    MOV eax, 0
    JMP loc_8225E88
loc_8225D00:
    MOV eax, [esp+1Ch+var_18]
    MOV edx, [esp+1Ch+arg_8]
    MOV [eax+18h], edx
    MOV eax, 1
    JMP loc_8225E88
loc_8225D15:
    SUB esp, 8
    PUSH [esp+24h+var_18]
    PUSH [esp+28h+arg_0]
    CALL sub_8225FBC
    ADD esp, 10h
    JMP loc_8225E88
loc_8225D2D:
    CMP [esp+1Ch+arg_8], 0
    JS loc_8225D3B
loc_8225D34:
    CMP [esp+1Ch+arg_8], 2
    JLE loc_8225D66
loc_8225D3B:
    SUB esp, 0Ch
    PUSH 153h
    PUSH offset aCryptoEngineEn_5
    PUSH 8Fh
    PUSH 0B4h
    PUSH 26h
    CALL sub_8158682
    ADD esp, 20h
    MOV eax, 0
    JMP loc_8225E88
loc_8225D66:
    MOV eax, [esp+1Ch+var_18]
    MOV edx, [esp+1Ch+arg_8]
    MOV [eax+24h], edx
    MOV eax, 1
    JMP loc_8225E88
loc_8225D7B:
    CMP [esp+1Ch+arg_C], 0
    JZ loc_8225D8D
loc_8225D82:
    MOV eax, [esp+1Ch+arg_C]
    MOVZX eax, byte ptr [eax]
    TEST al, al
    JNZ loc_8225DB8
loc_8225D8D:
    SUB esp, 0Ch
    PUSH 15Bh
    PUSH offset aCryptoEngineEn_5
    PUSH 8Fh
    PUSH 0B4h
    PUSH 26h
    CALL sub_8158682
    ADD esp, 20h
    MOV eax, 0
    JMP loc_8225E88
loc_8225DB8:
    SUB esp, 4
    PUSH 15Fh
    PUSH offset aCryptoEngineEn_5
    PUSH [esp+28h+arg_C]
    CALL sub_818134E
    ADD esp, 10h
    MOV [esp+1Ch+var_10], eax
    CMP [esp+1Ch+var_10], 0
    JNZ loc_8225E04
loc_8225DDC:
    SUB esp, 0Ch
    PUSH 161h
    PUSH offset aCryptoEngineEn_5
    PUSH 41h
    PUSH 0B4h
    PUSH 26h
    CALL sub_8158682
    ADD esp, 20h
    MOV eax, 0
    JMP loc_8225E88
loc_8225E04:
    MOV eax, [esp+1Ch+var_18]
    MOV eax, [eax+28h]
    SUB esp, 8
    PUSH [esp+24h+var_10]
    PUSH eax
    CALL sub_822565A
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_8225E5D
loc_8225E1F:
    SUB esp, 4
    PUSH 165h
    PUSH offset aCryptoEngineEn_5
    PUSH [esp+28h+var_10]
    CALL sub_817720B
    ADD esp, 10h
    SUB esp, 0Ch
    PUSH 166h
    PUSH offset aCryptoEngineEn_5
    PUSH 41h
    PUSH 0B4h
    PUSH 26h
    CALL sub_8158682
    ADD esp, 20h
    MOV eax, 0
    JMP loc_8225E88
loc_8225E5D:
    MOV eax, 1
    JMP loc_8225E88
loc_8225E64:
    NOP; 
    SUB esp, 0Ch
    PUSH 16Eh
    PUSH offset aCryptoEngineEn_5
    PUSH 77h
    PUSH 0B4h
    PUSH 26h
    CALL sub_8158682
    ADD esp, 20h
    MOV eax, 0
loc_8225E88:
    ADD esp, 1Ch
    RETN 

=====

0, gcc32

######
TS_RESP_CTX_set_status_info:
loc_81BEE44:
    SUB esp, 1Ch
    MOV [esp+1Ch+var_10], 0
    MOV [esp+1Ch+var_18], 0
    MOV [esp+1Ch+var_14], 0
    CALL sub_81BC22B
    MOV [esp+1Ch+var_10], eax
    CMP [esp+1Ch+var_10], 0
    JZ loc_81BEF43
loc_81BEE73:
    MOV eax, [esp+1Ch+var_10]
    MOV eax, [eax]
    SUB esp, 8
    PUSH [esp+24h+arg_4]
    PUSH eax
    CALL sub_80F4D3F
    ADD esp, 10h
    TEST eax, eax
    JZ loc_81BEF46
loc_81BEE91:
    CMP [esp+1Ch+arg_8], 0
    JZ loc_81BEF1E
loc_81BEE9C:
    CALL sub_8105191
    MOV [esp+1Ch+var_18], eax
    CMP [esp+1Ch+var_18], 0
    JZ loc_81BEF50
loc_81BEEB0:
    SUB esp, 0Ch
    PUSH [esp+28h+arg_8]
    CALL sub_8272F00
    ADD esp, 10h
    SUB esp, 4
    PUSH eax
    PUSH [esp+24h+arg_8]
    PUSH [esp+28h+var_18]
    CALL sub_80FC484
    ADD esp, 10h
    TEST eax, eax
    JZ loc_81BEF50
loc_81BEED7:
    MOV eax, [esp+1Ch+var_10]
    MOV eax, [eax+4]
    TEST eax, eax
    JNZ loc_81BEEFB
loc_81BEEE2:
    CALL sub_81BE4FD
    MOV edx, eax
    MOV eax, [esp+1Ch+var_10]
    MOV [eax+4], edx
    MOV eax, [esp+1Ch+var_10]
    MOV eax, [eax+4]
    TEST eax, eax
    JZ loc_81BEF49
loc_81BEEFB:
    MOV eax, [esp+1Ch+var_10]
    MOV eax, [eax+4]
    SUB esp, 8
    PUSH [esp+24h+var_18]
    PUSH eax
    CALL sub_81BE509
    ADD esp, 10h
    TEST eax, eax
    JZ loc_81BEF4C
loc_81BEF16:
    MOV [esp+1Ch+var_18], 0
loc_81BEF1E:
    MOV eax, [esp+1Ch+arg_0]
    MOV eax, [eax+50h]
    SUB esp, 8
    PUSH [esp+24h+var_10]
    PUSH eax
    CALL sub_81C0B50
    ADD esp, 10h
    TEST eax, eax
    JZ loc_81BEF4F
loc_81BEF39:
    MOV [esp+1Ch+var_14], 1
    JMP loc_81BEF50
loc_81BEF43:
    NOP 
    JMP loc_81BEF50
loc_81BEF46:
    NOP 
    JMP loc_81BEF50
loc_81BEF49:
    NOP 
    JMP loc_81BEF50
loc_81BEF4C:
    NOP 
    JMP loc_81BEF50
loc_81BEF4F:
    NOP 
loc_81BEF50:
    CMP [esp+1Ch+var_14], 0
    JNZ loc_81BEF75
loc_81BEF57:
    SUB esp, 0Ch
    PUSH 145h
    PUSH offset aCryptoTsTsRspS
    PUSH 41h
    PUSH 84h
    PUSH 2Fh
    CALL sub_8158682
    ADD esp, 20h
loc_81BEF75:
    SUB esp, 0Ch
    PUSH [esp+28h+var_10]
    CALL sub_81BC242
    ADD esp, 10h
    SUB esp, 0Ch
    PUSH [esp+28h+var_18]
    CALL sub_81051A5
    ADD esp, 10h
    MOV eax, [esp+1Ch+var_14]
    ADD esp, 1Ch
    RETN 

=====

0, gcc32

######
SSL_CTX_set_srp_username:
loc_80EEE7F:
    SUB esp, 0Ch
    PUSH [esp+0Ch+arg_4]
    PUSH 0
    PUSH 4Fh
    PUSH [esp+18h+arg_0]
    CALL sub_80AB658
    ADD esp, 10h
    ADD esp, 0Ch
    RETN 

=====

0, gcc32

######
X509_STORE_CTX_set_cert:
loc_81D321D:
    MOV eax, [esp+arg_0]
    MOV edx, [esp+arg_4]
    MOV [eax+4], edx
    NOP 
    RETN 

=====

0, gcc32

######
__libc_fatal:
loc_82682C0:
    PUSH ebx
    SUB esp, 8
    MOV ebx, [esp+0Ch+arg_0]
    NOP 
    LEA esi, [esi+0]
loc_82682D0:
    SUB esp, 4
    PUSH ebx
    PUSH (offset aSSSS_1+8)
    PUSH 1
    CALL sub_8268070
    ADD esp, 10h
    JMP loc_82682D0

=====

0, gcc32

######
do_engine_lock_init:
loc_815577B:
    SUB esp, 0Ch
    SUB esp, 4
    PUSH 0
    PUSH 0
    PUSH 0
    CALL sub_8172345
    ADD esp, 10h
    SUB esp, 0Ch
    PUSH offset aGlobalEngine
    CALL sub_8172A31
    ADD esp, 10h
    MOV ds:dword_845FBF4, eax
    MOV eax, ds:dword_845FBF4
    TEST eax, eax
    SETNZ al
    MOVZX eax, al
    ADD esp, 0Ch
    RETN 

=====

0, gcc32

######
ts_RESP_check_request:
loc_81BF305:
    PUSH ebx
    SUB esp, 28h
    MOV eax, [esp+2Ch+arg_0]
    MOV eax, [eax+4Ch]
    MOV [esp+2Ch+var_24], eax
    MOV [esp+2Ch+var_2C], 0
    SUB esp, 0Ch
    PUSH [esp+38h+var_24]
    CALL sub_81BDAAD
    ADD esp, 10h
    CMP eax, 1
    JZ loc_81BF360
loc_81BF32F:
    SUB esp, 4
    PUSH offset aBadRequestVers
    PUSH 2
    PUSH [esp+38h+arg_0]
    CALL sub_81BEE44
    ADD esp, 10h
    SUB esp, 8
    PUSH 2
    PUSH [esp+38h+arg_0]
    CALL sub_81BEFEC
    ADD esp, 10h
    MOV eax, 0
    JMP loc_81BF4CF
loc_81BF360:
    MOV eax, [esp+2Ch+var_24]
    MOV eax, [eax+4]
    MOV [esp+2Ch+var_20], eax
    MOV eax, [esp+2Ch+var_20]
    MOV eax, [eax]
    MOV [esp+2Ch+var_1C], eax
    MOV eax, [esp+2Ch+var_1C]
    MOV eax, [eax]
    SUB esp, 0Ch
    PUSH eax
    CALL sub_8183726
    ADD esp, 10h
    MOV [esp+2Ch+var_18], eax
    MOV [esp+2Ch+var_28], 0
    JMP loc_81BF3D1
loc_81BF395:
    MOV eax, [esp+2Ch+arg_0]
    MOV eax, [eax+1Ch]
    SUB esp, 8
    PUSH [esp+34h+var_28]
    PUSH eax
    CALL sub_81BE67F
    ADD esp, 10h
    MOV [esp+2Ch+var_14], eax
    SUB esp, 0Ch
    PUSH [esp+38h+var_14]
    CALL sub_8166DD5
    ADD esp, 10h
    CMP eax, [esp+2Ch+var_18]
    JNZ loc_81BF3CC
loc_81BF3C5:
    MOV eax, [esp+2Ch+var_14]
    MOV [esp+2Ch+var_2C], eax
loc_81BF3CC:
    ADD [esp+2Ch+var_28], 1
loc_81BF3D1:
    CMP [esp+2Ch+var_2C], 0
    JNZ loc_81BF3F0
loc_81BF3D7:
    MOV eax, [esp+2Ch+arg_0]
    MOV eax, [eax+1Ch]
    SUB esp, 0Ch
    PUSH eax
    CALL sub_81BE669
    ADD esp, 10h
    CMP eax, [esp+2Ch+var_28]
    JG loc_81BF395
loc_81BF3F0:
    CMP [esp+2Ch+var_2C], 0
    JNZ loc_81BF427
loc_81BF3F6:
    SUB esp, 4
    PUSH offset aMessageDigestA
    PUSH 2
    PUSH [esp+38h+arg_0]
    CALL sub_81BEE44
    ADD esp, 10h
    SUB esp, 8
    PUSH 0
    PUSH [esp+38h+arg_0]
    CALL sub_81BEFEC
    ADD esp, 10h
    MOV eax, 0
    JMP loc_81BF4CF
loc_81BF427:
    MOV eax, [esp+2Ch+var_1C]
    MOV eax, [eax+4]
    TEST eax, eax
    JZ loc_81BF478
loc_81BF432:
    MOV eax, [esp+2Ch+var_1C]
    MOV eax, [eax+4]
    SUB esp, 0Ch
    PUSH eax
    CALL sub_80F8EC1
    ADD esp, 10h
    CMP eax, 5
    JZ loc_81BF478
loc_81BF44A:
    SUB esp, 4
    PUSH offset aSuperfluousMes
    PUSH 2
    PUSH [esp+38h+arg_0]
    CALL sub_81BEE44
    ADD esp, 10h
    SUB esp, 8
    PUSH 0
    PUSH [esp+38h+arg_0]
    CALL sub_81BEFEC
    ADD esp, 10h
    MOV eax, 0
    JMP loc_81BF4CF
loc_81BF478:
    MOV eax, [esp+2Ch+var_20]
    MOV eax, [eax+4]
    MOV [esp+2Ch+var_10], eax
    MOV eax, [esp+2Ch+var_10]
    MOV ebx, [eax]
    SUB esp, 0Ch
    PUSH [esp+38h+var_2C]
    CALL sub_8166DE4
    ADD esp, 10h
    CMP ebx, eax
    JZ loc_81BF4CA
loc_81BF49C:
    SUB esp, 4
    PUSH offset aBadMessageDige
    PUSH 2
    PUSH [esp+38h+arg_0]
    CALL sub_81BEE44
    ADD esp, 10h
    SUB esp, 8
    PUSH 5
    PUSH [esp+38h+arg_0]
    CALL sub_81BEFEC
    ADD esp, 10h
    MOV eax, 0
    JMP loc_81BF4CF
loc_81BF4CA:
    MOV eax, 1
loc_81BF4CF:
    ADD esp, 28h
    POP ebx
    RETN 

=====

0, gcc32

######
__sigjmp_save:
loc_82CAE00:
    PUSH ebx
    SUB esp, 8
    MOV eax, [esp+0Ch+arg_4]
    MOV ebx, [esp+0Ch+arg_0]
    TEST eax, eax
    JNZ loc_82CAE20
loc_82CAE10:
    XOR eax, eax
    MOV [ebx+18h], eax
    ADD esp, 8
    XOR eax, eax
    POP ebx
    RETN 
loc_82CAE20:
    LEA eax, [ebx+1Ch]
    SUB esp, 4
    PUSH eax
    PUSH 0
    PUSH 0
    CALL sub_82ACDD0
    ADD esp, 10h
    TEST eax, eax
    SETZ al
    MOVZX eax, al
    MOV [ebx+18h], eax
    ADD esp, 8
    XOR eax, eax
    POP ebx
    RETN 

=====

0, gcc32

######
ossl_init_load_ssl_strings:
loc_80B57DC:
    SUB esp, 0Ch
    CALL sub_80F0A46
    MOV ds:dword_845B0F8, 1
    MOV eax, 1
    ADD esp, 0Ch
    RETN 

=====

1, gcc32

######
SSL_CTX_set_srp_client_pwd_callback:
loc_80CCB5D:
    SUB esp, 10h
    PUSH [esp+10h+arg_4]
    PUSH 4Dh
    PUSH [esp+18h+arg_0]
    CALL sub_809AA07
    ADD esp, 1Ch
    RETN 

=====

1, gcc32

######
SSL_set_debug:
loc_80A7A65:
    REP 

=====

1, gcc32

######
int_engine_init:
loc_81B8479:
    PUSH ebx
    SUB esp, 14h
    MOV ebx, eax
    PUSH eax
    CALL sub_8119855
    ADD esp, 10h
    TEST eax, eax
    JZ loc_81B84CC
loc_81B848C:
    MOV eax, ds:dword_83ABFD8
    TEST eax, eax
    JNZ loc_81B84A3
loc_81B8495:
    CALL sub_8161A64
    MOV ds:dword_83ABFD8, eax
    TEST eax, eax
    JZ loc_81B84BB
loc_81B84A3:
    SUB esp, 8
    PUSH ebx
    PUSH eax
    CALL sub_8161C91
    MOV edx, eax
    ADD esp, 10h
    MOV eax, 1
    TEST edx, edx
    JNZ loc_81B84CC
loc_81B84BB:
    SUB esp, 0Ch
    PUSH ebx
    CALL sub_81198F1
    ADD esp, 10h
    MOV eax, 0
loc_81B84CC:
    ADD esp, 8
    POP ebx
    RETN 

=====

1, gcc32

######
CMS_dataFinal:
loc_80F643C:
    PUSH ebp
    PUSH edi
    PUSH esi
    PUSH ebx
    SUB esp, 38h
    MOV esi, [esp+48h+arg_0]
    MOV edi, [esp+48h+arg_4]
    MOV eax, large gs:14h
    MOV [esp+48h+var_20], eax
    XOR eax, eax
    PUSH esi
    CALL sub_80F6228
    ADD esp, 10h
    TEST eax, eax
    JZ loc_80F657D
loc_80F6468:
    MOV ebx, eax
    MOV eax, [eax]
    TEST eax, eax
    JZ loc_80F6502
loc_80F6474:
    TEST byte ptr [eax+0Ch], 20h
    JZ loc_80F6502
loc_80F647E:
    SUB esp, 8
    PUSH 401h
    PUSH edi
    CALL sub_80E587A
    MOV ebp, eax
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_80F64B7
loc_80F6495:
    SUB esp, 0Ch
    PUSH 77h
    PUSH offset aCryptoCmsCmsLi
    PUSH 69h
    PUSH 6Eh
    PUSH 2Eh
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80F6589
loc_80F64B7:
    LEA eax, [esp+3Ch+var_24]
    PUSH eax
    PUSH 0
    PUSH 3
    PUSH ebp
    CALL sub_80E5570
    MOV [esp+4Ch+var_30], eax
    ADD esp, 8
    PUSH 200h
    PUSH ebp
    CALL sub_80E5143
    PUSH 0
    PUSH 0
    PUSH 82h
    PUSH ebp
    CALL sub_80E5570
    ADD esp, 1Ch
    PUSH [esp+40h+var_30]
    PUSH [esp+44h+var_24]
    PUSH dword ptr [ebx]
    CALL sub_80D6778
    MOV eax, [ebx]
    AND dword ptr [eax+0Ch], 0FFFFFFDFh
    ADD esp, 10h
loc_80F6502:
    SUB esp, 0Ch
    PUSH dword ptr [esi]
    CALL sub_8139E63
    ADD esp, 10h
    CMP eax, 17h
    JZ loc_80F6584
loc_80F6514:
    CMP eax, 17h
    JG loc_80F6525
loc_80F6519:
    CMP eax, 15h
    JZ loc_80F6584
loc_80F651E:
    CMP eax, 16h
    JZ loc_80F6538
loc_80F6523:
    JMP loc_80F6558
loc_80F6525:
    CMP eax, 1Ah
    JZ loc_80F6584
loc_80F652A:
    CMP eax, 312h
    JZ loc_80F6584
loc_80F6531:
    CMP eax, 19h
    JZ loc_80F6547
loc_80F6536:
    JMP loc_80F6558
loc_80F6538:
    SUB esp, 8
    PUSH edi
    PUSH esi
    CALL sub_80F80D5
    ADD esp, 10h
    JMP loc_80F6589
loc_80F6547:
    SUB esp, 4
    PUSH 0
    PUSH edi
    PUSH esi
    CALL sub_8197B57
    ADD esp, 10h
    JMP loc_80F6589
loc_80F6558:
    SUB esp, 0Ch
    PUSH 92h
    PUSH offset aCryptoCmsCmsLi
    PUSH 9Ch
    PUSH 6Eh
    PUSH 2Eh
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80F6589
loc_80F657D:
    MOV eax, 0
    JMP loc_80F6589
loc_80F6584:
    MOV eax, 1
loc_80F6589:
    MOV edx, [esp+3Ch+var_20]
    XOR edx, large gs:14h
    JZ loc_80F659B
loc_80F6596:
    CALL sub_82033E0
loc_80F659B:
    ADD esp, 2Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 

=====

1, gcc32

######
getservbyname_r:
loc_8203EB0:
    PUSH ebp
    PUSH edi
    PUSH esi
    PUSH ebx
    SUB esp, 2Ch
    MOV eax, ds:dword_83AD638
    MOV ebx, [esp+3Ch+arg_8]
    CMP eax, 0
    JLE loc_8204028
loc_8203EC9:
    ADD eax, 1
    CMP eax, 64h
    JG loc_8203FD0
loc_8203ED5:
    MOV ds:dword_83AD638, eax
loc_8203EDA:
    CMP ds:byte_83ACC30, 0
    JZ loc_8204040
loc_8203EE7:
    MOV eax, ds:dword_83ACC28
    ROR eax, 9
    XOR eax, large gs:18h
    MOV [esp+3Ch+var_20], eax
    MOV eax, ds:dword_83ACC2C
    ROR eax, 9
    XOR eax, large gs:18h
    CMP eax, 0FFFFFFFFh
    MOV [esp+3Ch+var_24], eax
    SETZ al
    MOVZX eax, al
loc_8203F16:
    TEST eax, eax
    JNZ loc_82040C7
loc_8203F1E:
    MOV eax, 0FFFFFFE4h
    LEA ebp, [esp+3Ch+var_20]
    MOV edi, eax
    ADD edi, large gs:0
    MOV [esp+3Ch+var_30], eax
    LEA esi, [esi+0]
loc_8203F38:
    SUB esp, 0Ch
    PUSH [esp+48h+var_20]
    CALL sub_820CC90
    POP eax
    POP edx
    PUSH edi
    PUSH [esp+48h+arg_10]
    PUSH [esp+4Ch+arg_C]
    PUSH ebx
    PUSH [esp+54h+arg_4]
    PUSH [esp+58h+arg_0]
    CALL [esp+5Ch+var_20]
    ADD esp, 20h
    CMP eax, 0FFFFFFFEh
    MOV esi, eax
    JNZ loc_8203F76
loc_8203F66:
    MOV eax, [esp+3Ch+var_30]
    MOV eax, gs:[eax]
    CMP eax, 22h
    JZ loc_8204010
loc_8203F76:
    SUB esp, 8
    PUSH 0
    PUSH esi
    PUSH ebp
    PUSH 0
    PUSH offset aGetservbynameR
    LEA eax, [esp+58h+var_24]
    PUSH eax
    CALL sub_8208EE0
    ADD esp, 20h
    TEST eax, eax
    JZ loc_8203F38
loc_8203F95:
    CMP esi, 1
    MOV eax, [esp+3Ch+arg_14]
    JZ loc_8204098
loc_8203FA2:
    MOV dword ptr [eax], 0
    JBE loc_82040E4
loc_8203FAE:
    MOV eax, [esp+3Ch+var_30]
    MOV eax, gs:[eax]
    CMP eax, 22h
    JZ loc_82040E8
loc_8203FBE:
    ADD esp, 2Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 
loc_8203FD0:
    MOV ds:dword_83AD638, 0
loc_8203FDA:
    CMP ds:byte_83AD61C, 0
    JNZ loc_8203EDA
loc_8203FE7:
    SUB esp, 8
    PUSH [esp+44h+arg_14]
    PUSH [esp+48h+arg_10]
    PUSH [esp+4Ch+arg_C]
    PUSH ebx
    PUSH [esp+54h+arg_4]
    PUSH [esp+58h+arg_0]
    CALL sub_820AB90
    ADD esp, 20h
    TEST eax, eax
    JNS loc_8203FBE
loc_820400B:
    JMP loc_8203EDA
loc_8204010:
    MOV ecx, [esp+3Ch+arg_14]
    MOV dword ptr [ecx], 0
    ADD esp, 2Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 
loc_8204028:
    JZ loc_8203FDA
loc_820402A:
    CMP ds:byte_83ACC30, 0
    JNZ loc_8203EE7
loc_8204037:
    MOV esi, esi
    LEA edi, [edi+0]
loc_8204040:
    SUB esp, 0Ch
    XOR ecx, ecx
    MOV edx, offset aGetservbynameR
    LEA eax, [esp+48h+var_20]
    PUSH eax
    LEA eax, [esp+4Ch+var_24]
    CALL sub_8209550
    ADD esp, 0Ch
    TEST eax, eax
    JNZ loc_82040B0
loc_820405F:
    MOV edx, [esp+3Ch+var_20]
    XOR edx, large gs:18h
    ROL edx, 9
    MOV ds:dword_83ACC28, edx
    MOV edx, [esp+3Ch+var_24]
    XOR edx, large gs:18h
    ROL edx, 9
    MOV ds:dword_83ACC2C, edx
loc_8204087:
    MOV ds:byte_83ACC30, 1
    JMP loc_8203F16
loc_8204098:
    MOV [eax], ebx
    XOR eax, eax
loc_820409C:
    MOV ecx, [esp+3Ch+var_30]
    MOV gs:[ecx], eax
    ADD esp, 2Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 
loc_82040B0:
    MOV edx, 0FFFFFFFFh
    XOR edx, large gs:18h
    ROL edx, 9
    MOV ds:dword_83ACC2C, edx
    JMP loc_8204087
loc_82040C7:
    MOV eax, [esp+3Ch+arg_14]
    MOV esi, 0FFFFFFFFh
    MOV dword ptr [eax], 0
    MOV eax, 0FFFFFFE4h
    MOV [esp+3Ch+var_30], eax
    JMP loc_8203FAE
loc_82040E4:
    XOR eax, eax
    JMP loc_820409C
loc_82040E8:
    CMP esi, 0FFFFFFFEh
    JZ loc_8203FBE
loc_82040F1:
    MOV eax, 16h
    JMP loc_820409C

=====

1, gcc32

######
file_get_pass:
loc_81B0187:
    PUSH ebp
    PUSH edi
    PUSH esi
    PUSH ebx
    SUB esp, 0Ch
    MOV edi, eax
    MOV esi, edx
    MOV ebp, ecx
    CALL sub_8169279
    TEST eax, eax
    JNZ loc_81B01BF
loc_81B019D:
    SUB esp, 0Ch
    PUSH 31h
    PUSH offset aCryptoStoreLoa
    PUSH 41h
    PUSH 76h
    PUSH 2Ch
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_81B02C6
loc_81B01BF:
    MOV ebx, eax
    TEST edi, edi
    JZ loc_81B01D2
loc_81B01C5:
    SUB esp, 8
    PUSH edi
    PUSH eax
    CALL sub_8169C12
    ADD esp, 10h
loc_81B01D2:
    SUB esp, 8
    PUSH [esp+24h+arg_4]
    PUSH ebx
    CALL sub_81698B0
    ADD esp, 0Ch
    PUSH [esp+20h+arg_0]
    PUSH offset aPassPhrase
    PUSH ebx
    CALL sub_8169748
    MOV edi, eax
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_81B021C
loc_81B01FA:
    SUB esp, 0Ch
    PUSH 3Bh
    PUSH offset aCryptoStoreLoa
    PUSH 41h
    PUSH 76h
    PUSH 2Ch
    CALL sub_811C0C2
    ADD esp, 20h
    MOV esi, 0
    JMP loc_81B02A9
loc_81B021C:
    SUB esp, 8
    SUB ebp, 1
    PUSH ebp
    PUSH 0
    PUSH esi
    PUSH 2
    PUSH eax
    PUSH ebx
    CALL sub_81692EA
    ADD esp, 20h
    TEST eax, eax
    JNZ loc_81B0255
loc_81B0236:
    SUB esp, 0Ch
    PUSH 3Fh
    PUSH offset aCryptoStoreLoa
    PUSH 28h
    PUSH 76h
    PUSH 2Ch
    CALL sub_811C0C2
    ADD esp, 20h
    MOV esi, 0
    JMP loc_81B02A9
loc_81B0255:
    SUB esp, 0Ch
    PUSH ebx
    CALL sub_8169972
    ADD esp, 10h
    CMP eax, 0FFFFFFFEh
    JZ loc_81B026D
loc_81B0266:
    CMP eax, 0FFFFFFFFh
    JZ loc_81B028C
loc_81B026B:
    JMP loc_81B02A9
loc_81B026D:
    SUB esp, 0Ch
    PUSH 45h
    PUSH offset aCryptoStoreLoa
    PUSH 6Dh
    PUSH 76h
    PUSH 2Ch
    CALL sub_811C0C2
    ADD esp, 20h
    MOV esi, 0
    JMP loc_81B02A9
loc_81B028C:
    SUB esp, 0Ch
    PUSH 49h
    PUSH offset aCryptoStoreLoa
    PUSH 28h
    PUSH 76h
    PUSH 2Ch
    CALL sub_811C0C2
    ADD esp, 20h
    MOV esi, 0
loc_81B02A9:
    SUB esp, 4
    PUSH 51h
    PUSH offset aCryptoStoreLoa
    PUSH edi
    CALL sub_8132606
    MOV [esp+2Ch+var_2C], ebx
    CALL sub_8169287
    ADD esp, 10h
    MOV eax, esi
loc_81B02C6:
    ADD esp, 0Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 

=====

1, gcc32

######
d2i_PKCS12:
loc_8144C48:
    SUB esp, 0Ch
    PUSH offset unk_829E11C
    PUSH [esp+10h+arg_8]
    PUSH [esp+14h+arg_4]
    PUSH [esp+18h+arg_0]
    CALL sub_80DAD29
    ADD esp, 1Ch
    RETN 

=====

1, gcc32

######
oid_module_init:
loc_81B8B06:
    PUSH ebp
    PUSH edi
    PUSH esi
    PUSH ebx
    SUB esp, 28h
    PUSH [esp+38h+arg_0]
    CALL sub_80FBA17
    ADD esp, 8
    PUSH eax
    PUSH [esp+38h+arg_4]
    CALL sub_80FAE4D
    MOV [esp+3Ch+var_24], eax
    ADD esp, 10h
    MOV ebp, 0
    TEST eax, eax
    JNZ loc_81B8C42
loc_81B8B37:
    SUB esp, 0Ch
    PUSH 20h
    PUSH offset aCryptoAsn1AsnM_0
    PUSH 0ACh
    PUSH 0AEh
    PUSH 0Dh
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_81B8CC0
loc_81B8B5F:
    SUB esp, 8
    PUSH ebp
    PUSH [esp+38h+var_24]
    CALL sub_8161FE0
    MOV edx, [eax+4]
    MOV [esp+3Ch+var_20], edx
    MOV edi, [eax+8]
    ADD esp, 8
    PUSH 2Ch
    PUSH edi
    CALL sub_8048240
    ADD esp, 10h
    MOV ebx, eax
    TEST eax, eax
    JZ loc_81B8C8A
loc_81B8B8E:
    CMP byte ptr [eax+1], 0
    JZ loc_81B8C60
loc_81B8B98:
    LEA esi, [eax+1]
    JMP loc_81B8BA0
loc_81B8B9D:
    ADD esi, 1
loc_81B8BA0:
    SUB esp, 8
    PUSH 8
    MOVSX eax, byte ptr [esi]
    PUSH eax
    CALL sub_80FE42B
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_81B8B9D
loc_81B8BB5:
    JMP loc_81B8CA2
loc_81B8BBA:
    ADD edi, 1
loc_81B8BBD:
    SUB esp, 8
    PUSH 8
    MOVSX eax, byte ptr [edi]
    PUSH eax
    CALL sub_80FE42B
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_81B8BBA
loc_81B8BD2:
    SUB ebx, 1
    JMP loc_81B8BE2
loc_81B8BD7:
    CMP edi, ebx
    JZ loc_81B8C60
loc_81B8BDF:
    SUB ebx, 1
loc_81B8BE2:
    SUB esp, 8
    PUSH 8
    MOVSX eax, byte ptr [ebx]
    PUSH eax
    CALL sub_80FE42B
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_81B8BD7
loc_81B8BF7:
    ADD ebx, 1
    SUB ebx, edi
    SUB esp, 4
    PUSH 5Fh
    PUSH offset aCryptoAsn1AsnM_0
    MOV [esp+38h+var_20], ebx
    LEA eax, [ebx+1]
    PUSH eax
    CALL sub_81325B9
    MOV ebx, eax
    ADD esp, 10h
    TEST eax, eax
    JZ loc_81B8C60
loc_81B8C1C:
    SUB esp, 4
    PUSH [esp+30h+var_20]
    PUSH edi
    PUSH eax
    CALL sub_81DF0D0
    MOV eax, [esp+3Ch+var_20]
    MOV byte ptr [ebx+eax], 0
    MOV [esp+3Ch+var_3C], esi
    CALL sub_8139ADA
    MOV [eax+4], ebx
    ADD esp, 10h
    JMP loc_81B8C85
loc_81B8C42:
    SUB esp, 0Ch
    PUSH [esp+38h+var_24]
    CALL sub_8161FCF
    ADD esp, 10h
    CMP ebp, eax
    JL loc_81B8B5F
loc_81B8C59:
    MOV eax, 1
    JMP loc_81B8CC0
loc_81B8C60:
    SUB esp, 0Ch
    PUSH 26h
    PUSH offset aCryptoAsn1AsnM_0
    PUSH 0ABh
    PUSH 0AEh
    PUSH 0Dh
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_81B8CC0
loc_81B8C85:
    ADD ebp, 1
    JMP loc_81B8C42
loc_81B8C8A:
    SUB esp, 4
    MOV eax, [esp+30h+var_20]
    PUSH eax
    PUSH eax
    PUSH edi
    CALL sub_813A57E
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_81B8C85
loc_81B8CA0:
    JMP loc_81B8C60
loc_81B8CA2:
    SUB esp, 4
    PUSH 0
    PUSH [esp+34h+var_20]
    PUSH esi
    CALL sub_813A57E
    MOV esi, eax
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_81B8BBD
loc_81B8CBE:
    JMP loc_81B8C60
loc_81B8CC0:
    ADD esp, 1Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 

=====

1, gcc32

######
TS_MSG_IMPRINT_new:
loc_816325A:
    SUB esp, 18h
    PUSH offset unk_82A1358
    CALL sub_80DC619
    ADD esp, 1Ch
    RETN 

=====

1, gcc32

######
tls_process_cke_psk_preamble:
loc_80C1A8E:
    PUSH ebp
    PUSH edi
    PUSH esi
    PUSH ebx
    SUB esp, 12Ch
    MOV edi, eax
    MOV [esp+13Ch+var_130], ecx
    MOV eax, large gs:14h
    MOV [esp+13Ch+var_20], eax
    XOR eax, eax
    MOV eax, [edx+4]
    CMP eax, 1
    JBE loc_80C1D08
loc_80C1AB9:
    MOV esi, [edx]
    MOVZX ebx, byte ptr [esi]
    SHL ebx, 8
    MOVZX ecx, byte ptr [esi+1]
    OR ebx, ecx
    ADD esi, 2
    SUB eax, 2
    CMP ebx, eax
    JA loc_80C1D08
loc_80C1AD5:
    JMP loc_80C1CED
loc_80C1ADA:
    MOV eax, [esp+13Ch+var_130]
    MOV dword ptr [eax], 32h
    SUB esp, 0Ch
    PUSH 0A52h
    PUSH offset aSslStatemState_3
    PUSH 92h
    PUSH 19Eh
    PUSH 14h
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80C1CDB
loc_80C1B0F:
    CMP dword ptr [edi+414h], 0
    JNZ loc_80C1B4D
loc_80C1B18:
    MOV eax, [esp+13Ch+var_130]
    MOV dword ptr [eax], 50h
    SUB esp, 0Ch
    PUSH 0A57h
    PUSH offset aSslStatemState_3
    PUSH 0E1h
    PUSH 19Eh
    PUSH 14h
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80C1CDB
loc_80C1B4D:
    MOV ebp, [edi+3E8h]
    SUB esp, 4
    PUSH 1C5h
    PUSH offset aSslStatemPacke
    PUSH dword ptr [ebp+0D4h]
    CALL sub_8132606
    PUSH 1C8h
    PUSH offset aSslStatemPacke
    PUSH ebx
    PUSH esi
    CALL sub_8138630
    MOV [ebp+0D4h], eax
    ADD esp, 20h
    TEST eax, eax
    JNZ loc_80C1BBB
loc_80C1B89:
    MOV eax, [esp+13Ch+var_130]
    MOV dword ptr [eax], 50h
    SUB esp, 0Ch
    PUSH 0A5Dh
    PUSH offset aSslStatemState_3
    PUSH 44h
    PUSH 19Eh
    PUSH 14h
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80C1CDB
loc_80C1BBB:
    PUSH 100h
    LEA eax, [esp+140h+var_120]
    PUSH eax
    MOV eax, [edi+3E8h]
    PUSH dword ptr [eax+0D4h]
    PUSH edi
    CALL dword ptr [edi+414h]
    MOV ebp, eax
    ADD esp, 10h
    CMP eax, 100h
    JBE loc_80C1C16
loc_80C1BE4:
    MOV eax, [esp+13Ch+var_130]
    MOV dword ptr [eax], 50h
    SUB esp, 0Ch
    PUSH 0A66h
    PUSH offset aSslStatemState_3
    PUSH 44h
    PUSH 19Eh
    PUSH 14h
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80C1CDB
loc_80C1C16:
    TEST eax, eax
    JNZ loc_80C1C4F
loc_80C1C1A:
    MOV eax, [esp+13Ch+var_130]
    MOV dword ptr [eax], 73h
    SUB esp, 0Ch
    PUSH 0A6Eh
    PUSH offset aSslStatemState_3
    PUSH 0DFh
    PUSH 19Eh
    PUSH 14h
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80C1CDB
loc_80C1C4F:
    SUB esp, 4
    PUSH 0A72h
    PUSH offset aSslStatemState_3
    MOV eax, [edi+74h]
    PUSH dword ptr [eax+258h]
    CALL sub_8132606
    MOV esi, [edi+74h]
    PUSH 0A73h
    PUSH offset aSslStatemState_3
    PUSH ebp
    LEA ebx, [esp+158h+var_120]
    PUSH ebx
    CALL sub_8138593
    MOV [esi+258h], eax
    ADD esp, 18h
    PUSH ebp
    PUSH ebx
    CALL sub_8132852
    MOV eax, [edi+74h]
    ADD esp, 10h
    CMP dword ptr [eax+258h], 0
    JNZ loc_80C1CD0
loc_80C1CA1:
    MOV eax, [esp+13Ch+var_130]
    MOV dword ptr [eax], 50h
    SUB esp, 0Ch
    PUSH 0A78h
    PUSH offset aSslStatemState_3
    PUSH 41h
    PUSH 19Eh
    PUSH 14h
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80C1CDB
loc_80C1CD0:
    MOV [eax+25Ch], ebp
    MOV eax, 1
loc_80C1CDB:
    MOV edi, [esp+13Ch+var_20]
    XOR edi, large gs:14h
    JZ loc_80C1D3F
loc_80C1CEB:
    JMP loc_80C1D3A
loc_80C1CED:
    LEA ecx, [esi+ebx]
    MOV [edx], ecx
    SUB eax, ebx
    MOV [edx+4], eax
    CMP ebx, 80h
    JBE loc_80C1B0F
loc_80C1D03:
    JMP loc_80C1ADA
loc_80C1D08:
    MOV eax, [esp+13Ch+var_130]
    MOV dword ptr [eax], 32h
    SUB esp, 0Ch
    PUSH 0A4Dh
    PUSH offset aSslStatemState_3
    PUSH 9Fh
    PUSH 19Eh
    PUSH 14h
    CALL sub_811C0C2
    ADD esp, 20h
    MOV eax, 0
    JMP loc_80C1CDB
loc_80C1D3A:
    CALL sub_82033E0
loc_80C1D3F:
    ADD esp, 12Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 

=====

2, gcc32

######
ASN1_TIME_to_generalizedtime:
loc_80D5330:
    PUSH esi
    PUSH ebx
    SUB esp, 3Ch
    LEA esi, [esp+44h+var_3C]
    MOV ebx, [esp+44h+arg_4]
    MOV eax, large gs:14h
    MOV [esp+44h+var_10], eax
    XOR eax, eax
    PUSH esi
    PUSH [esp+48h+arg_0]
    CALL sub_80D5290
    ADD esp, 10h
    TEST eax, eax
    JZ loc_80D53A8
loc_80D535A:
    TEST ebx, ebx
    JZ loc_80D5390
loc_80D535E:
    SUB esp, 4
    PUSH 18h
    PUSH esi
    PUSH dword ptr [ebx]
    CALL sub_80D4EB0
    ADD esp, 10h
    XOR edx, edx
    TEST eax, eax
    JZ loc_80D5378
loc_80D5374:
    MOV [ebx], eax
    MOV edx, eax
loc_80D5378:
    MOV ecx, [esp+3Ch+var_10]
    XOR ecx, large gs:14h
    MOV eax, edx
    JNZ loc_80D53AC
loc_80D5387:
    ADD esp, 34h
    POP ebx
    POP esi
    RETN 
loc_80D5390:
    SUB esp, 4
    PUSH 18h
    PUSH esi
    PUSH 0
    CALL sub_80D4EB0
    ADD esp, 10h
    MOV edx, eax
    JMP loc_80D5378
loc_80D53A8:
    XOR edx, edx
    JMP loc_80D5378
loc_80D53AC:
    CALL sub_820EA30

=====

2, gcc32

######
SSL_CTX_sess_set_new_cb:
loc_80ADC10:
    MOV edx, [esp+arg_4]
    MOV eax, [esp+arg_0]
    MOV [eax+28h], edx
    RETN 

=====

2, gcc32

######
getegid:
loc_8206FF0:
    MOV eax, 0CAh
    CALL off_83B5430
    RETN 

=====

2, gcc32

######
SCT_set0_signature:
loc_8101E30:
    PUSH ebx
    SUB esp, 0Ch
    MOV ebx, [esp+10h+arg_0]
    PUSH 0ABh
    PUSH offset aCryptoCtCtSctC
    PUSH dword ptr [ebx+28h]
    CALL sub_81399D0
    MOV eax, [esp+1Ch+arg_4]
    MOV dword ptr [ebx+38h], 0
    MOV [ebx+28h], eax
    MOV eax, [esp+1Ch+arg_8]
    MOV [ebx+2Ch], eax
    ADD esp, 18h
    POP ebx
    RETN 

=====

2, gcc32

######
classify_object_over_fdes:
loc_82559F0:
    PUSH ebp
    PUSH edi
    MOV ebp, eax
    PUSH esi
    PUSH ebx
    SUB esp, 2Ch
    MOV eax, [edx]
    TEST eax, eax
    JZ loc_8255AFB
loc_8255A03:
    LEA eax, [esp+3Ch+var_20]
    MOV ebx, edx
    MOV [esp+3Ch+var_38], 0
    MOV [esp+3Ch+var_3C], 0
    MOV [esp+3Ch+var_30], 0
    XOR edx, edx
    MOV [esp+3Ch+var_34], eax
    LEA esi, [esi+0]
    LEA edi, [edi+0]
loc_8255A30:
    MOV eax, [ebx+4]
    TEST eax, eax
    JZ loc_8255AE7
loc_8255A3B:
    LEA esi, [ebx+4]
    MOVZX edi, byte ptr [esp+3Ch+var_3C]
    SUB esi, eax
    CMP esi, edx
    JZ loc_8255A94
loc_8255A48:
    MOV eax, esi
    CALL sub_8255190
    CMP eax, 0FFh
    MOV [esp+3Ch+var_3C], eax
    JZ loc_8255B20
loc_8255A5D:
    MOVZX edi, byte ptr [esp+3Ch+var_3C]
    MOV edx, ebp
    MOV eax, edi
    CALL sub_8254F00
    MOV [esp+3Ch+var_38], eax
    MOVZX eax, word ptr [ebp+10h]
    MOV edx, eax
    AND dx, 7F8h
    CMP dx, 7F8h
    JZ loc_8255B08
loc_8255A84:
    SHR ax, 3
    MOVZX eax, al
    CMP [esp+3Ch+var_3C], eax
    JZ loc_8255A94
loc_8255A90:
    OR byte ptr [ebp+10h], 4
loc_8255A94:
    SUB esp, 0Ch
    LEA ecx, [ebx+8]
    MOV eax, edi
    PUSH [esp+48h+var_34]
    MOV edx, [esp+4Ch+var_38]
    CALL sub_8254FC0
    MOV eax, edi
    MOV edi, 0FFFFFFFFh
    CALL sub_8254E90
    ADD esp, 10h
    CMP eax, 3
    JA loc_8255ACE
loc_8255ABD:
    LEA ecx, ds:0[eax*8]
    MOV edi, 1
    SHL edi, cl
    SUB edi, 1
loc_8255ACE:
    MOV eax, [esp+3Ch+var_20]
    MOV edx, esi
    TEST edi, eax
    JZ loc_8255AE7
loc_8255AD8:
    ADD [esp+3Ch+var_30], 1
    CMP [ebp+0], eax
    JBE loc_8255AE5
loc_8255AE2:
    MOV [ebp+0], eax
loc_8255AE5:
    MOV edx, esi
loc_8255AE7:
    MOV eax, [ebx]
    LEA ebx, [ebx+eax+4]
    MOV eax, [ebx]
    TEST eax, eax
    JNZ loc_8255A30
loc_8255AF7:
    MOV eax, [esp+3Ch+var_30]
loc_8255AFB:
    ADD esp, 2Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 
loc_8255B08:
    MOVZX edx, byte ptr [esp+3Ch+var_3C]
    AND ax, 0F807h
    SHL edx, 3
    OR eax, edx
    MOV [ebp+10h], ax
    JMP loc_8255A94
loc_8255B20:
    ADD esp, 2Ch
    MOV eax, 0FFFFFFFFh
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 

=====

2, gcc32

######
__stpcpy_ia32:
loc_81EA590:
    PUSH edi
    PUSH esi
    PUSH ebx
    MOV edi, [esp+0Ch+arg_0]
    MOV esi, [esp+0Ch+arg_4]
    XOR eax, eax
    LEA ecx, [esi-1]
    MOV ebx, 0FEFEFEFFh
    AND ecx, 3
    LEA ecx, loc_81EA5B8[ecx*8]
    JMP ecx

=====

2, gcc32

######
RSA_PSS_PARAMS_free:
loc_815CB00:
    SUB esp, 14h
    PUSH offset unk_82AA634
    PUSH [esp+18h+arg_0]
    CALL sub_80DDC50
    ADD esp, 1Ch
    RETN 

=====

2, gcc32

######
match_prefix:
loc_82078B0:
    PUSH ebp
    PUSH edi
    PUSH esi
    PUSH ebx
    MOV esi, eax
    SUB esp, 24h
    MOVZX edi, word ptr [eax]
    CMP di, 2
    JZ loc_82078D2
loc_82078C2:
    CMP di, 0Ah
    MOV eax, ecx
    JZ loc_8207922
loc_82078CA:
    ADD esp, 24h
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 
loc_82078D2:
    MOV eax, 0Ah
    MOV ecx, 0FFFFFFFFh
    MOV [esp+34h+var_1C], 0
    MOV [esp+34h+var_2C], ax
    MOVZX eax, word ptr [esi+2]
    MOV [esp+34h+var_28], 0
    MOV [esp+34h+var_24], 0
    MOV [esp+34h+var_20], 0
    MOV word ptr [esp+34h+var_1C+2], cx
    MOV [esp+34h+var_14], 0
    MOV [esp+34h+var_2A], ax
    MOV eax, [esi+4]
    LEA esi, [esp+34h+var_2C]
    MOV [esp+34h+var_18], eax
loc_8207922:
    MOV ebx, edx
    LEA eax, [esi+8]
    MOV edi, 0FF00h
    MOV ecx, [ebx+10h]
    MOV [esp+34h+var_34], eax
    CMP ecx, 7
    JBE loc_8207984
loc_8207937:
    MOV esi, esi
    LEA edi, [edi+0]
loc_8207940:
    MOVZX eax, byte ptr [esi+8]
    CMP [ebx], al
    JNZ loc_8207979
loc_8207948:
    MOV edx, [esp+34h+var_34]
    MOV ebp, ebx
    JMP loc_8207958
loc_8207950:
    MOVZX eax, byte ptr [edx]
    CMP [ebp+0], al
    JNZ loc_8207979
loc_8207958:
    SUB ecx, 8
    ADD ebp, 1
    ADD edx, 1
    CMP ecx, 7
    JA loc_8207950
loc_8207966:
    MOVZX ebp, byte ptr [ebp+0]
    MOV eax, ebp
    XOR al, [edx]
    MOVZX edx, al
    MOV eax, edi
    SAR eax, cl
    TEST edx, eax
    JZ loc_820798B
loc_8207979:
    ADD ebx, 18h
    MOV ecx, [ebx+10h]
    CMP ecx, 7
    JA loc_8207940
loc_8207984:
    MOV edx, [esp+34h+var_34]
    MOV ebp, ebx
    JMP loc_8207966
loc_820798B:
    MOV eax, [ebx+14h]
    ADD esp, 24h
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 

=====

2, gcc32

######
X509_CRL_get_ext:
loc_8178790:
    MOV eax, [esp+arg_0]
    MOV eax, [eax+1Ch]
    MOV [esp+arg_0], eax
    JMP sub_817B320

=====

2, gcc32

######
SRP_Calc_A_param:
loc_80CDC40:
    PUSH esi
    PUSH ebx
    SUB esp, 48h
    MOV eax, large gs:14h
    MOV [esp+50h+var_10], eax
    XOR eax, eax
    MOV ebx, [esp+50h+arg_0]
    PUSH 30h
    LEA esi, [esp+54h+var_40]
    PUSH esi
    PUSH ebx
    CALL sub_80A9DE0
    ADD esp, 10h
    XOR edx, edx
    TEST eax, eax
    JLE loc_80CDCB6
loc_80CDC6B:
    SUB esp, 4
    PUSH dword ptr [ebx+548h]
    PUSH 30h
    PUSH esi
    CALL sub_80EF0B0
    MOV [ebx+548h], eax
    POP eax
    POP edx
    PUSH 30h
    PUSH esi
    CALL sub_8139CD0
    ADD esp, 0Ch
    PUSH dword ptr [ebx+538h]
    PUSH dword ptr [ebx+534h]
    PUSH dword ptr [ebx+548h]
    CALL sub_8169380
    XOR edx, edx
    ADD esp, 10h
    TEST eax, eax
    MOV [ebx+544h], eax
    SETNZ dl
loc_80CDCB6:
    MOV ecx, [esp+4Ch+var_10]
    XOR ecx, large gs:14h
    MOV eax, edx
    JNZ loc_80CDCCB
loc_80CDCC5:
    ADD esp, 44h
    POP ebx
    POP esi
    RETN 
loc_80CDCCB:
    CALL sub_820EA30

=====

3, gcc32

######
ASN1_STRING_new:
loc_80EF880:
    SUB esp, 10h
    PUSH 13Ch
    PUSH offset aCryptoAsn1Asn1_0
    PUSH 10h
    CALL sub_8173870
    ADD esp, 10h
    TEST eax, eax
    JZ loc_80EF8A6
loc_80EF89B:
    MOV dword ptr [eax+4], 4
loc_80EF8A2:
    ADD esp, 0Ch
    RETN 
loc_80EF8A6:
    SUB esp, 0Ch
    PUSH 13Eh
    PUSH offset aCryptoAsn1Asn1_0
    PUSH 41h
    PUSH 82h
    PUSH 0Dh
    CALL sub_814D420
    ADD esp, 20h
    XOR eax, eax
    JMP loc_80EF8A2

=====

3, gcc32

######
extension_is_relevant:
loc_80BCFE0:
    PUSH ebx
    TEST [esp+4+arg_9], 8
    MOV edx, [esp+4+arg_0]
    MOV ecx, [esp+4+arg_4]
    MOV eax, [edx+4]
    JZ loc_80BD020
loc_80BCFF3:
    MOV eax, [eax+64h]
    MOV ebx, 1
    TEST byte ptr [eax+30h], 8
    JZ loc_80BD050
loc_80BD001:
    XOR eax, eax
    TEST cl, 4
    JNZ loc_80BD01B
loc_80BD008:
    CMP dword ptr [edx], 300h
    JZ loc_80BD046
loc_80BD010:
    TEST ebx, ebx
    JNZ loc_80BD058
loc_80BD014:
    XOR eax, eax
    TEST cl, 20h
    JZ loc_80BD05F
loc_80BD01B:
    POP ebx
    RETN 
loc_80BD020:
    MOV ebx, [eax+64h]
    TEST byte ptr [ebx+30h], 8
    JNZ loc_80BD080
loc_80BD029:
    MOV eax, [eax]
    CMP eax, 10000h
    JZ loc_80BD090
loc_80BD032:
    CMP eax, 303h
    JLE loc_80BD090
loc_80BD039:
    CMP dword ptr [edx], 300h
    JNZ loc_80BD058
loc_80BD041:
    MOV ebx, 1
loc_80BD046:
    XOR eax, eax
    TEST cl, 8
    JNZ loc_80BD010
loc_80BD04D:
    POP ebx
    RETN 
loc_80BD050:
    CMP dword ptr [edx], 300h
    JZ loc_80BD046
loc_80BD058:
    XOR eax, eax
    TEST cl, 10h
    JNZ loc_80BD01B
loc_80BD05F:
    MOV edx, [edx+84h]
    MOV eax, 1
    TEST edx, edx
    JZ loc_80BD01B
loc_80BD06E:
    MOV eax, ecx
    SHR eax, 6
    XOR eax, 1
    AND eax, 1
    POP ebx
    RETN 
loc_80BD080:
    XOR ebx, ebx
    XOR eax, eax
    TEST cl, 4
    JZ loc_80BD008
loc_80BD08D:
    JMP loc_80BD01B
loc_80BD090:
    CMP dword ptr [edx], 300h
    JNZ loc_80BD014
loc_80BD09C:
    XOR ebx, ebx
    JMP loc_80BD046

=====

3, gcc32

######
add_module:
loc_827A2D0:
    PUSH ebp
    MOV ebp, esp
    PUSH edi
    PUSH esi
    PUSH ebx
    MOV edi, eax
    SUB esp, 3Ch
    MOVSX esi, byte ptr [edi]
    MOV eax, ds:off_8343114
    MOV [ebp+var_34], edx
    MOV [ebp+var_2C], ecx
    TEST byte ptr [eax+esi*2+1], 20h
    JZ loc_827A58A
loc_827A2F4:
    LEA esi, [esi+0]
loc_827A2F8:
    ADD edi, 1
    MOVSX esi, byte ptr [edi]
    TEST byte ptr [eax+esi*2+1], 20h
    MOV ebx, esi
    JNZ loc_827A2F8
loc_827A307:
    TEST bl, bl
    MOV edx, edi
    MOV ecx, esi
    JNZ loc_827A321
loc_827A30F:
    JMP loc_827A337
loc_827A318:
    TEST byte ptr [eax+ecx*2+1], 20h
    JNZ loc_827A348
loc_827A31F:
    MOV edx, ebx
loc_827A321:
    MOV esi, ds:off_834311C
    LEA ebx, [edx+1]
    MOV ecx, [esi+ecx*4]
    MOV [edx], cl
    MOVSX ecx, byte ptr [edx+1]
    TEST cl, cl
    JNZ loc_827A318
loc_827A337:
    LEA esp, [ebp-0Ch]
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 0Ch
loc_827A348:
    LEA esi, [edx+2]
    MOV byte ptr [ebx], 0
    MOV ecx, esi
    MOV [ebp+var_30], esi
    MOVSX esi, byte ptr [ebx+1]
    MOV ebx, ecx
    TEST byte ptr [eax+esi*2+1], 20h
    JZ loc_827A591
loc_827A364:
    LEA esi, [esi+0]
loc_827A368:
    ADD ebx, 1
    MOVSX edx, byte ptr [ebx]
    TEST byte ptr [eax+edx*2+1], 20h
    MOV ecx, edx
    JNZ loc_827A368
loc_827A377:
    TEST cl, cl
    MOVSX edx, cl
    MOV esi, [ebp+var_30]
    JNZ loc_827A38F
loc_827A381:
    JMP loc_827A337
loc_827A388:
    TEST byte ptr [eax+edx*2+1], 20h
    JNZ loc_827A3B0
loc_827A38F:
    MOV ecx, ds:off_834311C
    ADD esi, 1
    ADD ebx, 1
    MOV edx, [ecx+edx*4]
    MOV [esi-1], dl
    MOVSX edx, byte ptr [ebx]
    TEST dl, dl
    JNZ loc_827A388
loc_827A3A8:
    JMP loc_827A337
loc_827A3B0:
    LEA edx, [esi+1]
    MOV byte ptr [esi], 0
    MOV [ebp+var_38], edx
    LEA esi, [esi+0]
loc_827A3C0:
    ADD ebx, 1
    MOVSX ecx, byte ptr [ebx]
    TEST byte ptr [eax+ecx*2+1], 20h
    MOV edx, ecx
    JNZ loc_827A3C0
loc_827A3CF:
    TEST dl, dl
    MOV ecx, [ebp+var_38]
    JZ loc_827A401
loc_827A3D6:
    MOV [ebp+var_3C], esi
    JMP loc_827A3EE
loc_827A3E0:
    MOVSX esi, dl
    TEST byte ptr [eax+esi*2+1], 20h
    JNZ loc_827A558
loc_827A3EE:
    ADD ecx, 1
    ADD ebx, 1
    MOV [ecx-1], dl
    MOVZX edx, byte ptr [ebx]
    TEST dl, dl
    JNZ loc_827A3E0
loc_827A3FE:
    MOV esi, [ebp+var_3C]
loc_827A401:
    LEA ebx, [ecx+1]
    MOV byte ptr [ecx], 0
    MOV [ebp+var_3C], 1
loc_827A40E:
    MOVZX eax, byte ptr [esi+1]
    TEST al, al
    JZ loc_827A337
loc_827A41A:
    CMP al, 2Fh
    MOV eax, 0
    CMOVNZ eax, [ebp+var_2C]
    MOV esi, 3
    MOV [ebp+var_2C], eax
    MOV eax, ebx
    SUB eax, [ebp+var_38]
    CMP eax, 3
    MOV [ebp+var_40], eax
    JLE loc_827A45A
loc_827A43A:
    LEA eax, [ebx-4]
    SUB esp, 4
    PUSH 4
    PUSH offset aSo
    PUSH eax
    CALL sub_8048350
    ADD esp, 10h
    CMP eax, 1
    SBB esi, esi
    NOT esi
    AND esi, 3
loc_827A45A:
    MOV eax, [ebp+var_30]
    SUB esp, 8
    SUB eax, edi
    PUSH eax
    PUSH edi
    MOV [ebp+var_44], eax
    CALL sub_80482F0
    LEA edx, [eax+1Fh]
    ADD esp, 10h
    AND edx, 0FFFFFFF0h
    SUB esp, edx
    LEA edx, [esp+0Fh]
    SUB esp, 4
    AND edx, 0FFFFFFF0h
    MOV byte ptr [edx+eax], 0
    PUSH eax
    PUSH edi
    PUSH edx
    CALL sub_824ABB0
    MOV [ebp+var_20], eax
    LEA eax, [ebp+var_20]
    ADD esp, 0Ch
    PUSH offset sub_82792B0
    PUSH offset dword_84366D4
    PUSH eax
    CALL sub_826D0E0
    ADD esp, 10h
    TEST eax, eax
    JNZ loc_827A337
loc_827A4B1:
    MOV eax, [ebp+var_2C]
    SUB ebx, edi
    SUB esp, 8
    LEA eax, [eax+ebx+20h]
    ADD eax, esi
    PUSH eax
    PUSH 1
    CALL sub_82475C0
    ADD esp, 10h
    TEST eax, eax
    MOV ebx, eax
    JZ loc_827A337
loc_827A4D4:
    LEA eax, [eax+20h]
    SUB esp, 4
    MOV [ebx], eax
    PUSH [ebp+var_44]
    PUSH edi
    PUSH eax
    CALL sub_824A9B0
    MOV ecx, [ebp+var_30]
    MOV edx, [ebp+var_38]
    ADD esp, 0Ch
    MOV [ebx+4], eax
    SUB edx, ecx
    PUSH edx
    PUSH ecx
    PUSH eax
    CALL sub_824A9B0
    MOV edx, [ebp+var_3C]
    ADD esp, 10h
    MOV [ebx+10h], eax
    MOV [ebx+8], edx
    MOV edx, [ebp+arg_8]
    MOV [ebx+0Ch], edx
    MOV edx, [ebp+var_2C]
    TEST edx, edx
    JZ loc_827A527
loc_827A515:
    SUB esp, 4
    PUSH [ebp+var_2C]
    PUSH [ebp+var_34]
    PUSH eax
    CALL sub_824A9B0
    ADD esp, 10h
loc_827A527:
    SUB esp, 4
    PUSH [ebp+var_40]
    PUSH [ebp+var_38]
    PUSH eax
    CALL sub_824A9B0
    ADD esp, 10h
    TEST esi, esi
    JZ loc_827A544
loc_827A53D:
    MOV dword ptr [eax-1], 6F732Eh
loc_827A544:
    MOV edx, 1
    MOV eax, ebx
    CALL sub_827A1F0
    JMP loc_827A337
loc_827A558:
    LEA eax, [ebp+var_20]
    SUB esp, 4
    MOV byte ptr [ecx], 0
    PUSH 0Ah
    MOV [ebp+var_40], ecx
    PUSH eax
    PUSH ebx
    MOV esi, [ebp+var_3C]
    CALL sub_8234D80
    ADD esp, 10h
    CMP [ebp+var_20], ebx
    MOV [ebp+var_3C], eax
    MOV ecx, [ebp+var_40]
    JZ loc_827A59A
loc_827A57E:
    TEST eax, eax
    JLE loc_827A59A
loc_827A582:
    LEA ebx, [ecx+1]
    JMP loc_827A40E
loc_827A58A:
    MOV ebx, esi
    JMP loc_827A307
loc_827A591:
    MOVZX ecx, byte ptr [edx+2]
    JMP loc_827A377
loc_827A59A:
    MOV [ebp+var_3C], 1
    JMP loc_827A582

=====

3, gcc32

######
DH_security_bits:
loc_81328D0:
    PUSH esi
    PUSH ebx
    SUB esp, 4
    MOV ebx, [esp+0Ch+arg_0]
    MOV eax, [ebx+24h]
    TEST eax, eax
    JZ loc_8132910
loc_81328E0:
    SUB esp, 0Ch
    PUSH eax
    CALL sub_810ECD0
    ADD esp, 10h
    MOV esi, eax
loc_81328EE:
    SUB esp, 0Ch
    PUSH dword ptr [ebx+8]
    CALL sub_810ECD0
    POP edx
    POP ecx
    PUSH esi
    PUSH eax
    CALL sub_8110100
    ADD esp, 14h
    POP ebx
    POP esi
    RETN 
loc_8132910:
    MOV esi, [ebx+10h]
    MOV eax, 0FFFFFFFFh
    TEST esi, esi
    CMOVZ esi, eax
    JMP loc_81328EE

=====

3, gcc32

######
__libc_scratch_buffer_set_array_size:
loc_8299910:
    PUSH edi
    PUSH esi
    PUSH ebx
    MOV ecx, [esp+0Ch+arg_4]
    MOV edi, [esp+0Ch+arg_8]
    MOV ebx, [esp+0Ch+arg_0]
    MOV eax, ecx
    MOV esi, ecx
    OR eax, edi
    SHR eax, 10h
    IMUL esi, edi
    TEST eax, eax
    JZ loc_8299970
loc_829992F:
    TEST ecx, ecx
    JZ loc_8299970
loc_8299933:
    XOR edx, edx
    MOV eax, esi
    DIV ecx
    CMP edi, eax
    JZ loc_8299970
loc_829993D:
    MOV eax, [ebx]
    LEA esi, [ebx+8]
    CMP eax, esi
    JZ loc_8299952
loc_8299946:
    SUB esp, 0Ch
    PUSH eax
    CALL sub_8247290
    ADD esp, 10h
loc_8299952:
    MOV eax, 0FFFFFFE4h
    MOV [ebx], esi
    MOV dword ptr [ebx+4], 400h
    MOV dword ptr gs:[eax], 0Ch
    XOR eax, eax
loc_8299969:
    POP ebx
    POP esi
    POP edi
    RETN 
loc_8299970:
    CMP esi, [ebx+4]
    MOV eax, 1
    JBE loc_8299969
loc_829997A:
    MOV eax, [ebx]
    LEA edi, [ebx+8]
    CMP eax, edi
    JZ loc_829998F
loc_8299983:
    SUB esp, 0Ch
    PUSH eax
    CALL sub_8247290
    ADD esp, 10h
loc_829998F:
    SUB esp, 0Ch
    PUSH esi
    CALL sub_8246D80
    ADD esp, 10h
    TEST eax, eax
    JZ loc_82999B0
loc_829999F:
    MOV [ebx], eax
    MOV [ebx+4], esi
    MOV eax, 1
    POP ebx
    POP esi
    POP edi
    RETN 
loc_82999B0:
    MOV [ebx], edi
    MOV dword ptr [ebx+4], 400h
    JMP loc_8299969

=====

3, gcc32

######
__memset_chk_ia32:
loc_826E880:
    MOV eax, [esp+arg_8]
    CMP [esp+arg_C], eax
    JB sub_826ED40
loc_826E88E:
    JMP loc_824A960
loc_824A960:
    CLD 
    PUSH edi
    MOV edx, [esp+4+arg_0]
    MOV ecx, [esp+4+arg_8]
    MOVZX eax, [esp+4+arg_4]
    JECXZ loc_824A99D
loc_824A971:
    MOV edi, edx
    AND edx, 3
    JZ loc_824A989
loc_824A978:
    JP loc_824A97E
loc_824A97A:
    STOSB 
    DEC ecx
    JZ loc_824A99D
loc_824A97E:
    STOSB 
    DEC ecx
    JZ loc_824A99D
loc_824A982:
    XOR edx, 1
    JNZ loc_824A989
loc_824A987:
    STOSB 
    DEC ecx
loc_824A989:
    MOV edx, ecx
    SHR ecx, 2
    AND edx, 3
    IMUL eax, 1010101h
    REP 
    MOV ecx, edx
    REP 
loc_824A99D:
    MOV eax, [esp+4+arg_0]
    POP edi
    RETN 

=====

3, gcc32

######
SRP_VBASE_free:
loc_81B45D0:
    PUSH ebx
    SUB esp, 8
    MOV ebx, [esp+0Ch+arg_0]
    TEST ebx, ebx
    JZ loc_81B461F
loc_81B45DC:
    SUB esp, 8
    PUSH offset sub_81B41C0
    PUSH dword ptr [ebx]
    CALL sub_81B5F40
    POP eax
    PUSH dword ptr [ebx+4]
    CALL sub_81B5FB0
    ADD esp, 0Ch
    PUSH 0A5h
    PUSH offset aCryptoSrpSrpVf
    PUSH dword ptr [ebx+8]
    CALL sub_8173670
    ADD esp, 0Ch
    PUSH 0A6h
    PUSH offset aCryptoSrpSrpVf
    PUSH ebx
    CALL sub_8173670
    ADD esp, 10h
loc_81B461F:
    ADD esp, 8
    POP ebx
    RETN 

=====

3, gcc32

######
__gconv_transform_ucs4_internal:
loc_827B1F0:
    PUSH ebp
    PUSH edi
    PUSH esi
    PUSH ebx
    SUB esp, 4Ch
    MOV edi, [esp+5Ch+arg_4]
    MOV eax, [esp+5Ch+arg_0]
    MOV esi, [esp+5Ch+arg_18]
    MOV [esp+5Ch+var_4C], 0
    LEA ecx, [eax+3Ch]
    MOV ebp, [edi+8]
    MOV [esp+5Ch+var_44], ecx
    LEA ecx, [edi+20h]
    TEST ebp, 1
    MOV [esp+5Ch+var_40], ecx
    JNZ loc_827B242
loc_827B224:
    MOV ecx, [eax+50h]
    MOV eax, [eax+3Ch]
    TEST eax, eax
    MOV [esp+5Ch+var_4C], ecx
    JZ loc_827B242
loc_827B232:
    MOV eax, ecx
    ROR eax, 9
    XOR eax, large gs:18h
    MOV [esp+5Ch+var_4C], eax
loc_827B242:
    TEST esi, esi
    JZ loc_827B2B0
loc_827B246:
    MOV eax, [esp+5Ch+arg_10]
    TEST eax, eax
    JNZ loc_827B5F3
loc_827B252:
    MOV eax, [edi+14h]
    MOV dword ptr [eax], 0
    MOV dword ptr [eax+4], 0
    XOR eax, eax
    TEST byte ptr [edi+8], 1
    JZ loc_827B278
loc_827B26A:
    ADD esp, 4Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 
loc_827B278:
    SUB esp, 0Ch
    MOV edi, [esp+68h+var_4C]
    PUSH edi
    CALL sub_8278770
    PUSH [esp+6Ch+arg_1C]
    PUSH esi
    PUSH [esp+74h+arg_14]
    PUSH 0
    PUSH 0
    PUSH 0
    PUSH [esp+84h+var_40]
    PUSH [esp+88h+var_44]
    CALL edi
    ADD esp, 30h
    ADD esp, 4Ch
    POP ebx
    POP esi
    POP edi
    POP ebp
    RETN 
loc_827B2B0:
    MOV eax, [esp+5Ch+arg_10]
    TEST eax, eax
    JZ loc_827B579
loc_827B2BC:
    MOV eax, [esp+5Ch+arg_10]
    MOV eax, [eax]
    MOV [esp+5Ch+var_50], eax
loc_827B2C6:
    MOV eax, [edi+4]
    MOV ebx, [esp+5Ch+arg_14]
    LEA edx, [esp+5Ch+var_24]
    MOV esi, [esp+5Ch+arg_1C]
    MOV [esp+5Ch+var_24], 0
    TEST ebx, ebx
    MOV [esp+5Ch+var_3C], eax
    MOV eax, 0
    CMOVNZ eax, edx
    TEST esi, esi
    MOV [esp+5Ch+var_48], eax
    JZ loc_827B3F2
loc_827B2F7:
    MOV ebx, [edi+14h]
    MOV esi, [ebx]
    MOV eax, esi
    AND eax, 7
    MOV [esp+5Ch+var_38], eax
    JZ loc_827B3F2
loc_827B30B:
    MOV ecx, [esp+5Ch+arg_10]
    TEST ecx, ecx
    JNZ loc_827B62C
loc_827B317:
    MOV eax, [esp+5Ch+arg_8]
    MOV edx, [eax]
    CMP [esp+5Ch+arg_C], edx
    MOV eax, [esp+5Ch+var_38]
    JBE loc_827B36E
loc_827B327:
    CMP eax, 3
    JA loc_827B584
loc_827B330:
    MOV [esp+5Ch+var_34], ebp
    MOV [esp+5Ch+var_30], esi
    MOV ecx, [esp+5Ch+arg_8]
    MOV ebp, [esp+5Ch+arg_C]
    JMP loc_827B351
loc_827B348:
    CMP eax, 4
    JZ loc_827B5AB
loc_827B351:
    LEA esi, [edx+1]
    ADD eax, 1
    MOV [ecx], esi
    MOVZX edx, byte ptr [edx]
    MOV [ebx+eax+3], dl
    MOV edx, [ecx]
    CMP ebp, edx
    JA loc_827B348
loc_827B366:
    MOV ebp, [esp+5Ch+var_34]
    MOV esi, [esp+5Ch+var_30]
loc_827B36E:
    CMP eax, 3
    JA loc_827B588
loc_827B377:
    AND esi, 0FFFFFFF8h
    OR eax, esi
    MOV [ebx], eax
    MOV eax, 7
    JMP loc_827B26A
loc_827B390:
    MOV eax, [edi]
    SUB esp, 0Ch
    MOV [esp+68h+var_20], eax
    MOV ebp, [esp+68h+var_4C]
    PUSH ebp
    CALL sub_8278770
    PUSH [esp+6Ch+arg_1C]
    PUSH 0
    PUSH [esp+74h+arg_14]
    PUSH 0
    PUSH esi
    LEA eax, [esp+80h+var_20]
    PUSH eax
    PUSH [esp+84h+var_40]
    PUSH [esp+88h+var_44]
    CALL ebp
    ADD esp, 30h
    CMP eax, 4
    JZ loc_827B530
loc_827B3D1:
    MOV edx, [esp+5Ch+var_20]
    CMP edx, esi
    JZ loc_827B3E1
loc_827B3D9:
    MOV ecx, [esp+5Ch+arg_8]
    SUB esi, edx
    SUB [ecx], esi
loc_827B3E1:
    TEST eax, eax
    JNZ loc_827B625
loc_827B3E9:
    MOV eax, [edi]
    MOV ebp, [edi+8]
    MOV [esp+5Ch+var_50], eax
loc_827B3F2:
    MOV eax, [esp+5Ch+arg_8]
    MOV edx, [eax]
loc_827B3F8:
    MOV ebx, [esp+5Ch+var_3C]
    MOV esi, [esp+5Ch+var_50]
    MOV eax, [esp+5Ch+arg_C]
    SUB ebx, esi
    SUB eax, edx
    CMP ebx, eax
    CMOVLE eax, ebx
    LEA ebx, [eax+3]
    TEST eax, eax
    CMOVNS ebx, eax
    SAR ebx, 2
    TEST ebx, ebx
    JZ loc_827B548
loc_827B420:
    XOR ecx, ecx
    AND ebp, 2
    JMP loc_827B43F
loc_827B430:
    ADD ecx, 1
    MOV [esi], eax
    ADD edx, 4
    ADD esi, 4
    CMP ebx, ecx
    JZ loc_827B468
loc_827B43F:
    MOV eax, [edx]
    BSWAP eax
    TEST eax, eax
    JNS loc_827B430
loc_827B447:
    MOV eax, [esp+5Ch+var_48]
    TEST eax, eax
    JZ loc_827B53A
loc_827B453:
    TEST ebp, ebp
    JZ loc_827B490
loc_827B457:
    ADD ecx, 1
    ADD dword ptr [eax], 1
    ADD edx, 4
    CMP ebx, ecx
    JNZ loc_827B43F
loc_827B464:
    LEA esi, [esi+0]
loc_827B468:
    CMP [esp+5Ch+arg_C], edx
    MOV eax, [esp+5Ch+arg_8]
    MOV [eax], edx
    JZ loc_827B56F
loc_827B478:
    LEA eax, [esi+4]
    CMP [esp+5Ch+var_3C], eax
    SBB ebx, ebx
    AND ebx, 0FFFFFFFEh
    ADD ebx, 7
    JMP loc_827B49B
loc_827B490:
    MOV eax, [esp+5Ch+arg_8]
    MOV ebx, 6
    MOV [eax], edx
loc_827B49B:
    MOV edx, [esp+5Ch+arg_10]
    TEST edx, edx
    JNZ loc_827B551
loc_827B4A7:
    ADD dword ptr [edi+0Ch], 1
    TEST byte ptr [edi+8], 1
    JNZ loc_827B55E
loc_827B4B5:
    CMP esi, [esp+5Ch+var_50]
    JA loc_827B390
loc_827B4BF:
    MOV eax, [esp+5Ch+arg_1C]
    TEST eax, eax
    JZ loc_827B520
loc_827B4C7:
    CMP ebx, 7
    JNZ loc_827B520
loc_827B4CC:
    MOV eax, [esp+5Ch+arg_8]
    MOV edx, [esp+5Ch+arg_C]
    MOV eax, [eax]
    SUB edx, eax
    CMP edx, 3
    JG loc_827B60C
loc_827B4E1:
    XOR edx, edx
    CMP [esp+5Ch+arg_C], eax
    JBE loc_827B514
loc_827B4E9:
    MOV [esp+5Ch+var_50], ebx
    MOV ecx, [esp+5Ch+arg_8]
    MOV ebx, [esp+5Ch+arg_C]
    LEA esi, [esi+0]
loc_827B4F8:
    LEA ebp, [eax+1]
    MOV esi, [edi+14h]
    MOV [ecx], ebp
    MOVZX eax, byte ptr [eax]
    MOV [esi+edx+4], al
    MOV eax, [ecx]
    ADD edx, 1
    CMP ebx, eax
    JA loc_827B4F8
loc_827B510:
    MOV ebx, [esp+5Ch+var_50]
loc_827B514:
    MOV ecx, [edi+14h]
    MOV eax, [ecx]
    AND eax, 0FFFFFFF8h
    OR edx, eax
    MOV [ecx], edx
loc_827B520:
    MOV eax, ebx
    JMP loc_827B26A
loc_827B530:
    CMP ebx, 5
    JNZ loc_827B4BF
loc_827B535:
    JMP loc_827B3E9
loc_827B53A:
    MOV esi, [esp+5Ch+var_50]
    MOV ebx, 6
    JMP loc_827B49B
loc_827B548:
    MOV esi, [esp+5Ch+var_50]
    JMP loc_827B468
loc_827B551:
    MOV eax, [esp+5Ch+arg_10]
    MOV [eax], esi
    MOV eax, ebx
    JMP loc_827B26A
loc_827B55E:
    MOV ecx, [esp+5Ch+arg_14]
    MOV [edi], esi
    MOV eax, [esp+5Ch+var_24]
    ADD [ecx], eax
    JMP loc_827B4BF
loc_827B56F:
    MOV ebx, 4
    JMP loc_827B49B
loc_827B579:
    MOV eax, [edi]
    MOV [esp+5Ch+var_50], eax
    JMP loc_827B2C6
loc_827B584:
    MOV eax, [esp+5Ch+var_38]
loc_827B588:
    CMP byte ptr [ebx+4], 80h
    JBE loc_827B5B5
loc_827B58E:
    AND ebp, 2
    JNZ loc_827B5E4
loc_827B593:
    MOV edi, [esp+5Ch+var_38]
    SUB edi, eax
    MOV eax, [esp+5Ch+arg_8]
    ADD edx, edi
    MOV [eax], edx
    MOV eax, 6
    JMP loc_827B26A
loc_827B5AB:
    MOV ebp, [esp+5Ch+var_34]
    MOV esi, [esp+5Ch+var_30]
    JMP loc_827B588
loc_827B5B5:
    MOVZX eax, byte ptr [ebx+7]
    MOV ecx, [esp+5Ch+var_50]
    ADD ecx, 4
    MOV [ecx-4], al
    MOVZX eax, byte ptr [ebx+6]
    MOV [ecx-3], al
    MOVZX eax, byte ptr [ebx+5]
    MOV [ecx-2], al
    MOVZX eax, byte ptr [ebx+4]
    MOV [ecx-1], al
    MOV eax, [esp+5Ch+arg_8]
    MOV esi, [ebx]
    MOV [esp+5Ch+var_50], ecx
    MOV edx, [eax]
loc_827B5E4:
    MOV eax, esi
    MOV ebp, [edi+8]
    AND eax, 0FFFFFFF8h
    MOV [ebx], eax
    JMP loc_827B3F8
loc_827B5F3:
    PUSH offset aGconvTransform_0
    PUSH 19Fh
    PUSH offset aIconvSkeletonC
    PUSH offset aOutbufstartNul
    CALL sub_822FAF0
loc_827B60C:
    PUSH offset aGconvTransform_0
    PUSH 309h
    PUSH offset aIconvSkeletonC
    PUSH offset aInendInptrp4
    CALL sub_822FAF0
loc_827B625:
    MOV ebx, eax
    JMP loc_827B4BF
loc_827B62C:
    PUSH offset aGconvTransform_0
    PUSH 22Fh
    PUSH offset aIconvSkeletonC
    PUSH offset aOutbufstartNul
    CALL sub_822FAF0

=====

3, gcc32

######
str_copy:
loc_81D0570:
    SUB esp, 10h
    PUSH 1Ch
    PUSH offset aCryptoX509X509_6
    PUSH [esp+18h+arg_0]
    CALL sub_817EBE0
    ADD esp, 1Ch
    RETN 

=====

3, gcc32

######
ASN1_item_i2d_bio:
loc_80E4CC0:
    PUSH edi
    PUSH esi
    PUSH ebx
    SUB esp, 14h
    MOV eax, large gs:14h
    MOV [esp+20h+var_10], eax
    XOR eax, eax
    MOV ebx, [esp+20h+arg_4]
    MOV [esp+20h+var_14], 0
    PUSH [esp+20h+arg_0]
    LEA eax, [esp+24h+var_14]
    PUSH eax
    PUSH [esp+28h+arg_8]
    CALL sub_80F7DD0
    MOV esi, eax
    MOV eax, [esp+2Ch+var_14]
    ADD esp, 10h
    TEST eax, eax
    JZ loc_80E4D64
loc_80E4CFD:
    XOR edi, edi
    JMP loc_80E4D14
loc_80E4D08:
    TEST eax, eax
    JLE loc_80E4D60
loc_80E4D0C:
    ADD edi, eax
    SUB esi, eax
    MOV eax, [esp+1Ch+var_14]
loc_80E4D14:
    SUB esp, 4
    ADD eax, edi
    PUSH esi
    PUSH eax
    PUSH ebx
    CALL sub_81050C0
    ADD esp, 10h
    CMP esi, eax
    JNZ loc_80E4D08
loc_80E4D28:
    MOV ebx, 1
loc_80E4D2D:
    SUB esp, 4
    PUSH 6Ah
    PUSH offset aCryptoAsn1AI2d
    PUSH [esp+28h+var_14]
    CALL sub_8173670
    ADD esp, 10h
    MOV eax, ebx
loc_80E4D45:
    MOV edx, [esp+1Ch+var_10]
    XOR edx, large gs:14h
    JNZ loc_80E4D83
loc_80E4D52:
    ADD esp, 10h
    POP ebx
    POP esi
    POP edi
    RETN 
loc_80E4D60:
    XOR ebx, ebx
    JMP loc_80E4D2D
loc_80E4D64:
    SUB esp, 0Ch
    PUSH 5Bh
    PUSH offset aCryptoAsn1AI2d
    PUSH 41h
    PUSH 0C0h
    PUSH 0Dh
    CALL sub_814D420
    ADD esp, 20h
    XOR eax, eax
    JMP loc_80E4D45
loc_80E4D83:
    CALL sub_826EEC0

=====

0, gcc

######
_IO_new_file_close_it:
loc_649980:
    MOV eax, [rdi+70h]
    CMP eax, 0FFFFFFFFh
    JZ locret_649A8A
loc_64998C:
    PUSH r12
    PUSH rbp
    XOR r12d, r12d
    PUSH rbx
    MOV eax, [rdi]
    MOV rbx, rdi
    AND eax, 808h
    CMP eax, 800h
    JZ loc_649AB0
loc_6499A8:
    MOV rdi, rbx
    XOR ebp, ebp
    CALL sub_64CA40
    TEST byte ptr [rbx+74h], 20h
    JZ loc_649A90
loc_6499BC:
    MOV eax, [rbx+0C0h]
    TEST eax, eax
    JLE loc_649A20
loc_6499C6:
    MOV rax, [rbx+0A0h]
    CMP qword ptr [rax+40h], 0
    JZ loc_6499DC
loc_6499D4:
    MOV rdi, rbx
    CALL sub_645370
loc_6499DC:
    XOR ecx, ecx
    XOR edx, edx
    XOR esi, esi
    MOV rdi, rbx
    CALL sub_6443E0
    MOV rax, [rbx+0A0h]
    MOV qword ptr [rax+10h], 0
    MOV qword ptr [rax], 0
    MOV qword ptr [rax+8], 0
    MOV qword ptr [rax+20h], 0
    MOV qword ptr [rax+18h], 0
    MOV qword ptr [rax+28h], 0
loc_649A20:
    XOR ecx, ecx
    XOR edx, edx
    XOR esi, esi
    MOV rdi, rbx
    CALL sub_64B440
    MOV qword ptr [rbx+18h], 0
    MOV qword ptr [rbx+8], 0
    MOV rdi, rbx
    MOV qword ptr [rbx+10h], 0
    MOV qword ptr [rbx+28h], 0
    MOV qword ptr [rbx+20h], 0
    MOV qword ptr [rbx+30h], 0
    CALL sub_64AAF0
    TEST ebp, ebp
    MOV eax, r12d
    MOV dword ptr [rbx], 0FBAD240Ch
    MOV dword ptr [rbx+70h], 0FFFFFFFFh
    MOV qword ptr [rbx+90h], 0FFFFFFFFFFFFFFFFh
    CMOVNZ eax, ebp
    POP rbx
    POP rbp
    POP r12
loc_649A8A:
    REP 
loc_649A90:
    MOV rax, [rbx+0D8h]
    MOV rdi, rbx
    CALL qword ptr [rax+88h]
    MOV ebp, eax
    JMP loc_6499BC
loc_649AB0:
    MOV edx, [rdi+0C0h]
    TEST edx, edx
    JLE loc_649AE0
loc_649ABA:
    MOV rax, [rdi+0A0h]
    MOV rsi, [rax+18h]
    MOV rdx, [rax+20h]
    SUB rdx, rsi
    SAR rdx, 2
    CALL sub_6466E0
    MOV r12d, eax
    JMP loc_6499A8
loc_649AE0:
    MOV rsi, [rdi+20h]
    MOV rdx, [rdi+28h]
    SUB rdx, rsi
    CALL sub_649870
    MOV r12d, eax
    JMP loc_6499A8

=====

0, gcc

######
sk_DIST_POINT_num_2:
loc_5CA3BB:
    PUSH rbp
    MOV rbp, rsp
    SUB rsp, 10h
    MOV [rbp+var_8], rdi
    MOV rax, [rbp+var_8]
    MOV rdi, rax
    CALL sub_59356B
    LEAVE 
    RETN 

=====

0, gcc

######
RSA_clear_flags:
loc_57C4FE:
    PUSH rbp
    MOV rbp, rsp
    MOV [rbp+var_8], rdi
    MOV [rbp+var_C], esi
    MOV rax, [rbp+var_8]
    MOV eax, [rax+6Ch]
    MOV edx, [rbp+var_C]
    NOT edx
    AND edx, eax
    MOV rax, [rbp+var_8]
    MOV [rax+6Ch], edx
    NOP 
    POP rbp
    RETN 

=====

0, gcc

######
constant_time_eq_int_8:
loc_4A4F93:
    PUSH rbp
    MOV rbp, rsp
    SUB rsp, 8
    MOV [rbp+var_4], edi
    MOV [rbp+var_8], esi
    MOV edx, [rbp+var_8]
    MOV eax, [rbp+var_4]
    MOV esi, edx
    MOV edi, eax
    CALL sub_4A4F74
    LEAVE 
    RETN 

=====

0, gcc

######
sk_OPENSSL_PSTRING_num_2:
loc_59CE18:
    PUSH rbp
    MOV rbp, rsp
    SUB rsp, 10h
    MOV [rbp+var_8], rdi
    MOV rax, [rbp+var_8]
    MOV rdi, rax
    CALL sub_59356B
    LEAVE 
    RETN 

=====

0, gcc

######
dynamic_data_ctx_free_func:
loc_605A3F:
    PUSH rbp
    MOV rbp, rsp
    SUB rsp, 40h
    MOV [rbp+var_18], rdi
    MOV [rbp+var_20], rsi
    MOV [rbp+var_28], rdx
    MOV [rbp+var_2C], ecx
    MOV [rbp+var_38], r8
    MOV [rbp+var_40], r9
    CMP [rbp+var_20], 0
    JZ loc_605ADB
loc_605A65:
    MOV rax, [rbp+var_20]
    MOV [rbp+var_8], rax
    MOV rax, [rbp+var_8]
    MOV rax, [rax]
    MOV rdi, rax
    CALL sub_51055E
    MOV rax, [rbp+var_8]
    MOV rax, [rax+18h]
    MOV edx, 8Dh
    MOV esi, offset aCryptoEngineEn_5
    MOV rdi, rax
    CALL sub_54A9E7
    MOV rax, [rbp+var_8]
    MOV rax, [rax+28h]
    MOV edx, 8Eh
    MOV esi, offset aCryptoEngineEn_5
    MOV rdi, rax
    CALL sub_54A9E7
    MOV rax, [rbp+var_8]
    MOV rax, [rax+50h]
    MOV esi, offset sub_605A1A
    MOV rdi, rax
    CALL sub_6059F4
    MOV rax, [rbp+var_8]
    MOV edx, 90h
    MOV esi, offset aCryptoEngineEn_5
    MOV rdi, rax
    CALL sub_54A9E7
loc_605ADB:
    NOP 
    LEAVE 
    RETN 

=====

0, gcc

######
ECPARAMETERS_free:
loc_51335D:
    PUSH rbp
    MOV rbp, rsp
    SUB rsp, 10h
    MOV [rbp+var_8], rdi
    MOV rax, [rbp+var_8]
    MOV esi, offset unk_72AC60
    MOV rdi, rax
    CALL sub_4CBCE5
    NOP 
    LEAVE 
    RETN 

=====

0, gcc

######
RSA_PKCS1_OpenSSL:
loc_57C605:
    PUSH rbp
    MOV rbp, rsp
    MOV eax, offset off_9FCAA0
    POP rbp
    RETN 

=====

0, gcc

######
stpcpy:
loc_65DD30:
    LEA rax, sub_6804F0
    TEST cs:dword_A07F80, 10h
    JNZ locret_65DD5D
loc_65DD43:
    LEA rax, sub_65DD60
    TEST cs:dword_A07F50, 200h
    JZ locret_65DD5D
loc_65DD56:
    LEA rax, sub_67D6D0
loc_65DD5D:
    RETN 

=====

0, gcc

######
cmd_MinProtocol:
loc_476450:
    PUSH rbp
    MOV rbp, rsp
    SUB rsp, 10h
    MOV [rbp+var_8], rdi
    MOV [rbp+var_10], rsi
    MOV rax, [rbp+var_8]
    MOV rdx, [rax+80h]
    MOV rcx, [rbp+var_10]
    MOV rax, [rbp+var_8]
    MOV rsi, rcx
    MOV rdi, rax
    CALL sub_4763BF
    LEAVE 
    RETN 

=====

1, gcc

######
AES_set_encrypt_key:
loc_488CE3:
    PUSH rbx
    TEST rdi, rdi
    JZ loc_4890C3
loc_488CED:
    TEST rdx, rdx
    JZ loc_4890C3
loc_488CF6:
    MOV eax, esi
    AND eax, 0FFFFFFBFh
    CMP eax, 80h
    JZ loc_488D13
loc_488D02:
    MOV eax, 0FFFFFFFEh
    CMP esi, 100h
    JNZ loc_4890DD
loc_488D13:
    MOV rcx, rdx
    CMP esi, 80h
    JNZ loc_488D2A
loc_488D1E:
    MOV dword ptr [rdx+0F0h], 0Ah
    JMP loc_488D40
loc_488D2A:
    CMP esi, 0C0h
    SETNZ al
    MOVZX eax, al
    LEA eax, [rax+rax+0Ch]
    MOV [rdx+0F0h], eax
loc_488D40:
    MOVZX eax, byte ptr [rdi]
    SHL eax, 18h
    MOV r8d, eax
    MOVZX eax, byte ptr [rdi+1]
    SHL eax, 10h
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+3]
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+2]
    SHL r8d, 8
    XOR eax, r8d
    MOV [rdx], eax
    MOVZX eax, byte ptr [rdi+4]
    SHL eax, 18h
    MOV r8d, eax
    MOVZX eax, byte ptr [rdi+5]
    SHL eax, 10h
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+7]
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+6]
    SHL r8d, 8
    XOR eax, r8d
    MOV [rdx+4], eax
    MOVZX eax, byte ptr [rdi+8]
    SHL eax, 18h
    MOV r8d, eax
    MOVZX eax, byte ptr [rdi+9]
    SHL eax, 10h
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+0Bh]
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+0Ah]
    SHL r8d, 8
    XOR eax, r8d
    MOV [rdx+8], eax
    MOVZX eax, byte ptr [rdi+0Ch]
    SHL eax, 18h
    MOV r8d, eax
    MOVZX eax, byte ptr [rdi+0Dh]
    SHL eax, 10h
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+0Fh]
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+0Eh]
    SHL r8d, 8
    XOR eax, r8d
    MOV [rdx+0Ch], eax
    CMP esi, 80h
    JNZ loc_488E7B
loc_488DF6:
    MOV esi, 0
loc_488DFB:
    MOV ebx, [rcx+0Ch]
    MOVZX eax, bl
    MOV eax, ds:dword_663500[rax*4]
    AND eax, 0FF00h
    MOV edx, eax
    MOV eax, [rcx]
    XOR eax, ds:dword_6617C0[rsi]
    XOR eax, edx
    MOV edx, ebx
    SHR edx, 18h
    MOV edx, edx
    MOVZX edx, byte ptr ds:dword_663100[rdx*4]
    XOR eax, edx
    MOV edx, ebx
    SHR edx, 10h
    MOVZX edx, dl
    MOV edx, ds:dword_662D00[rdx*4]
    AND edx, 0FF000000h
    XOR eax, edx
    MOVZX edx, bh
    MOV edx, ds:dword_662900[rdx*4]
    AND edx, 0FF0000h
    XOR eax, edx
    MOV [rcx+10h], eax
    XOR eax, [rcx+4]
    MOV [rcx+14h], eax
    XOR eax, [rcx+8]
    MOV [rcx+18h], eax
    XOR eax, ebx
    MOV [rcx+1Ch], eax
    ADD rsi, 4
    CMP rsi, 28h
    JZ loc_4890CA
loc_488E75:
    ADD rcx, 10h
    JMP loc_488DFB
loc_488E7B:
    MOVZX eax, byte ptr [rdi+10h]
    SHL eax, 18h
    MOV r8d, eax
    MOVZX eax, byte ptr [rdi+11h]
    SHL eax, 10h
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+13h]
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+12h]
    SHL r8d, 8
    XOR eax, r8d
    MOV [rdx+10h], eax
    MOVZX eax, byte ptr [rdi+14h]
    SHL eax, 18h
    MOV r8d, eax
    MOVZX eax, byte ptr [rdi+15h]
    SHL eax, 10h
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+17h]
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+16h]
    SHL r8d, 8
    XOR eax, r8d
    MOV [rdx+14h], eax
    CMP esi, 0C0h
    JNZ loc_488F73
loc_488EDD:
    MOV edi, offset dword_6617C0
    ADD rdx, 0A8h
loc_488EE9:
    MOV ebx, [rcx+14h]
    MOVZX eax, bl
    MOV esi, ds:dword_663500[rax*4]
    AND esi, 0FF00h
    MOV eax, [rcx]
    XOR eax, [rdi]
    XOR esi, eax
    MOV eax, ebx
    SHR eax, 18h
    MOV eax, eax
    MOVZX eax, byte ptr ds:dword_663100[rax*4]
    XOR eax, esi
    MOV esi, ebx
    SHR esi, 10h
    MOVZX esi, sil
    MOV esi, ds:dword_662D00[rsi*4]
    AND esi, 0FF000000h
    XOR eax, esi
    MOVZX esi, bh
    MOV esi, ds:dword_662900[rsi*4]
    AND esi, 0FF0000h
    XOR eax, esi
    MOV [rcx+18h], eax
    XOR eax, [rcx+4]
    MOV [rcx+1Ch], eax
    XOR eax, [rcx+8]
    MOV [rcx+20h], eax
    XOR eax, [rcx+0Ch]
    MOV [rcx+24h], eax
    ADD rdi, 4
    CMP rcx, rdx
    JZ loc_4890D1
loc_488F5F:
    XOR eax, [rcx+10h]
    MOV [rcx+28h], eax
    XOR eax, ebx
    MOV [rcx+2Ch], eax
    ADD rcx, 18h
    JMP loc_488EE9
loc_488F73:
    MOVZX eax, byte ptr [rdi+18h]
    SHL eax, 18h
    MOV r8d, eax
    MOVZX eax, byte ptr [rdi+19h]
    SHL eax, 10h
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+1Bh]
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+1Ah]
    SHL r8d, 8
    XOR eax, r8d
    MOV [rdx+18h], eax
    MOVZX eax, byte ptr [rdi+1Ch]
    SHL eax, 18h
    MOV r8d, eax
    MOVZX eax, byte ptr [rdi+1Dh]
    SHL eax, 10h
    XOR eax, r8d
    MOVZX r8d, byte ptr [rdi+1Fh]
    XOR eax, r8d
    MOVZX edi, byte ptr [rdi+1Eh]
    SHL edi, 8
    XOR eax, edi
    MOV [rdx+1Ch], eax
    MOV eax, 0
    CMP esi, 100h
    JNZ loc_4890DD
loc_488FD7:
    MOV esi, 0
loc_488FDC:
    MOV ebx, [rcx+1Ch]
    MOV eax, [rcx]
    XOR eax, ds:dword_6617C0[rsi]
    MOV edx, eax
    MOVZX eax, bl
    MOV eax, ds:dword_663500[rax*4]
    AND eax, 0FF00h
    XOR eax, edx
    MOV edx, ebx
    SHR edx, 18h
    MOV edx, edx
    MOVZX edx, byte ptr ds:dword_663100[rdx*4]
    XOR eax, edx
    MOV edx, ebx
    SHR edx, 10h
    MOVZX edx, dl
    MOV edx, ds:dword_662D00[rdx*4]
    AND edx, 0FF000000h
    XOR eax, edx
    MOVZX edx, bh
    MOV edx, ds:dword_662900[rdx*4]
    AND edx, 0FF0000h
    XOR eax, edx
    MOV [rcx+20h], eax
    XOR eax, [rcx+4]
    MOV [rcx+24h], eax
    XOR eax, [rcx+8]
    MOV [rcx+28h], eax
    XOR eax, [rcx+0Ch]
    MOV [rcx+2Ch], eax
    ADD rsi, 4
    CMP rsi, 1Ch
    JZ loc_4890D8
loc_489057:
    MOV edx, eax
    SHR edx, 18h
    MOV edx, edx
    MOV edi, ds:dword_662D00[rdx*4]
    AND edi, 0FF000000h
    MOVZX edx, al
    MOVZX edx, byte ptr ds:dword_663100[rdx*4]
    XOR edi, edx
    XOR edi, [rcx+10h]
    MOV edx, eax
    SHR edx, 10h
    MOVZX edx, dl
    MOV edx, ds:dword_662900[rdx*4]
    AND edx, 0FF0000h
    XOR edi, edx
    MOVZX edx, ah
    MOV edx, ds:dword_663500[rdx*4]
    AND edx, 0FF00h
    MOV eax, edi
    XOR eax, edx
    MOV [rcx+30h], eax
    XOR eax, [rcx+14h]
    MOV [rcx+34h], eax
    XOR eax, [rcx+18h]
    MOV [rcx+38h], eax
    XOR eax, ebx
    MOV [rcx+3Ch], eax
    ADD rcx, 20h
    JMP loc_488FDC
loc_4890C3:
    MOV eax, 0FFFFFFFFh
    JMP loc_4890DD
loc_4890CA:
    MOV eax, 0
    JMP loc_4890DD
loc_4890D1:
    MOV eax, 0
    JMP loc_4890DD
loc_4890D8:
    MOV eax, 0
loc_4890DD:
    POP rbx
    RETN 

=====

1, gcc

######
SSL_dup:
loc_462341:
    PUSH r14
    PUSH r13
    PUSH r12
    PUSH rbp
    PUSH rbx
    MOV rbx, rdi
    CALL sub_46E717
    TEST eax, eax
    JZ loc_462361
loc_462355:
    MOV rdi, rbx
    CALL sub_46E732
    TEST eax, eax
    JNZ loc_462371
loc_462361:
    LOCK dword ptr [rbx+510h], 1
    MOV rax, rbx
    JMP loc_462781
loc_462371:
    MOV rdi, [rbx+4E8h]
    CALL sub_461DD3
    MOV rbp, rax
    TEST rax, rax
    JZ loc_4626E5
loc_462389:
    CMP qword ptr [rbx+480h], 0
    JZ loc_4623A7
loc_462393:
    MOV rsi, rbx
    MOV rdi, rax
    CALL sub_45E365
    TEST eax, eax
    JNZ loc_46240A
loc_4623A2:
    JMP loc_4626D3
loc_4623A7:
    MOV rsi, [rbx+8]
    MOV rdi, rax
    CALL sub_46046F
    TEST eax, eax
    JZ loc_4626D3
loc_4623BB:
    CMP qword ptr [rbx+400h], 0
    JZ loc_4623ED
loc_4623C5:
    MOV rdi, [rbp+400h]
    CALL sub_457BE0
    MOV rdi, [rbx+400h]
    CALL sub_457CCA
    MOV [rbp+400h], rax
    TEST rax, rax
    JZ loc_4626D3
loc_4623ED:
    LEA rsi, [rbx+460h]
    MOV edx, [rbx+458h]
    MOV rdi, rbp
    CALL sub_45D70F
    TEST eax, eax
    JZ loc_4626D3
loc_46240A:
    CMP rbx, 0FFFFFFFFFFFFFF30h
    JZ loc_4626EF
loc_462417:
    MOV rdi, [rbx+0D8h]
    CALL sub_5201E2
    TEST eax, eax
    JLE loc_4626EF
loc_46242B:
    MOV rdi, [rbx+0D8h]
    CALL sub_5201E2
    MOV r13d, eax
    LEA r14, [rbp+0D0h]
    MOV rdi, r14
    CALL sub_45D055
    MOV rax, [rbx+108h]
    MOV [rbp+108h], rax
    MOV rax, [rbp+4E8h]
    ADD rax, 360h
    MOV [rbp+0D0h], rax
    CALL sub_51FC7F
    MOV [rbp+0D8h], rax
    TEST rax, rax
    JNZ loc_4624A0
loc_46247C:
    MOV r8d, 0AAh
    MOV ecx, offset aSslSslLibC
    MOV edx, 41h
    MOV esi, 193h
    MOV edi, 14h
    CALL sub_4D8147
    JMP loc_4626D3
loc_4624A0:
    MOV esi, r13d
    MOV rdi, rax
    CALL sub_51FCB0
    TEST eax, eax
    JZ loc_4626D3
loc_4624B3:
    TEST r13d, r13d
    JLE loc_4626EF
loc_4624BC:
    MOV r12d, 0
loc_4624C2:
    MOV rdi, [rbx+0D8h]
    MOV esi, r12d
    CALL sub_5201F0
    MOVZX ecx, byte ptr [rax+2]
    MOVZX edx, byte ptr [rax+1]
    MOVZX esi, byte ptr [rax]
    MOV r9, [rax+10h]
    MOV r8, [rax+8]
    MOV rdi, r14
    CALL sub_45CB3A
    TEST eax, eax
    JLE loc_4626D3
loc_4624F4:
    ADD r12d, 1
    CMP r13d, r12d
    JNZ loc_4624C2
loc_4624FD:
    JMP loc_4626EF
loc_462502:
    MOV [rbp+4B0h], rax
loc_462509:
    MOV rdi, rbx
    CALL sub_45E247
    MOV esi, eax
    MOV rdi, rbp
    CALL sub_45E29C
    MOV rax, [rbx+4A0h]
    MOV [rbp+4A0h], rax
    MOV rax, [rbx+4B8h]
    MOV [rbp+4B8h], rax
    LEA rdx, [rbx+500h]
    LEA rsi, [rbp+500h]
    MOV edi, 0
    CALL sub_4E8BFF
    TEST eax, eax
    JZ loc_4626D3
loc_462557:
    MOV rdi, [rbx+10h]
    TEST rdi, rdi
    JZ loc_46257C
loc_462560:
    LEA rcx, [rbp+10h]
    MOV edx, 0
    MOV esi, 0Ch
    CALL sub_4A06F0
    TEST rax, rax
    JZ loc_4626D3
loc_46257C:
    MOV rdi, [rbx+18h]
    TEST rdi, rdi
    JZ loc_4625B9
loc_462585:
    CMP rdi, [rbx+10h]
    JZ loc_4625A8
loc_46258B:
    LEA rcx, [rbp+18h]
    MOV edx, 0
    MOV esi, 0Ch
    CALL sub_4A06F0
    TEST rax, rax
    JNZ loc_4625B9
loc_4625A3:
    JMP loc_4626D3
loc_4625A8:
    MOV rdi, [rbp+10h]
    CALL sub_4A02AA
    MOV rax, [rbp+10h]
    MOV [rbp+18h], rax
loc_4625B9:
    MOV eax, [rbx+38h]
    MOV [rbp+38h], eax
    CMP qword ptr [rbx+30h], 0
    JZ loc_4625DE
loc_4625C6:
    CMP dword ptr [rbx+38h], 0
    JZ loc_4625D6
loc_4625CC:
    MOV rdi, rbp
    CALL sub_4615F9
    JMP loc_4625DE
loc_4625D6:
    MOV rdi, rbp
    CALL sub_461767
loc_4625DE:
    MOV eax, [rbx+44h]
    MOV [rbp+44h], eax
    MOV eax, [rbx+0C0h]
    MOV [rbp+0C0h], eax
    MOV rax, [rbx+16D8h]
    MOV [rbp+16D8h], rax
    MOV rax, [rbx+16E0h]
    MOV [rbp+16E0h], rax
    MOV rsi, [rbx+0C8h]
    MOV rdi, [rbp+0C8h]
    CALL sub_533CBC
    MOV rdi, [rbx+110h]
    TEST rdi, rdi
    JZ loc_462640
loc_46262B:
    CALL sub_51FFA9
    MOV [rbp+110h], rax
    TEST rax, rax
    JZ loc_4626D3
loc_462640:
    MOV rdi, [rbx+118h]
    TEST rdi, rdi
    JZ loc_46265D
loc_46264C:
    CALL sub_51FFA9
    MOV [rbp+118h], rax
    TEST rax, rax
    JZ loc_4626D3
loc_46265D:
    MOV rdi, [rbx+508h]
    MOV rax, rbp
    TEST rdi, rdi
    JZ loc_462781
loc_462670:
    CALL sub_51FFA9
    MOV r12, rax
    TEST rax, rax
    JZ loc_4626D3
loc_46267D:
    MOV [rbp+508h], rax
    MOV ebx, 0
    JMP loc_4626BF
loc_46268B:
    MOV esi, ebx
    MOV rdi, r12
    CALL sub_5201F0
    MOV r13, rax
    MOV rdi, rax
    CALL sub_536DF2
    MOV rdx, rax
    MOV esi, ebx
    MOV rdi, r12
    CALL sub_52021A
    TEST rax, rax
    JNZ loc_4626BC
loc_4626B2:
    MOV rdi, r13
    CALL sub_536BF5
    JMP loc_4626D3
loc_4626BC:
    ADD ebx, 1
loc_4626BF:
    MOV rdi, r12
    CALL sub_5201E2
    CMP eax, ebx
    JG loc_46268B
loc_4626CB:
    MOV rax, rbp
    JMP loc_462781
loc_4626D3:
    MOV rdi, rbp
    CALL sub_461387
    MOV eax, 0
    JMP loc_462781
loc_4626E5:
    MOV eax, 0
    JMP loc_462781
loc_4626EF:
    MOV eax, [rbx]
    MOV [rbp+0], eax
    MOV eax, [rbx+514h]
    MOV [rbp+514h], eax
    MOV eax, [rbx+518h]
    MOV [rbp+518h], eax
    MOV ecx, 0
    MOV edx, 0
    MOV esi, 32h
    MOV rdi, rbx
    CALL sub_45EC70
    MOV ecx, 0
    MOV rdx, rax
    MOV esi, 33h
    MOV rdi, rbp
    CALL sub_45EC70
    MOV eax, [rbx+728h]
    MOV [rbp+728h], eax
    MOV rax, [rbx+0B0h]
    MOV [rbp+0B0h], rax
    MOV rax, [rbx+0B8h]
    MOV [rbp+0B8h], rax
    MOV rax, [rbx+4B0h]
    MOV edx, [rbx+4A8h]
    MOV [rbp+4A8h], edx
    TEST rax, rax
    JNZ loc_462502
loc_46277C:
    JMP loc_462509
loc_462781:
    POP rbx
    POP rbp
    POP r12
    POP r13
    POP r14
    RETN 

=====

1, gcc

######
__run_exit_handlers:
loc_583160:
    PUSH r13
    PUSH r12
    MOV eax, 0
    PUSH rbp
    PUSH rbx
    MOV rbp, rsi
    MOV ebx, edi
    MOV r12d, edx
    SUB rsp, 8
    TEST rax, rax
    JZ loc_583181
loc_58317C:
    CALL near ptr 0
loc_583181:
    MOV r13, [rbp+0]
    TEST r13, r13
    JZ loc_5831E0
loc_58318A:
    NOP word ptr [rax+rax+00h]
loc_583190:
    MOV rax, [r13+8]
    MOV rdx, rax
    SHL rdx, 5
    TEST rax, rax
    LEA rcx, [r13+rdx-10h]
    JZ loc_5831CF
loc_5831A5:
    SUB rax, 1
    MOV [r13+8], rax
    MOV rdx, [rcx]
    CMP rdx, 3
    JZ loc_583260
loc_5831BA:
    CMP rdx, 4
    JZ loc_583238
loc_5831C0:
    CMP rdx, 2
    JZ loc_583210
loc_5831C6:
    SUB rcx, 20h
    TEST rax, rax
    JNZ loc_5831A5
loc_5831CF:
    MOV rax, [r13+0]
    TEST rax, rax
    MOV [rbp+0], rax
    JNZ loc_58327D
loc_5831E0:
    TEST r12b, r12b
    JZ loc_583205
loc_5831E5:
    MOV eax, offset off_6E0480
    CMP rax, offset unk_6E0488
    JNB loc_583205
loc_5831F2:
    MOV rbp, rax
loc_5831F5:
    CALL qword ptr [rbp+0]
    ADD rbp, 8
    CMP rbp, offset unk_6E0488
    JB loc_5831F5
loc_583205:
    MOV edi, ebx
    CALL sub_5CE100
loc_583210:
    SHL rax, 5
    MOV edi, ebx
    ADD rax, r13
    MOV rdx, [rax+18h]
    MOV rsi, [rax+20h]
    ROR rdx, 11h
    XOR rdx, fs:30h
    CALL rdx
    JMP loc_583190
loc_583238:
    SHL rax, 5
    MOV esi, ebx
    ADD rax, r13
    MOV rdx, [rax+18h]
    MOV rdi, [rax+20h]
    ROR rdx, 11h
    XOR rdx, fs:30h
    CALL rdx
    JMP loc_583190
loc_583260:
    SHL rax, 5
    MOV rax, [r13+rax+18h]
    ROR rax, 11h
    XOR rax, fs:30h
    CALL rax
    JMP loc_583190
loc_58327D:
    MOV rdi, r13
    CALL sub_59A820
    JMP loc_583181

=====

1, gcc

######
CMS_SignedData_init:
loc_4B2EAF:
    SUB rsp, 8
    CALL sub_4B2E14
    TEST rax, rax
    SETNZ al
    MOVZX eax, al
    ADD rsp, 8
    RETN 

=====

1, gcc

######
strndup:
loc_5AF3D0:

loc_60C1A0:
    PUSH rbp
    PUSH rbx
    MOV rbp, rdi
    SUB rsp, 8
    CALL sub_60C1F0
    LEA rdi, [rax+1]
    MOV rbx, rax
    CALL sub_59A480
    TEST rax, rax
    JZ loc_60C1E0
loc_60C1BF:
    MOV byte ptr [rax+rbx], 0
    ADD rsp, 8
    MOV rdx, rbx
    MOV rsi, rbp
    MOV rdi, rax
    POP rbx
    POP rbp
    JMP sub_5AF3D0
loc_60C1E0:
    ADD rsp, 8
    XOR eax, eax
    POP rbx
    POP rbp
    RETN 

=====

1, gcc

######
BIO_f_asn1:
loc_56D537:
    MOV eax, offset unk_6BA7C0
    RETN 

=====

1, gcc

######
PKCS12_SAFEBAG_get0_attr:
loc_503703:
    SUB rsp, 8
    MOV rdi, [rdi+10h]
    CALL sub_501208
    ADD rsp, 8
    RETN 

=====

1, gcc

######
__strtoull_internal:
loc_583540:
    MOV rax, 0FFFFFFFFFFFFFFB0h
    MOV r8, fs:[rax]
    JMP sub_583A30

=====

1, gcc

######
d2i_ESS_SIGNING_CERT_V2:
loc_521901:
    SUB rsp, 8
    MOV ecx, offset unk_699900
    CALL sub_495A20
    ADD rsp, 8
    RETN 

=====

1, gcc

######
tls_construct_cert_status:
loc_480835:
    PUSH rbp
    PUSH rbx
    SUB rsp, 8
    MOV rbp, rdi
    CALL sub_4807C1
    MOV ebx, 1
    TEST eax, eax
    JNZ loc_480862
loc_48084C:
    MOV ebx, eax
    MOV edx, 50h
    MOV esi, 2
    MOV rdi, rbp
    CALL sub_456CA5
    JMP $+2
loc_480862:
    MOV eax, ebx
    ADD rsp, 8
    POP rbx
    POP rbp
    RETN 

=====

2, gcc

######
ASN1_item_ex_free:
loc_496780:

loc_496A90:
    XOR edx, edx
    JMP sub_496780

=====

2, gcc

######
tls_construct_stoc_session_ticket:
loc_46CED0:
    PUSH rbp
    PUSH rbx
    MOV rbx, rdi
    SUB rsp, 8
    MOV eax, [rdi+5B8h]
    TEST eax, eax
    JNZ loc_46CF00
loc_46CEE3:
    MOV dword ptr [rbx+5B8h], 0
    MOV eax, 2
loc_46CEF2:
    ADD rsp, 8
    POP rbx
    POP rbp
    RETN 
loc_46CF00:
    MOV rbp, rsi
    CALL sub_482620
    TEST eax, eax
    JZ loc_46CEE3
loc_46CF0C:
    MOV edx, 2
    MOV esi, 23h
    MOV rdi, rbp
    CALL sub_4493F0
    TEST eax, eax
    JZ loc_46CF35
loc_46CF22:
    XOR esi, esi
    MOV edx, 2
    MOV rdi, rbp
    CALL sub_4493F0
    TEST eax, eax
    JNZ loc_46CF58
loc_46CF35:
    MOV r8d, 3B3h
    MOV ecx, offset aSslStatemExten_2
    MOV edx, 44h
    MOV esi, 1CCh
    MOV edi, 14h
    CALL sub_4DAA40
    XOR eax, eax
    JMP loc_46CEF2
loc_46CF58:
    MOV eax, 1
    JMP loc_46CEF2

=====

2, gcc

######
i2d_OCSP_RESPID:
loc_4FD030:
    MOV edx, offset unk_69DFC0
    JMP sub_496060

=====

2, gcc

######
EC_GROUP_get_seed_len:
loc_4CD760:
    MOV rax, [rdi+38h]
    RETN 

=====

2, gcc

######
EVP_camellia_128_ctr:
loc_4E0ED0:
    MOV eax, offset unk_6847E0
    RETN 

=====

2, gcc

######
drbg_status:
loc_50F7A0:
    PUSH rbx
    MOV esi, offset sub_50FD70
    MOV edi, offset unk_953DE4
    CALL sub_527EB0
    TEST eax, eax
    JZ loc_50F7BE
loc_50F7B4:
    MOV eax, cs:dword_953DE0
    TEST eax, eax
    JNZ loc_50F7C0
loc_50F7BE:
    POP rbx
    RETN 
loc_50F7C0:
    MOV rdi, cs:qword_954220
    XOR ebx, ebx
    CALL sub_527E60
    CMP cs:dword_954298, 1
    MOV rdi, cs:qword_954220
    SETZ bl
    CALL sub_527E70
    MOV eax, ebx
    POP rbx
    RETN 

=====

2, gcc

######
X509_OBJECT_retrieve_match:
loc_534B00:
    PUSH rbp
    PUSH rbx
    MOV rbp, rdi
    SUB rsp, 28h
    MOV rcx, fs:28h
    MOV [rsp+38h+var_20], rcx
    XOR ecx, ecx
    MOV [rsp+38h+var_30], rsi
    CALL sub_526750
    CMP eax, 0FFFFFFFFh
    JZ loc_534BF0
loc_534B2C:
    MOV ebx, eax
    MOV rax, [rsp+38h+var_30]
    MOV eax, [rax]
    SUB eax, 1
    CMP eax, 1
    JBE loc_534B66
loc_534B3D:
    JMP loc_534BE0
loc_534B48:
    CMP edx, 2
    JNZ loc_534BC0
loc_534B4D:
    MOV rsi, [rax+8]
    MOV rax, [rsp+38h+var_28]
    MOV rdi, [rax+8]
    CALL sub_5333F0
    TEST eax, eax
    JZ loc_534BC0
loc_534B63:
    ADD ebx, 1
loc_534B66:
    MOV rdi, rbp
    CALL sub_526B40
    CMP ebx, eax
    JGE loc_534BF0
loc_534B72:
    MOV esi, ebx
    MOV rdi, rbp
    CALL sub_526B50
    LEA rsi, [rsp+38h+var_30]
    LEA rdi, [rsp+38h+var_28]
    MOV [rsp+38h+var_28], rax
    CALL sub_533F20
    TEST eax, eax
    JNZ loc_534BF0
loc_534B94:
    MOV rax, [rsp+38h+var_30]
    MOV edx, [rax]
    CMP edx, 1
    JNZ loc_534B48
loc_534BA0:
    MOV rsi, [rax+8]
    MOV rax, [rsp+38h+var_28]
    MOV rdi, [rax+8]
    CALL sub_533450
    TEST eax, eax
    JNZ loc_534B63
loc_534BB6:
    NOP word ptr [rax+rax+00000000h]
loc_534BC0:
    MOV rax, [rsp+38h+var_28]
loc_534BC5:
    MOV rcx, [rsp+38h+var_20]
    XOR rcx, fs:28h
    JNZ loc_534BF4
loc_534BD5:
    ADD rsp, 28h
    POP rbx
    POP rbp
    RETN 
loc_534BE0:
    MOV esi, ebx
    MOV rdi, rbp
    CALL sub_526B50
    JMP loc_534BC5
loc_534BF0:
    XOR eax, eax
    JMP loc_534BC5
loc_534BF4:
    CALL sub_5E2570

=====

2, gcc

######
ossl_store_destroy_loaders_int:
loc_527DA0:
    SUB rsp, 8
    MOV rdi, cs:qword_954738
    CALL sub_4F2470
    MOV rdi, cs:qword_954748
    MOV cs:qword_954738, 0
    CALL sub_527E80
    MOV cs:qword_954748, 0
    ADD rsp, 8
    RETN 

=====

2, gcc

######
X509V3_NAME_from_section:
loc_5507D0:
    TEST rdi, rdi
    JZ loc_5508CF
loc_5507D9:
    PUSH r13
    PUSH r12
    MOV r12, rdi
    PUSH rbp
    PUSH rbx
    MOV rbp, rsi
    XOR ebx, ebx
    MOV rdi, rbp
    MOV r13, rdx
    SUB rsp, 8
    CALL sub_526B40
    CMP ebx, eax
    JGE loc_55088E
loc_5507FE:
    XCHG ax, ax
loc_550800:
    MOV esi, ebx
    MOV rdi, rbp
    CALL sub_526B50
    MOV rsi, [rax+8]
    XOR edx, edx
    MOVZX edi, byte ptr [rsi]
    TEST dil, dil
    JZ loc_550858
loc_550818:
    MOV edx, edi
    MOV r8, rsi
    AND edx, 0FFFFFFFDh
    CMP dl, 2Ch
    JZ loc_5508A0
loc_550825:
    CMP dil, 3Ah
    JNZ loc_55083F
loc_55082B:
    JMP loc_5508A0
loc_550830:
    MOV edx, ecx
    AND edx, 0FFFFFFFDh
    CMP dl, 2Ch
    JZ loc_5508A0
loc_55083A:
    CMP cl, 3Ah
    JZ loc_5508A0
loc_55083F:
    ADD r8, 1
    MOVZX ecx, byte ptr [r8]
    TEST cl, cl
    JNZ loc_550830
loc_55084B:
    XOR edx, edx
    CMP dil, 2Bh
    JZ loc_5508B7
loc_550853:
    NOP dword ptr [rax+rax+00h]
loc_550858:
    SUB rsp, 8
    MOV rcx, [rax+10h]
    MOV r9d, 0FFFFFFFFh
    PUSH rdx
    MOV r8d, r9d
    MOV edx, r13d
    MOV rdi, r12
    CALL sub_53CB80
    TEST eax, eax
    POP rdx
    POP rcx
    JZ loc_5508C2
loc_55087B:
    ADD ebx, 1
    MOV rdi, rbp
    CALL sub_526B40
    CMP ebx, eax
    JL loc_550800
loc_55088E:
    ADD rsp, 8
    MOV eax, 1
    POP rbx
    POP rbp
    POP r12
    POP r13
    RETN 
loc_5508A0:
    MOVZX edx, byte ptr [r8+1]
    TEST dl, dl
    JZ loc_55084B
loc_5508A9:
    MOV edi, edx
    XOR edx, edx
    LEA rsi, [r8+1]
    CMP dil, 2Bh
    JNZ loc_550858
loc_5508B7:
    ADD rsi, 1
    MOV edx, 0FFFFFFFFh
    JMP loc_550858
loc_5508C2:
    ADD rsp, 8
    XOR eax, eax
    POP rbx
    POP rbp
    POP r12
    POP r13
    RETN 
loc_5508CF:
    XOR eax, eax
    RETN 

=====

2, gcc

######
ASN1_TIME_set_string:
loc_489E70:

loc_48DD30:
    PUSH rbp
    PUSH rbx
    MOV rbp, rsi
    MOV rbx, rdi
    SUB rsp, 8
    CALL sub_48E6B0
    TEST eax, eax
    JZ loc_48DD58
loc_48DD45:
    ADD rsp, 8
    MOV eax, 1
    POP rbx
    POP rbp
    RETN 
loc_48DD58:
    ADD rsp, 8
    MOV rsi, rbp
    MOV rdi, rbx
    POP rbx
    POP rbp
    JMP sub_489E70

=====

3, gcc

######
bn_c2i:
loc_4B79F0:
    PUSH rbp
    PUSH rbx
    MOV rbx, rdi
    MOV rdi, rsi
    MOV esi, edx
    MOV rbp, r9
    SUB rsp, 18h
    MOV rdx, [rbx]
    TEST rdx, rdx
    JZ loc_4B7A28
loc_4B7A09:
    CALL sub_4CC120
    TEST rax, rax
    MOV edx, 1
    JZ loc_4B7A58
loc_4B7A18:
    ADD rsp, 18h
    MOV eax, edx
    POP rbx
    POP rbp
    RETN 
loc_4B7A28:
    MOV [rsp+28h+var_1C], esi
    MOV [rsp+28h+var_28], rdi
    CALL sub_4CBC30
    TEST rax, rax
    MOV [rbx], rax
    MOV rdx, rax
    MOV rdi, [rsp+28h+var_28]
    MOV esi, [rsp+28h+var_1C]
    JNZ loc_4B7A09
loc_4B7A48:
    XOR edx, edx
loc_4B7A4A:
    ADD rsp, 18h
    MOV eax, edx
    POP rbx
    POP rbp
    RETN 
loc_4B7A58:
    MOV rdi, [rbx]
    TEST rdi, rdi
    JZ loc_4B7A48
loc_4B7A60:
    TEST byte ptr [rbp+28h], 1
    JNZ loc_4B7A80
loc_4B7A66:
    CALL sub_4CBB90
loc_4B7A6B:
    MOV qword ptr [rbx], 0
    XOR edx, edx
    JMP loc_4B7A4A
loc_4B7A80:
    CALL sub_4CBB00
    JMP loc_4B7A6B

=====

3, gcc

######
tls_process_server_certificate:
loc_4816F0:
    PUSH r15
    PUSH r14
    PUSH r13
    PUSH r12
    PUSH rbp
    PUSH rbx
    MOV rbp, rsi
    MOV rbx, rdi
    SUB rsp, 48h
    MOV rax, fs:28h
    MOV [rsp+78h+var_40], rax
    XOR eax, eax
    CALL sub_577820
    TEST rax, rax
    MOV r12, rax
    JZ loc_481A30
loc_481725:
    MOV rax, [rbx+8]
    MOV rdx, [rax+0C0h]
    TEST byte ptr [rdx+60h], 8
    JNZ loc_481800
loc_48173A:
    MOV eax, [rax]
    CMP eax, 303h
    JLE loc_481800
loc_481747:
    CMP eax, 10000h
    JZ loc_481800
loc_481752:
    MOV rax, [rbp+8]
    TEST rax, rax
    JNZ loc_4817E0
loc_48175F:
    NOP 
loc_481760:
    MOV [rsp+78h+var_6C], 32h
    MOV r8d, 697h
    MOV ecx, offset aSslStatemState_0
    MOV edx, 9Fh
loc_481778:
    MOV esi, 16Fh
    MOV edi, 14h
    XOR r14d, r14d
    CALL sub_50BF00
    MOV edx, [rsp+78h+var_6C]
loc_48178E:
    MOV esi, 2
    MOV rdi, rbx
    CALL sub_45DC00
loc_48179B:
    MOV rdi, rbx
    XOR ebx, ebx
    CALL sub_47E1D0
loc_4817A5:
    MOV rdi, r14
    CALL sub_597D80
    MOV esi, offset sub_597D80
    MOV rdi, r12
    CALL sub_578110
    MOV rcx, [rsp+78h+var_40]
    XOR rcx, fs:28h
    MOV eax, ebx
    JNZ loc_481BD7
loc_4817D0:
    ADD rsp, 48h
    POP rbx
    POP rbp
    POP r12
    POP r13
    POP r14
    POP r15
    RETN 
loc_4817E0:
    MOV rdx, [rbp+0]
    SUB rax, 1
    MOVZX ecx, byte ptr [rdx]
    ADD rdx, 1
    MOV [rbp+8], rax
    MOV [rbp+0], rdx
    TEST cl, cl
    JNZ loc_481760
loc_4817FF:
    NOP 
loc_481800:
    MOV rax, [rbp+8]
    CMP rax, 2
    JBE loc_481760
loc_48180E:
    MOV rcx, [rbp+0]
    SUB rax, 3
    MOVZX edx, byte ptr [rcx]
    ADD rcx, 3
    MOV rsi, rdx
    MOVZX edx, byte ptr [rcx-2]
    SHL rsi, 10h
    SHL rdx, 8
    OR rdx, rsi
    MOVZX esi, byte ptr [rcx-1]
    MOV [rbp+0], rcx
    MOV [rbp+8], rax
    OR rdx, rsi
    TEST rax, rax
    JZ loc_481760
loc_481847:
    CMP rdx, rax
    JNZ loc_481760
loc_481850:
    XOR r13d, r13d
    CMP rax, 2
    JBE loc_481A13
loc_48185D:
    MOVZX edx, byte ptr [rcx]
    SUB rax, 3
    ADD rcx, 3
    MOV rsi, rdx
    MOVZX edx, byte ptr [rcx-2]
    SHL rsi, 10h
    SHL rdx, 8
    OR rdx, rsi
    MOVZX esi, byte ptr [rcx-1]
    MOV [rbp+0], rcx
    MOV [rbp+8], rax
    OR rdx, rsi
    CMP rdx, rax
    JA loc_481A13
loc_481892:
    LEA r15, [rcx+rdx]
    SUB rax, rdx
    LEA rsi, [rsp+78h+var_68]
    XOR edi, edi
    MOV [rbp+8], rax
    MOV [rsp+78h+var_68], rcx
    MOV [rbp+0], r15
    CALL sub_597D50
    TEST rax, rax
    MOV r14, rax
    JZ loc_481AFD
loc_4818BE:
    CMP [rsp+78h+var_68], r15
    JNZ loc_481ACD
loc_4818C9:
    MOV rax, [rbx+8]
    MOV rdx, [rax+0C0h]
    TEST byte ptr [rdx+60h], 8
    JNZ loc_4819F1
loc_4818DE:
    MOV eax, [rax]
    CMP eax, 10000h
    JZ loc_4819F1
loc_4818EB:
    CMP eax, 303h
    JLE loc_4819F1
loc_4818F6:
    MOV rax, [rbp+8]
    MOV [rsp+78h+var_60], 0
    CMP rax, 1
    JBE loc_481924
loc_481909:
    MOV rsi, [rbp+0]
    LEA rdx, [rax-2]
    MOVZX eax, word ptr [rsi]
    LEA rcx, [rsi+2]
    ROL ax, 8
    MOVZX eax, ax
    CMP rdx, rax
    JNB loc_481958
loc_481924:
    MOV r8d, 6B7h
    MOV ecx, offset aSslStatemState_0
    MOV edx, 10Fh
    MOV esi, 16Fh
    MOV edi, 14h
    MOV [rsp+78h+var_6C], 32h
    CALL sub_50BF00
loc_48194B:
    MOV edx, [rsp+78h+var_6C]
    JMP loc_48178E
loc_481958:
    MOV [rsp+78h+var_50], rax
    MOV [rsp+78h+var_58], rcx
    LEA rsi, [rcx+rax]
    SUB rsp, 8
    SUB rdx, rax
    XOR eax, eax
    TEST r13, r13
    MOV [rbp+0], rsi
    MOV [rbp+8], rdx
    SETZ al
    MOV edx, 1000h
    XOR r9d, r9d
    PUSH rax
    MOV rdi, rbx
    LEA r8, [rsp+88h+var_6C]
    LEA rcx, [rsp+88h+var_60]
    LEA rsi, [rsp+88h+var_58]
    CALL sub_477120
    TEST eax, eax
    POP rdx
    POP rcx
    JZ loc_481B51
loc_4819A7:
    SUB rsp, 8
    XOR eax, eax
    CMP qword ptr [rbp+8], 0
    MOV esi, 1000h
    MOV rdi, rbx
    MOV r8, r13
    MOV rcx, r14
    SETZ al
    PUSH rax
    MOV rdx, [rsp+88h+var_60]
    LEA r9, [rsp+88h+var_6C]
    CALL sub_477820
    TEST eax, eax
    POP rsi
    POP rdi
    JZ loc_481B51
loc_4819DD:
    MOV rdi, [rsp+78h+var_60]
    MOV edx, 6C3h
    MOV esi, offset aSslStatemState_0
    CALL sub_535410
loc_4819F1:
    MOV rsi, r14
    MOV rdi, r12
    CALL sub_577D90
    TEST eax, eax
    JZ loc_481B2D
loc_481A04:
    MOV rax, [rbp+8]
    TEST rax, rax
    JZ loc_481A6D
loc_481A0D:
    CMP rax, 2
    JA loc_481A60
loc_481A13:
    MOV [rsp+78h+var_6C], 32h
    MOV r8d, 69Fh
    MOV ecx, offset aSslStatemState_0
    MOV edx, 87h
    JMP loc_481778
loc_481A30:
    MOV r8d, 68Dh
    MOV ecx, offset aSslStatemState_0
    MOV edx, 41h
    MOV esi, 16Fh
    MOV edi, 14h
    XOR r14d, r14d
    CALL sub_50BF00
    JMP loc_48179B
loc_481A60:
    ADD r13, 1
    MOV rcx, [rbp+0]
    JMP loc_48185D
loc_481A6D:
    MOV rsi, r12
    MOV rdi, rbx
    CALL sub_45FA70
    MOV r8d, [rbx+4A8h]
    MOV ebp, eax
    TEST r8d, r8d
    JZ loc_481A8E
loc_481A86:
    TEST eax, eax
    JLE loc_481BDC
loc_481A8E:
    CALL sub_50C4A0
    CMP ebp, 1
    JLE loc_481B6A
loc_481A9C:
    MOV edx, ebp
    MOV r8d, 6E4h
    MOV ecx, offset aSslStatemState_0
    MOV esi, 16Fh
    MOV edi, 14h
    XOR r14d, r14d
    CALL sub_50BF00
    MOV [rsp+78h+var_6C], 28h
    MOV edx, 28h
    JMP loc_48178E
loc_481ACD:
    MOV edx, 87h
    MOV r8d, 6ADh
    MOV ecx, offset aSslStatemState_0
    MOV esi, 16Fh
    MOV edi, 14h
    MOV [rsp+78h+var_6C], 32h
    CALL sub_50BF00
    MOV edx, [rsp+78h+var_6C]
    JMP loc_48178E
loc_481AFD:
    MOV edx, 0Dh
    MOV r8d, 6A7h
    MOV ecx, offset aSslStatemState_0
    MOV esi, 16Fh
    MOV edi, 14h
    MOV [rsp+78h+var_6C], 2Ah
    CALL sub_50BF00
    MOV edx, [rsp+78h+var_6C]
    JMP loc_48178E
loc_481B2D:
    MOV r8d, 6C7h
    MOV ecx, offset aSslStatemState_0
    MOV edx, 41h
    MOV esi, 16Fh
    MOV edi, 14h
    CALL sub_50BF00
    JMP loc_48179B
loc_481B51:
    MOV rdi, [rsp+78h+var_60]
    MOV edx, 6C0h
    MOV esi, offset aSslStatemState_0
    CALL sub_535410
    JMP loc_48194B
loc_481B6A:
    MOV rax, [rbx+480h]
    XOR esi, esi
    MOV rdi, r12
    MOV [rax+108h], r12
    CALL sub_5781E0
    MOV rdi, rax
    MOV rbp, rax
    CALL sub_589250
    TEST rax, rax
    MOV r12, rax
    JZ loc_481BA1
loc_481B95:
    MOV rdi, rax
    CALL sub_526860
    TEST eax, eax
    JZ loc_481C01
loc_481BA1:
    MOV [rsp+78h+var_6C], 50h
    MOV r8d, 6F7h
    MOV ecx, offset aSslStatemState_0
    MOV edx, 0EFh
loc_481BB9:
    MOV esi, 16Fh
    MOV edi, 14h
    XOR r12d, r12d
    CALL sub_50BF00
    XOR r14d, r14d
    MOV edx, [rsp+78h+var_6C]
    JMP loc_48178E
loc_481BD7:
    CALL sub_64A0B0
loc_481BDC:
    MOV rdi, [rbx+4F8h]
    CALL sub_489600
    MOV r8d, 6DFh
    MOV [rsp+78h+var_6C], eax
    MOV ecx, offset aSslStatemState_0
    MOV edx, 86h
    JMP loc_481778
loc_481C01:
    LEA rsi, [rsp+78h+var_58]
    MOV rdi, r12
    CALL sub_460B60
    TEST rax, rax
    JZ loc_481CD0
loc_481C17:
    MOV rdx, [rbx+8]
    MOV rcx, [rdx+0C0h]
    TEST byte ptr [rcx+60h], 8
    JNZ loc_481C9D
loc_481C28:
    MOV edx, [rdx]
    CMP edx, 303h
    JLE loc_481C9D
loc_481C32:
    CMP edx, 10000h
    JZ loc_481C9D
loc_481C3A:
    MOV rax, [rbx+480h]
    MOV rdx, [rsp+78h+var_58]
    MOV rdi, [rax+0F8h]
    MOV [rax+100h], edx
    CALL sub_597D80
    MOV rdi, rbp
    CALL sub_58BF30
    MOV rax, [rbx+480h]
    MOV rdx, [rbx+4F8h]
    MOV [rax+0F8h], rbp
    MOV [rax+110h], rdx
    MOV rax, [rbx+8]
    MOV rdx, [rax+0C0h]
    TEST byte ptr [rdx+60h], 8
    JZ loc_481CED
loc_481C8D:
    XOR r12d, r12d
    XOR r14d, r14d
    MOV ebx, 3
    JMP loc_4817A5
loc_481C9D:
    MOV rdx, [rbx+0A0h]
    MOV rdx, [rdx+238h]
    MOV edx, [rdx+20h]
    TEST [rax+4], edx
    JNZ loc_481C3A
loc_481CB3:
    MOV [rsp+78h+var_6C], 2Fh
    MOV r8d, 70Ch
    MOV ecx, offset aSslStatemState_0
    MOV edx, 17Fh
    JMP loc_481BB9
loc_481CD0:
    MOV [rsp+78h+var_6C], 2
    MOV r8d, 6FFh
    MOV ecx, offset aSslStatemState_0
    MOV edx, 0F7h
    JMP loc_481BB9
loc_481CED:
    MOV eax, [rax]
    CMP eax, 303h
    JLE loc_481C8D
loc_481CF6:
    CMP eax, 10000h
    JZ loc_481C8D
loc_481CFD:
    LEA rcx, [rbx+448h]
    LEA rsi, [rbx+408h]
    MOV edx, 40h
    MOV rdi, rbx
    CALL sub_46EA10
    TEST eax, eax
    JNZ loc_481C8D
loc_481D20:
    MOV [rsp+78h+var_6C], 50h
    MOV r8d, 71Eh
    MOV ecx, offset aSslStatemState_0
    MOV edx, 44h
    JMP loc_481BB9

=====

3, gcc

######
PEM_read_bio_X509:
loc_54B3D0:
    MOV r8, rdx
    MOV r9, rcx
    MOV rdx, rdi
    MOV rcx, rsi
    MOV edi, offset sub_597D50
    MOV esi, offset aCertificate_1
    JMP sub_549FB0

=====

3, gcc

######
ENGINE_get_static_state:
loc_5094B0:
    MOV eax, offset unk_9BB170
    RETN 

=====

3, gcc

######
EVP_CIPHER_CTX_key_length:
loc_5234E0:
    MOV eax, [rdi+68h]
    RETN 

=====

3, gcc

######
OPENSSL_sk_insert:
loc_577910:
    TEST rdi, rdi
    JZ loc_577A18
loc_577919:
    MOV ecx, [rdi]
    CMP ecx, 7FFFFFFFh
    JZ loc_577A18
loc_577927:
    PUSH r14
    PUSH r13
    MOV eax, 4
    PUSH r12
    PUSH rbp
    LEA ebp, [rcx+1]
    PUSH rbx
    MOV rbx, rdi
    MOV rdi, [rdi+8]
    CMP ebp, 3
    MOV r13d, edx
    MOV r12, rsi
    CMOVLE ebp, eax
    TEST rdi, rdi
    JZ loc_577A48
loc_577953:
    MOV r14d, [rbx+14h]
    CMP ebp, r14d
    JLE loc_5779A7
loc_57795C:
    CMP r14d, 7FFFFFFFh
    JZ loc_577A08
loc_577969:
    CMP r14d, 55555554h
    JLE loc_577A1B
loc_577976:
    MOV rsi, 3FFFFFFF8h
    MOV r14d, 7FFFFFFFh
loc_577986:
    MOV ecx, 0C5h
    MOV edx, offset aCryptoStackSta
    CALL sub_535480
    TEST rax, rax
    JZ loc_577A08
loc_57799A:
    MOV ecx, [rbx]
    MOV [rbx+8], rax
    MOV rdi, rax
    MOV [rbx+14h], r14d
loc_5779A7:
    CMP r13d, ecx
    JGE loc_5779E8
loc_5779AC:
    MOV eax, r13d
    SHR eax, 1Fh
    TEST al, al
    JNZ loc_5779E8
loc_5779B6:
    MOVSXD rbp, r13d
    SUB ecx, r13d
    LEA rax, ds:0[rbp*8]
    MOVSXD rdx, ecx
    SHL rdx, 3
    LEA rsi, [rdi+rax]
    LEA rdi, [rdi+rax+8]
    CALL sub_4003B0
    MOV rax, [rbx+8]
    MOV ecx, [rbx]
    MOV [rax+rbp*8], r12
    JMP loc_5779EF
loc_5779E8:
    MOVSXD rax, ecx
    MOV [rdi+rax*8], r12
loc_5779EF:
    LEA eax, [rcx+1]
    MOV dword ptr [rbx+10h], 0
    MOV [rbx], eax
    POP rbx
    POP rbp
    POP r12
    POP r13
    POP r14
    RETN 
loc_577A08:
    POP rbx
    XOR eax, eax
    POP rbp
    POP r12
    POP r13
    POP r14
    RETN 
loc_577A18:
    XOR eax, eax
    RETN 
loc_577A1B:
    MOV edx, r14d
    SHR edx, 1Fh
    ADD edx, r14d
    SAR edx, 1
    ADD r14d, edx
    CMP ebp, r14d
    JG loc_57795C
loc_577A32:
    TEST r14d, r14d
    JZ loc_577A08
loc_577A37:
    MOVSXD rsi, r14d
    SHL rsi, 3
    JMP loc_577986
loc_577A48:
    MOVSXD rdi, ebp
    MOV edx, 0B4h
    MOV esi, offset aCryptoStackSta
    SHL rdi, 3
    CALL sub_5355B0
    TEST rax, rax
    MOV [rbx+8], rax
    JZ loc_577A08
loc_577A67:
    MOV [rbx+14h], ebp
    MOV ecx, [rbx]
    MOV rdi, rax
    JMP loc_5779A7

=====

3, gcc

######
X509_ATTRIBUTE_create:
loc_5953B0:
    PUSH r13
    PUSH r12
    MOV r13, rdx
    PUSH rbp
    PUSH rbx
    MOV ebp, edi
    MOV edi, offset unk_70DE20
    MOV r12d, esi
    SUB rsp, 8
    CALL sub_4B4B20
    TEST rax, rax
    MOV rbx, rax
    JZ loc_595409
loc_5953D4:
    MOV edi, ebp
    CALL sub_540640
    MOV [rbx], rax
    CALL sub_4B7050
    TEST rax, rax
    MOV rbp, rax
    JZ loc_595420
loc_5953EB:
    MOV rdi, [rbx+8]
    MOV rsi, rax
    CALL sub_577D90
    TEST eax, eax
    JZ loc_595420
loc_5953FB:
    MOV rdx, r13
    MOV esi, r12d
    MOV rdi, rbp
    CALL sub_4A7F30
loc_595409:
    ADD rsp, 8
    MOV rax, rbx
    POP rbx
    POP rbp
    POP r12
    POP r13
    RETN 
loc_595420:
    MOV rdi, rbx
    MOV esi, offset unk_70DE20
    XOR ebx, ebx
    CALL sub_4B42F0
    MOV rdi, rbp
    CALL sub_4B7060
    ADD rsp, 8
    MOV rax, rbx
    POP rbx
    POP rbp
    POP r12
    POP r13
    RETN 

=====

3, gcc

######
X509_load_crl_file:
loc_584880:
    PUSH r13
    PUSH r12
    MOV r13, rdi
    PUSH rbp
    PUSH rbx
    MOV rbp, rsi
    MOV ebx, edx
    SUB rsp, 8
    CALL sub_4C78C0
    MOV rdi, rax
    CALL sub_4C08C0
    TEST rax, rax
    MOV r12, rax
    JZ loc_584910
loc_5848A7:
    MOV rcx, rbp
    MOV edx, 3
    MOV esi, 6Ch
    MOV rdi, rax
    CALL sub_4C1E80
    TEST eax, eax
    JLE loc_584910
loc_5848C0:
    CMP ebx, 1
    JZ loc_584928
loc_5848C5:
    CMP ebx, 2
    JZ loc_584988
loc_5848CE:
    MOV r8d, 0B1h
    MOV ecx, offset aCryptoX509ByFi
    MOV edx, 64h
loc_5848DE:
    MOV esi, 70h
    MOV edi, 0Bh
    XOR ebx, ebx
    XOR ebp, ebp
    CALL sub_50BF00
loc_5848F1:
    MOV rdi, rbx
    CALL sub_595CE0
    MOV rdi, r12
    CALL sub_4C0A00
    ADD rsp, 8
    MOV eax, ebp
    POP rbx
    POP rbp
    POP r12
    POP r13
    RETN 
loc_584910:
    MOV r8d, 8Dh
    MOV ecx, offset aCryptoX509ByFi
    MOV edx, 2
    JMP loc_5848DE
loc_584928:
    XOR ebp, ebp
    JMP loc_58494B
loc_584930:
    MOV rdi, [r13+18h]
    MOV rsi, rax
    CALL sub_58ACA0
    TEST eax, eax
    JZ loc_5849B0
loc_584940:
    MOV rdi, rbx
    ADD ebp, 1
    CALL sub_595CE0
loc_58494B:
    XOR edx, edx
    XOR esi, esi
    MOV ecx, offset unk_74FF22
    MOV rdi, r12
    CALL sub_546430
    TEST rax, rax
    MOV rbx, rax
    JNZ loc_584930
loc_584964:
    CALL sub_50F090
    AND eax, 0FFFh
    CMP eax, 6Ch
    JNZ loc_5849C0
loc_584973:
    TEST ebp, ebp
    JZ loc_5849C0
loc_584977:
    CALL sub_50C4A0
    JMP loc_5848F1
loc_584988:
    XOR esi, esi
    MOV rdi, r12
    CALL sub_594CA0
    TEST rax, rax
    MOV rbx, rax
    JZ loc_5849E6
loc_58499A:
    MOV rdi, [r13+18h]
    MOV rsi, rax
    CALL sub_58ACA0
    MOV ebp, eax
    JMP loc_5848F1
loc_5849B0:
    XOR ebp, ebp
    JMP loc_5848F1
loc_5849C0:
    MOV r8d, 9Ah
    MOV ecx, offset aCryptoX509ByFi
    MOV edx, 9
    MOV esi, 70h
    MOV edi, 0Bh
    XOR ebp, ebp
    CALL sub_50BF00
    JMP loc_5848F1
loc_5849E6:
    MOV r8d, 0A9h
    MOV ecx, offset aCryptoX509ByFi
    MOV edx, 0Dh
    MOV esi, 70h
    MOV edi, 0Bh
    XOR ebp, ebp
    CALL sub_50BF00
    JMP loc_5848F1

=====

3, gcc

######
init_6:
loc_5D3CA0:
    SUB rsp, 8
    CALL sub_5237C0
    ADD rsp, 8
    MOV rdi, rax
    JMP loc_5831F0
loc_5831F0:
    MOV qword ptr [rdi], 0
    MOV qword ptr [rdi+0A0h], 0
    MOV rcx, rdi
    LEA rdi, [rdi+8]
    XOR eax, eax
    AND rdi, 0FFFFFFFFFFFFFFF8h
    SUB rcx, rdi
    ADD ecx, 0A8h
    SHR ecx, 3
    REP 
    MOV eax, 1
    RETN 

=====

3, gcc

######
ASN1_parse:
loc_4ABC40:
    SUB rsp, 20h
    MOV r9d, ecx
    XOR r8d, r8d
    MOV [rsp+20h+var_10], rsi
    PUSH 0
    XOR ecx, ecx
    LEA rsi, [rsp+28h+var_10]
    CALL sub_4AB0A0
    ADD rsp, 28h
    RETN 

=====

0, mips

######
ssl_do_config:
loc_4C03E8:
    ADDIU $sp, -0x50
    SW $ra, 0x48+var_s4($sp)
    SW $fp, 0x48+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0x48+var_28($sp)
    SW $a0, 0x48+arg_0($fp)
    SW $a1, 0x48+arg_4($fp)
    SW $a2, 0x48+arg_8($fp)
    SW $zero, 0x48+var_1C($fp)
    SW $zero, 0x48+var_14($fp)
    LW $v0, 0x48+arg_0($fp)
    BNEZ $v0, loc_4C0468
    NOP 
loc_4C0424:
    LW $v0, 0x48+arg_4($fp)
    BNEZ $v0, loc_4C0468
    NOP 
loc_4C0430:
    LI $v0, 0x93
    SW $v0, 0x48+var_38($sp)
    LUI $v0, 0x81
    ADDIU $a3, $v0, (aSslSslMcnfC - 0x810000)
    LI $a2, 0x43
    LI $a1, 0x187
    LI $a0, 0x14
    LA $v0, sub_5BCD8C
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x48+var_28($fp)
    B loc_4C075C
    NOP 
loc_4C0468:
    LW $a0, 0x48+arg_8($fp)
    JAL sub_4C0314
    NOP 
    LW $gp, 0x48+var_28($fp)
    SW $v0, 0x48+var_4($fp)
    LW $v0, 0x48+var_4($fp)
    BNEZ $v0, loc_4C04E4
    NOP 
loc_4C0488:
    LI $v0, 0x98
    SW $v0, 0x48+var_38($sp)
    LUI $v0, 0x81
    ADDIU $a3, $v0, (aSslSslMcnfC - 0x810000)
    LI $a2, 0x71
    LI $a1, 0x187
    LI $a0, 0x14
    LA $v0, sub_5BCD8C
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x48+var_28($fp)
    LW $a2, 0x48+arg_8($fp)
    LUI $v0, 0x81
    ADDIU $a1, $v0, (aName_5 - 0x810000)
    LI $a0, 2
    LA $v0, sub_5BE32C
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x48+var_28($fp)
    B loc_4C075C
    NOP 
loc_4C04E4:
    LA $v0, sub_4ADEC4
    MOVE $t9, $v0
    BAL sub_4ADEC4
    NOP 
    LW $gp, 0x48+var_28($fp)
    SW $v0, 0x48+var_1C($fp)
    LW $v0, 0x48+var_1C($fp)
    BEQZ $v0, loc_4C0758
    NOP 
loc_4C0508:
    LI $v0, 2
    SW $v0, 0x48+var_10($fp)
    LW $v0, 0x48+var_10($fp)
    ORI $v0, 0x60
    SW $v0, 0x48+var_10($fp)
    LW $v0, 0x48+arg_0($fp)
    BEQZ $v0, loc_4C0558
    NOP 
loc_4C0528:
    LW $v0, 0x48+arg_0($fp)
    LW $v0, 4($v0)
    SW $v0, 0x48+var_C($fp)
    LW $a1, 0x48+arg_0($fp)
    LW $a0, 0x48+var_1C($fp)
    LA $v0, sub_4AE3D8
    MOVE $t9, $v0
    BAL sub_4AE3D8
    NOP 
    LW $gp, 0x48+var_28($fp)
    B loc_4C0580
    NOP 
loc_4C0558:
    LW $v0, 0x48+arg_4($fp)
    LW $v0, 0($v0)
    SW $v0, 0x48+var_C($fp)
    LW $a1, 0x48+arg_4($fp)
    LW $a0, 0x48+var_1C($fp)
    LA $v0, sub_4AE4A8
    MOVE $t9, $v0
    BAL sub_4AE4A8
    NOP 
    LW $gp, 0x48+var_28($fp)
loc_4C0580:
    LW $v0, 0x48+var_C($fp)
    LW $v1, 0x18($v0)
    LA $v0, sub_4BA768
    BEQ $v1, $v0, loc_4C05A0
    NOP 
loc_4C0594:
    LW $v0, 0x48+var_10($fp)
    ORI $v0, 8
    SW $v0, 0x48+var_10($fp)
loc_4C05A0:
    LW $v0, 0x48+var_C($fp)
    LW $v1, 0x1C($v0)
    LA $v0, sub_4BA768
    BEQ $v1, $v0, loc_4C05C0
    NOP 
loc_4C05B4:
    LW $v0, 0x48+var_10($fp)
    ORI $v0, 4
    SW $v0, 0x48+var_10($fp)
loc_4C05C0:
    LW $a1, 0x48+var_10($fp)
    LW $a0, 0x48+var_1C($fp)
    LA $v0, sub_4AE23C
    MOVE $t9, $v0
    BAL sub_4AE23C
    NOP 
    LW $gp, 0x48+var_28($fp)
    SW $zero, 0x48+var_18($fp)
    LW $v0, 0x48+var_4($fp)
    LW $v0, 4($v0)
    SW $v0, 0x48+var_8($fp)
    B loc_4C071C
    NOP 
loc_4C05F4:
    LW $v0, 0x48+var_8($fp)
    LW $v1, 0($v0)
    LW $v0, 0x48+var_8($fp)
    LW $v0, 4($v0)
    MOVE $a2, $v0
    MOVE $a1, $v1
    LW $a0, 0x48+var_1C($fp)
    LA $v0, sub_4ADA18
    MOVE $t9, $v0
    BAL sub_4ADA18
    NOP 
    LW $gp, 0x48+var_28($fp)
    SW $v0, 0x48+var_14($fp)
    LW $v0, 0x48+var_14($fp)
    BGTZ $v0, loc_4C0704
    NOP 
loc_4C0634:
    LW $v1, 0x48+var_14($fp)
    LI $v0, 0xFFFFFFFE
    BNE $v1, $v0, loc_4C067C
    NOP 
loc_4C0644:
    LI $v0, 0xB1
    SW $v0, 0x48+var_38($sp)
    LUI $v0, 0x81
    ADDIU $a3, $v0, (aSslSslMcnfC - 0x810000)
    LI $a2, 0x8B
    LI $a1, 0x187
    LI $a0, 0x14
    LA $v0, sub_5BCD8C
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x48+var_28($fp)
    B loc_4C06AC
    NOP 
loc_4C067C:
    LI $v0, 0xB3
    SW $v0, 0x48+var_38($sp)
    LUI $v0, 0x81
    ADDIU $a3, $v0, (aSslSslMcnfC - 0x810000)
    LI $a2, 0x180
    LI $a1, 0x187
    LI $a0, 0x14
    LA $v0, sub_5BCD8C
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x48+var_28($fp)
loc_4C06AC:
    LW $v0, 0x48+var_8($fp)
    LW $v0, 0($v0)
    LW $v1, 0x48+var_8($fp)
    LW $v1, 4($v1)
    SW $v1, 0x48+var_30($sp)
    LA $v1, aArg
    SW $v1, 0x48+var_34($sp)
    SW $v0, 0x48+var_38($sp)
    LUI $v0, 0x81
    ADDIU $a3, $v0, (aCmd_0 - 0x810000)
    LW $a2, 0x48+arg_8($fp)
    LUI $v0, 0x81
    ADDIU $a1, $v0, (aSection_2 - 0x810000)
    LI $a0, 6
    LA $v0, sub_5BE32C
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x48+var_28($fp)
    B loc_4C075C
    NOP 
loc_4C0704:
    LW $v0, 0x48+var_18($fp)
    ADDIU $v0, 1
    SW $v0, 0x48+var_18($fp)
    LW $v0, 0x48+var_8($fp)
    ADDIU $v0, 8
    SW $v0, 0x48+var_8($fp)
loc_4C071C:
    LW $v0, 0x48+var_4($fp)
    LW $v1, 8($v0)
    LW $v0, 0x48+var_18($fp)
    SLTU $v0, $v1
    BNEZ $v0, loc_4C05F4
    NOP 
loc_4C0734:
    LW $a0, 0x48+var_1C($fp)
    LA $v0, sub_4ADF24
    MOVE $t9, $v0
    BAL sub_4ADF24
    NOP 
    LW $gp, 0x48+var_28($fp)
    SW $v0, 0x48+var_14($fp)
    B loc_4C075C
    NOP 
loc_4C0758:
    NOP 
loc_4C075C:
    LW $a0, 0x48+var_1C($fp)
    LA $v0, sub_4AE124
    MOVE $t9, $v0
    BAL sub_4AE124
    NOP 
    LW $gp, 0x48+var_28($fp)
    LW $v0, 0x48+var_14($fp)
    SLT $v0, $zero, $v0
    ANDI $v0, 0xFF
    MOVE $sp, $fp
    LW $ra, 0x48+var_s4($sp)
    LW $fp, 0x48+var_s0($sp)
    ADDIU $sp, 0x50
    JR $ra
    NOP 

=====

0, mips

######
ssl_sort_cipher_list:
loc_49C714:
    ADDIU $sp, -0x20
    SW $ra, 0x18+var_s4($sp)
    SW $fp, 0x18+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0x18+var_8($sp)
    LUI $v0, 0x4A
    ADDIU $a3, $v0, (sub_49C688 - 0x4A0000)
    LI $a2, 0x40
    LI $a1, 0x99
    LUI $v0, 0x8B
    ADDIU $a0, $v0, (unk_8AA340 - 0x8B0000)
    LA $v0, sub_76E688
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x18+var_8($fp)
    LUI $v0, 0x4A
    ADDIU $a3, $v0, (sub_49C688 - 0x4A0000)
    LI $a2, 0x40
    LI $a1, 2
    LUI $v0, 0x8B
    ADDIU $a0, $v0, (unk_8AC980 - 0x8B0000)
    LA $v0, sub_76E688
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x18+var_8($fp)
    NOP 
    MOVE $sp, $fp
    LW $ra, 0x18+var_s4($sp)
    LW $fp, 0x18+var_s0($sp)
    ADDIU $sp, 0x20
    JR $ra
    NOP 

=====

0, mips

######
X509_supported_extension:
loc_6D007C:
    ADDIU $sp, -0x30
    SW $ra, 0x28+var_s4($sp)
    SW $fp, 0x28+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0x28+var_18($sp)
    SW $a0, 0x28+var_C($fp)
    LA $v0, dword_8A32B0
    LW $v0, (dword_8A32B0 - 0x8A32B0)($v0)
    SW $v0, 0x28+var_4($fp)
    LW $a0, 0x28+var_C($fp)
    LA $v0, sub_6990B0
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x28+var_18($fp)
    MOVE $a0, $v0
    LA $v0, sub_6053F4
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x28+var_18($fp)
    SW $v0, 0x28+var_8($fp)
    LW $v0, 0x28+var_8($fp)
    BNEZ $v0, loc_6D00F4
    NOP 
loc_6D00E8:
    MOVE $v0, $zero
    B loc_6D012C
    NOP 
loc_6D00F4:
    ADDIU $v1, $fp, 0x28+var_8
    LI $a2, 0xE
    LUI $v0, 0x84
    ADDIU $a1, $v0, (unk_83DC58 - 0x840000)
    MOVE $a0, $v1
    JAL sub_6D000C
    NOP 
    LW $gp, 0x28+var_18($fp)
    BEQZ $v0, loc_6D0128
    NOP 
loc_6D011C:
    LI $v0, 1
    B loc_6D012C
    NOP 
loc_6D0128:
    MOVE $v0, $zero
loc_6D012C:
    LA $v1, dword_8A32B0
    LW $a0, 0x28+var_4($fp)
    LW $v1, (dword_8A32B0 - 0x8A32B0)($v1)
    BEQ $a0, $v1, loc_6D0150
    NOP 
loc_6D0140:
    LA $v0, sub_7A3A40
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
loc_6D0150:
    MOVE $sp, $fp
    LW $ra, 0x28+var_s4($sp)
    LW $fp, 0x28+var_s0($sp)
    ADDIU $sp, 0x30
    JR $ra
    NOP 

=====

0, mips

######
asn1_print_oid:
loc_52D03C:
    ADDIU $sp, -0x80
    SW $ra, 0x78+var_s4($sp)
    SW $fp, 0x78+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0x78+var_68($sp)
    SW $a0, 0x78+var_5C($fp)
    SW $a1, 0x78+var_60($fp)
    LA $v0, dword_8A32B0
    LW $v0, (dword_8A32B0 - 0x8A32B0)($v0)
    SW $v0, 0x78+var_4($fp)
    LW $a0, 0x78+var_60($fp)
    LA $v0, sub_6053F4
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x78+var_68($fp)
    MOVE $a0, $v0
    LA $v0, sub_605080
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x78+var_68($fp)
    SW $v0, 0x78+var_58($fp)
    LW $v0, 0x78+var_58($fp)
    BNEZ $v0, loc_52D0B8
    NOP 
loc_52D0AC:
    LA $v0, unk_81BEC4
    SW $v0, 0x78+var_58($fp)
loc_52D0B8:
    ADDIU $v0, $fp, 0x78+var_54
    LI $a3, 1
    LW $a2, 0x78+var_60($fp)
    LI $a1, 0x50
    MOVE $a0, $v0
    LA $v0, sub_6057C4
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x78+var_68($fp)
    ADDIU $v0, $fp, 0x78+var_54
    MOVE $a3, $v0
    LW $a2, 0x78+var_58($fp)
    LUI $v0, 0x82
    ADDIU $a1, $v0, (aSS_5 - 0x820000)
    LW $a0, 0x78+var_5C($fp)
    LA $v0, sub_53B068
    MOVE $t9, $v0
    BAL sub_53B068
    NOP 
    LW $gp, 0x78+var_68($fp)
    BGTZ $v0, loc_52D120
    NOP 
loc_52D114:
    MOVE $v0, $zero
    B loc_52D124
    NOP 
loc_52D120:
    LI $v0, 1
loc_52D124:
    LA $v1, dword_8A32B0
    LW $a0, 0x78+var_4($fp)
    LW $v1, (dword_8A32B0 - 0x8A32B0)($v1)
    BEQ $a0, $v1, loc_52D148
    NOP 
loc_52D138:
    LA $v0, sub_7A3A40
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
loc_52D148:
    MOVE $sp, $fp
    LW $ra, 0x78+var_s4($sp)
    LW $fp, 0x78+var_s0($sp)
    ADDIU $sp, 0x80
    JR $ra
    NOP 

=====

0, mips

######
TS_OBJ_print_bio:
loc_742144:
    ADDIU $sp, -0xB0
    SW $ra, 0xA8+var_s4($sp)
    SW $fp, 0xA8+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0xA8+var_98($sp)
    SW $a0, 0xA8+var_8C($fp)
    SW $a1, 0xA8+var_90($fp)
    LA $v0, dword_8A32B0
    LW $v0, (dword_8A32B0 - 0x8A32B0)($v0)
    SW $v0, 0xA8+var_4($fp)
    ADDIU $v0, $fp, 0xA8+var_84
    MOVE $a3, $zero
    LW $a2, 0xA8+var_90($fp)
    LI $a1, 0x80
    MOVE $a0, $v0
    LA $v0, sub_6057C4
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0xA8+var_98($fp)
    ADDIU $v0, $fp, 0xA8+var_84
    MOVE $a2, $v0
    LUI $v0, 0x85
    ADDIU $a1, $v0, (aS_25 - 0x850000)
    LW $a0, 0xA8+var_8C($fp)
    LA $v0, sub_53B068
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0xA8+var_98($fp)
    LI $v0, 1
    LA $v1, dword_8A32B0
    LW $a0, 0xA8+var_4($fp)
    LW $v1, (dword_8A32B0 - 0x8A32B0)($v1)
    BEQ $a0, $v1, loc_7421EC
    NOP 
loc_7421DC:
    LA $v0, sub_7A3A40
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
loc_7421EC:
    MOVE $sp, $fp
    LW $ra, 0xA8+var_s4($sp)
    LW $fp, 0xA8+var_s0($sp)
    ADDIU $sp, 0xB0
    JR $ra
    NOP 

=====

0, mips

######
GENERAL_NAME_dup:
loc_6C75D0:
    ADDIU $sp, -0x20
    SW $ra, 0x18+var_s4($sp)
    SW $fp, 0x18+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0x18+var_8($sp)
    SW $a0, 0x18+arg_0($fp)
    LW $a2, 0x18+arg_0($fp)
    LUI $v0, 0x6C
    ADDIU $a1, $v0, (sub_6C72E8 - 0x6C0000)
    LUI $v0, 0x6C
    ADDIU $a0, $v0, (sub_6C7350 - 0x6C0000)
    LA $v0, sub_6DB730
    MOVE $t9, $v0
    BAL sub_6DB730
    NOP 
    LW $gp, 0x18+var_8($fp)
    MOVE $sp, $fp
    LW $ra, 0x18+var_s4($sp)
    LW $fp, 0x18+var_s0($sp)
    ADDIU $sp, 0x20
    JR $ra
    NOP 

=====

0, mips

######
cfbr_encrypt_block:
loc_5F7B1C:
    ADDIU $sp, -0x70
    SW $ra, 0x68+var_s4($sp)
    SW $fp, 0x68+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0x68+var_58($sp)
    SW $a0, 0x68+var_3C($fp)
    SW $a1, 0x68+var_40($fp)
    SW $a2, 0x68+arg_8($fp)
    SW $a3, 0x68+var_44($fp)
    LW $v0, 0x68+arg_10($fp)
    SW $v0, 0x68+var_48($fp)
    LW $v0, 0x68+arg_18($fp)
    SW $v0, 0x68+var_4C($fp)
    LA $v0, dword_8A32B0
    LW $v0, (dword_8A32B0 - 0x8A32B0)($v0)
    SW $v0, 0x68+var_4($fp)
    LW $v0, 0x68+arg_8($fp)
    BLEZ $v0, loc_5F7E28
    NOP 
loc_5F7B70:
    LW $v0, 0x68+arg_8($fp)
    SLTI $v0, 0x81
    BEQZ $v0, loc_5F7E28
    NOP 
loc_5F7B80:
    ADDIU $v0, $fp, 0x68+var_28
    LI $a2, 0x10
    LW $a1, 0x68+var_48($fp)
    MOVE $a0, $v0
    LA $v0, sub_794F50
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x68+var_58($fp)
    LW $v0, 0x68+var_4C($fp)
    LW $a2, 0x68+var_44($fp)
    LW $a1, 0x68+var_48($fp)
    LW $a0, 0x68+var_48($fp)
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x68+var_58($fp)
    LW $v0, 0x68+arg_8($fp)
    ADDIU $v0, 7
    BGEZ $v0, loc_5F7BD8
    NOP 
loc_5F7BD4:
    ADDIU $v0, 7
loc_5F7BD8:
    SRA $v0, 3
    SW $v0, 0x68+var_30($fp)
    LW $v0, 0x68+arg_14($fp)
    BEQZ $v0, loc_5F7C78
    NOP 
loc_5F7BEC:
    SW $zero, 0x68+var_34($fp)
    B loc_5F7C5C
    NOP 
loc_5F7BF8:
    LW $v0, 0x68+var_34($fp)
    LW $v1, 0x68+var_40($fp)
    ADDU $v1, $v0
    LW $v0, 0x68+var_34($fp)
    ADDIU $v0, 0x10
    LW $a0, 0x68+var_34($fp)
    LW $a1, 0x68+var_3C($fp)
    ADDU $a0, $a1, $a0
    LBU $a1, 0($a0)
    LW $a0, 0x68+var_34($fp)
    LW $a2, 0x68+var_48($fp)
    ADDU $a0, $a2, $a0
    LBU $a0, 0($a0)
    XOR $a0, $a1, $a0
    ANDI $a1, $a0, 0xFF
    ADDIU $a0, $fp, 0x68+var_s0
    ADDU $a0, $v0
    SB $a1, -0x28($a0)
    ADDIU $a0, $fp, 0x68+var_s0
    ADDU $v0, $a0, $v0
    LBU $v0, -0x28($v0)
    SB $v0, 0($v1)
    LW $v0, 0x68+var_34($fp)
    ADDIU $v0, 1
    SW $v0, 0x68+var_34($fp)
loc_5F7C5C:
    LW $v1, 0x68+var_34($fp)
    LW $v0, 0x68+var_30($fp)
    SLT $v0, $v1, $v0
    BNEZ $v0, loc_5F7BF8
    NOP 
loc_5F7C70:
    B loc_5F7CFC
    NOP 
loc_5F7C78:
    SW $zero, 0x68+var_34($fp)
    B loc_5F7CE8
    NOP 
loc_5F7C84:
    LW $v0, 0x68+var_34($fp)
    LW $v1, 0x68+var_40($fp)
    ADDU $v1, $v0
    LW $v0, 0x68+var_34($fp)
    ADDIU $v0, 0x10
    LW $a0, 0x68+var_34($fp)
    LW $a1, 0x68+var_3C($fp)
    ADDU $a0, $a1, $a0
    LBU $a1, 0($a0)
    ADDIU $a0, $fp, 0x68+var_s0
    ADDU $a0, $v0
    SB $a1, -0x28($a0)
    ADDIU $a0, $fp, 0x68+var_s0
    ADDU $v0, $a0, $v0
    LBU $a0, -0x28($v0)
    LW $v0, 0x68+var_34($fp)
    LW $a1, 0x68+var_48($fp)
    ADDU $v0, $a1, $v0
    LBU $v0, 0($v0)
    XOR $v0, $a0, $v0
    ANDI $v0, 0xFF
    SB $v0, 0($v1)
    LW $v0, 0x68+var_34($fp)
    ADDIU $v0, 1
    SW $v0, 0x68+var_34($fp)
loc_5F7CE8:
    LW $v1, 0x68+var_34($fp)
    LW $v0, 0x68+var_30($fp)
    SLT $v0, $v1, $v0
    BNEZ $v0, loc_5F7C84
    NOP 
loc_5F7CFC:
    LW $v1, 0x68+arg_8($fp)
    LI $v0, 0x80000007
    AND $v0, $v1, $v0
    BGEZ $v0, loc_5F7D24
    NOP 
loc_5F7D14:
    ADDIU $v0, -1
    LI $v1, 0xFFFFFFF8
    OR $v0, $v1
    ADDIU $v0, 1
loc_5F7D24:
    SW $v0, 0x68+var_2C($fp)
    LW $v0, 0x68+arg_8($fp)
    BGEZ $v0, loc_5F7D38
    NOP 
loc_5F7D34:
    ADDIU $v0, 7
loc_5F7D38:
    SRA $v0, 3
    SW $v0, 0x68+var_30($fp)
    LW $v0, 0x68+var_2C($fp)
    BNEZ $v0, loc_5F7D80
    NOP 
loc_5F7D4C:
    LW $v0, 0x68+var_30($fp)
    ADDIU $v1, $fp, 0x68+var_28
    ADDU $v0, $v1, $v0
    LI $a2, 0x10
    MOVE $a1, $v0
    LW $a0, 0x68+var_48($fp)
    LA $v0, sub_794F50
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x68+var_58($fp)
    B loc_5F7E2C
    NOP 
loc_5F7D80:
    SW $zero, 0x68+var_34($fp)
    B loc_5F7E10
    NOP 
loc_5F7D8C:
    LW $v0, 0x68+var_34($fp)
    LW $v1, 0x68+var_48($fp)
    ADDU $v0, $v1, $v0
    LW $a0, 0x68+var_34($fp)
    LW $v1, 0x68+var_30($fp)
    ADDU $v1, $a0, $v1
    ADDIU $a0, $fp, 0x68+var_s0
    ADDU $v1, $a0, $v1
    LBU $v1, -0x28($v1)
    MOVE $a0, $v1
    LW $v1, 0x68+var_2C($fp)
    SLLV $v1, $a0, $v1
    SEB $a0, $v1
    LW $a1, 0x68+var_34($fp)
    LW $v1, 0x68+var_30($fp)
    ADDU $v1, $a1, $v1
    ADDIU $v1, 1
    ADDIU $a1, $fp, 0x68+var_s0
    ADDU $v1, $a1, $v1
    LBU $v1, -0x28($v1)
    MOVE $a2, $v1
    LI $a1, 8
    LW $v1, 0x68+var_2C($fp)
    SUBU $v1, $a1, $v1
    SRAV $v1, $a2, $v1
    SEB $v1, $v1
    OR $v1, $a0, $v1
    SEB $v1, $v1
    ANDI $v1, 0xFF
    SB $v1, 0($v0)
    LW $v0, 0x68+var_34($fp)
    ADDIU $v0, 1
    SW $v0, 0x68+var_34($fp)
loc_5F7E10:
    LW $v0, 0x68+var_34($fp)
    SLTI $v0, 0x10
    BNEZ $v0, loc_5F7D8C
    NOP 
loc_5F7E20:
    B loc_5F7E2C
    NOP 
loc_5F7E28:
    NOP 
loc_5F7E2C:
    LA $v0, dword_8A32B0
    LW $v1, 0x68+var_4($fp)
    LW $v0, (dword_8A32B0 - 0x8A32B0)($v0)
    BEQ $v1, $v0, loc_5F7E50
    NOP 
loc_5F7E40:
    LA $v0, sub_7A3A40
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
loc_5F7E50:
    MOVE $sp, $fp
    LW $ra, 0x68+var_s4($sp)
    LW $fp, 0x68+var_s0($sp)
    ADDIU $sp, 0x70
    JR $ra
    NOP 

=====

0, mips

######
check_purpose_ssl_server:
loc_6D12A4:
    ADDIU $sp, -0x20
    SW $ra, 0x18+var_s4($sp)
    SW $fp, 0x18+var_s0($sp)
    MOVE $fp, $sp
    SW $a0, 0x18+arg_0($fp)
    SW $a1, 0x18+arg_4($fp)
    SW $a2, 0x18+arg_8($fp)
    LW $v0, 0x18+arg_4($fp)
    LW $v0, 0x80($v0)
    ANDI $v0, 4
    BEQZ $v0, loc_6D12F4
    NOP 
loc_6D12D4:
    LW $v0, 0x18+arg_4($fp)
    LW $v0, 0x88($v0)
    ANDI $v0, 0x11
    BNEZ $v0, loc_6D12F4
    NOP 
loc_6D12E8:
    MOVE $v0, $zero
    B loc_6D1380
    NOP 
loc_6D12F4:
    LW $v0, 0x18+arg_8($fp)
    BEQZ $v0, loc_6D1314
    NOP 
loc_6D1300:
    LW $a0, 0x18+arg_4($fp)
    JAL sub_6D1128
    NOP 
    B loc_6D1380
    NOP 
loc_6D1314:
    LW $v0, 0x18+arg_4($fp)
    LW $v0, 0x80($v0)
    ANDI $v0, 8
    BEQZ $v0, loc_6D1348
    NOP 
loc_6D1328:
    LW $v0, 0x18+arg_4($fp)
    LW $v0, 0x8C($v0)
    ANDI $v0, 0x40
    BNEZ $v0, loc_6D1348
    NOP 
loc_6D133C:
    MOVE $v0, $zero
    B loc_6D1380
    NOP 
loc_6D1348:
    LW $v0, 0x18+arg_4($fp)
    LW $v0, 0x80($v0)
    ANDI $v0, 2
    BEQZ $v0, loc_6D137C
    NOP 
loc_6D135C:
    LW $v0, 0x18+arg_4($fp)
    LW $v0, 0x84($v0)
    ANDI $v0, 0xA8
    BNEZ $v0, loc_6D137C
    NOP 
loc_6D1370:
    MOVE $v0, $zero
    B loc_6D1380
    NOP 
loc_6D137C:
    LI $v0, 1
loc_6D1380:
    MOVE $sp, $fp
    LW $ra, 0x18+var_s4($sp)
    LW $fp, 0x18+var_s0($sp)
    ADDIU $sp, 0x20
    JR $ra
    NOP 

=====

0, mips

######
sk_X509_CRL_new_null_4:
loc_62BF70:
    ADDIU $sp, -0x20
    SW $ra, 0x18+var_s4($sp)
    SW $fp, 0x18+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0x18+var_8($sp)
    LA $v0, sub_670324
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x18+var_8($fp)
    MOVE $sp, $fp
    LW $ra, 0x18+var_s4($sp)
    LW $fp, 0x18+var_s0($sp)
    ADDIU $sp, 0x20
    JR $ra
    NOP 

=====

0, mips

######
SSL_CTX_set_cipher_list:
loc_4B7B04:
    ADDIU $sp, -0x30
    SW $ra, 0x28+var_s4($sp)
    SW $fp, 0x28+var_s0($sp)
    MOVE $fp, $sp
    LA $gp, unk_8B6DB0
    SW $gp, 0x28+var_10($sp)
    SW $a0, 0x28+arg_0($fp)
    SW $a1, 0x28+arg_4($fp)
    LW $v0, 0x28+arg_0($fp)
    LW $v1, 0($v0)
    LW $v0, 0x28+arg_0($fp)
    ADDIU $a0, $v0, 4
    LW $v0, 0x28+arg_0($fp)
    ADDIU $a1, $v0, 8
    LW $v0, 0x28+arg_0($fp)
    LW $v0, 0xB0($v0)
    SW $v0, 0x28+var_18($sp)
    LW $a3, 0x28+arg_4($fp)
    MOVE $a2, $a1
    MOVE $a1, $a0
    MOVE $a0, $v1
    LA $v0, sub_4A99D8
    MOVE $t9, $v0
    BAL sub_4A99D8
    NOP 
    LW $gp, 0x28+var_10($fp)
    SW $v0, 0x28+var_4($fp)
    LW $v0, 0x28+var_4($fp)
    BNEZ $v0, loc_4B7B8C
    NOP 
loc_4B7B80:
    MOVE $v0, $zero
    B loc_4B7BE4
    NOP 
loc_4B7B8C:
    LW $a0, 0x28+var_4($fp)
    JAL sub_4AF5A8
    NOP 
    LW $gp, 0x28+var_10($fp)
    BNEZ $v0, loc_4B7BE0
    NOP 
loc_4B7BA4:
    LI $v0, 0x985
    SW $v0, 0x28+var_18($sp)
    LUI $v0, 0x81
    ADDIU $a3, $v0, (aSslSslLibC - 0x810000)
    LI $a2, 0xB9
    LI $a1, 0x10D
    LI $a0, 0x14
    LA $v0, sub_5BCD8C
    MOVE $t9, $v0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x28+var_10($fp)
    MOVE $v0, $zero
    B loc_4B7BE4
    NOP 
loc_4B7BE0:
    LI $v0, 1
loc_4B7BE4:
    MOVE $sp, $fp
    LW $ra, 0x28+var_s4($sp)
    LW $fp, 0x28+var_s0($sp)
    ADDIU $sp, 0x30
    JR $ra
    NOP 

=====

1, mips

######
ASN1_UTF8STRING_free:
loc_4D1224:
    ADDIU $sp, -0x20
    SW $ra, 0x1C+var_s0($sp)
    LA $gp, unk_76F870
    SW $gp, 0x1C+var_C($sp)
    LA $t9, sub_4C7218
    BAL sub_4C7218
    NOP 
    LW $gp, 0x1C+var_C($sp)
    LW $ra, 0x1C+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x20

=====

1, mips

######
ossl_statem_client_max_message_size:
loc_49BCD4:
    LW $v0, 0x40($a0)
    SLTIU $v0, 0x30
    BEQZ $v0, def_49BCFC
    NOP 
loc_49BCE4:
    LW $v0, 0x40($a0)
    SLL $v1, $v0, 2
    LA $v0, jpt_49BCFC
    ADDU $v0, $v1
    LW $v0, 0($v0)
    JR $v0
    NOP 
loc_49BD04:
    JR $ra
    LI $v0, 0x4E20
loc_49BD0C:
    JR $ra
    LI $v0, 0x102
loc_49BD14:
    JR $ra
    LW $v0, 0x448($a0)
loc_49BD1C:
    JR $ra
    LI $v0, 0x4000
loc_49BD24:
    JR $ra
    LI $v0, 0x4000
loc_49BD2C:
    LUI $v0, 1
    JR $ra
    LI $v0, 0x19000
loc_49BD38:
    JR $ra
    LW $v0, 0x448($a0)
loc_49BD40:
    LW $v0, 0($a0)
    XORI $v1, $v0, 0x100
    LI $v0, 1
    LI $a0, 3
    JR $ra
    MOVZ $v0, $a0, $v1
loc_49BD58:
    JR $ra
    LI $v0, 0x4000
loc_49BD60:
    JR $ra
    LI $v0, 0x40
loc_49BD68:
    JR $ra
    LI $v0, 1
loc_49BD70:
    JR $ra
    MOVE $v0, $zero

=====

1, mips

######
PEM_write_bio_PrivateKey_traditional:
loc_56D310:
    ADDIU $sp, -0xB0
    SW $ra, 0x8C+var_s20($sp)
    SW $s7, 0x8C+var_s1C($sp)
    SW $s6, 0x8C+var_s18($sp)
    SW $s5, 0x8C+var_s14($sp)
    SW $s4, 0x8C+var_s10($sp)
    SW $s3, 0x8C+var_sC($sp)
    SW $s2, 0x8C+var_s8($sp)
    SW $s1, 0x8C+var_s4($sp)
    SW $s0, 0x8C+var_s0($sp)
    LA $gp, unk_76F870
    SW $gp, 0x8C+var_64($sp)
    MOVE $s3, $a0
    MOVE $s2, $a1
    MOVE $s4, $a2
    MOVE $s5, $a3
    LW $s6, 0x8C+arg_14($sp)
    LW $s7, 0x8C+arg_18($sp)
    LA $s1, dword_75C25C
    LW $v0, (dword_75C25C - 0x75C25C)($s1)
    SW $v0, 0x8C+var_8($sp)
    LW $v0, 0xC($a1)
    LW $a3, 0xC($v0)
    LA $a2, aSPrivateKey
    LI $a1, 0x50
    ADDIU $s0, $sp, 0x8C+var_58
    MOVE $a0, $s0
    LA $t9, sub_4D9D70
    JALR $ra, $t9
    NOP 
    LW $gp, 0x8C+var_64($sp)
    SW $s7, 0x8C+var_6C($sp)
    SW $s6, 0x8C+var_70($sp)
    LW $v0, 0x8C+arg_10($sp)
    SW $v0, 0x8C+var_74($sp)
    SW $s5, 0x8C+var_78($sp)
    SW $s4, 0x8C+var_7C($sp)
    MOVE $a3, $s2
    MOVE $a2, $s3
    MOVE $a1, $s0
    LA $a0, sub_5EA5F0
    LA $t9, sub_56A7AC
    BAL sub_56A7AC
    NOP 
    LW $gp, 0x8C+var_64($sp)
    LW $a0, 0x8C+var_8($sp)
    LW $v1, (dword_75C25C - 0x75C25C)($s1)
    BEQ $a0, $v1, loc_56D3E8
    LW $ra, 0x8C+var_s20($sp)
loc_56D3DC:
    LA $t9, sub_65EDB0
    JALR $ra, $t9
    NOP 
loc_56D3E8:
    LW $s7, 0x8C+var_s1C($sp)
    LW $s6, 0x8C+var_s18($sp)
    LW $s5, 0x8C+var_s14($sp)
    LW $s4, 0x8C+var_s10($sp)
    LW $s3, 0x8C+var_sC($sp)
    LW $s2, 0x8C+var_s8($sp)
    LW $s1, 0x8C+var_s4($sp)
    LW $s0, 0x8C+var_s0($sp)
    JR $ra
    ADDIU $sp, 0xB0

=====

1, mips

######
ecdsa_sign_setup:
loc_5222E0:
    ADDIU $sp, -0x58
    SW $ra, 0x30+var_s24($sp)
    SW $fp, 0x30+var_s20($sp)
    SW $s7, 0x30+var_s1C($sp)
    SW $s6, 0x30+var_s18($sp)
    SW $s5, 0x30+var_s14($sp)
    SW $s4, 0x30+var_s10($sp)
    SW $s3, 0x30+var_sC($sp)
    SW $s2, 0x30+var_s8($sp)
    SW $s1, 0x30+var_s4($sp)
    SW $s0, 0x30+var_s0($sp)
    LA $gp, unk_76F870
    SW $gp, 0x30+var_18($sp)
    SW $a2, 0x30+arg_8($sp)
    SW $a3, 0x30+arg_C($sp)
    LW $s1, 0x30+arg_10($sp)
    BEQZ $a0, loc_52234C
    LW $s5, 0x30+arg_14($sp)
loc_52232C:
    MOVE $s2, $a0
    MOVE $s7, $a1
    LA $t9, sub_51BEC8
    BAL sub_51BEC8
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522380
    MOVE $s6, $v0
loc_52234C:
    LI $v0, 0x2E
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x43
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522AC4
    MOVE $s0, $zero
loc_522380:
    MOVE $a0, $s2
    LA $t9, sub_51CA80
    BAL sub_51CA80
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_5223D0
    MOVE $s0, $v0
loc_52239C:
    LI $v0, 0x33
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x9F
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522AC8
    MOVE $v0, $s0
loc_5223D0:
    BNEZ $s7, loc_522420
    LA $t9, sub_4E3B00
loc_5223D8:
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522424
    MOVE $s4, $v0
loc_5223EC:
    LI $v0, 0x39
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x41
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522AC4
    MOVE $s0, $zero
loc_522420:
    MOVE $s4, $s7
loc_522424:
    LA $t9, sub_4E6DE0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    MOVE $s0, $v0
    LA $t9, sub_4E6DE0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    MOVE $fp, $v0
    LA $t9, sub_4E6DE0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BEQZ $s0, loc_522474
    SW $v0, 0x30+var_C($sp)
loc_522464:
    BEQZ $fp, loc_522474
    NOP 
loc_52246C:
    BNEZ $v0, loc_5224A8
    MOVE $a0, $s6
loc_522474:
    LI $v0, 0x43
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x41
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A94
    SW $zero, 0x30+var_8($sp)
loc_5224A8:
    LA $t9, sub_51D908
    BAL sub_51D908
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_5224F4
    SW $v0, 0x30+var_8($sp)
loc_5224C0:
    LI $v0, 0x47
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x10
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_5224F4:
    MOVE $a0, $s6
    LA $t9, sub_51D498
    BAL sub_51D498
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522544
    MOVE $s3, $v0
loc_522510:
    LI $v0, 0x4C
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x10
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_522544:
    BEQZ $s1, loc_5225BC
    MOVE $a0, $s2
loc_52254C:
    LA $t9, sub_51BF58
    BAL sub_51BF58
    NOP 
    LW $gp, 0x30+var_18($sp)
    SW $s4, 0x30+var_1C($sp)
    SW $s5, 0x30+var_20($sp)
    MOVE $a3, $s1
    MOVE $a2, $v0
    MOVE $a1, $s3
    MOVE $a0, $s0
    LA $t9, sub_4ED7F8
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_52260C
    LI $v0, 0x58
loc_52258C:
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x9E
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_5225BC:
    MOVE $a1, $s3
    MOVE $a0, $s0
    LA $t9, sub_4ED798
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_52260C
    LI $v0, 0x5E
loc_5225DC:
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x9E
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_52260C:
    MOVE $a0, $s0
    LA $t9, sub_4E7A8C
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522544
    MOVE $a2, $s3
loc_522628:
    MOVE $a1, $s0
    MOVE $a0, $s0
    LA $t9, sub_5EAD70
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BEQZ $v0, loc_522A94
    MOVE $a0, $s0
loc_522648:
    LA $t9, sub_4E6B00
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    SW $v0, 0x30+var_4($sp)
    MOVE $a0, $s3
    LA $t9, sub_4E6B00
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    LW $v1, 0x30+var_4($sp)
    SLT $v0, $v1
    BNEZ $v0, loc_5226A0
    MOVE $a2, $s3
loc_522680:
    MOVE $a1, $s0
    MOVE $a0, $s0
    LA $t9, sub_5EAD70
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BEQZ $v0, loc_522A98
    MOVE $a0, $s0
loc_5226A0:
    SW $s4, 0x30+var_1C($sp)
    SW $zero, 0x30+var_20($sp)
    MOVE $a3, $zero
    MOVE $a2, $s0
    LW $a1, 0x30+var_8($sp)
    MOVE $a0, $s6
    LA $t9, sub_51F198
    BAL sub_51F198
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522704
    LA $t9, sub_51D404
loc_5226D0:
    LI $v0, 0x71
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x10
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_522704:
    MOVE $a0, $s6
    BAL sub_51D404
    NOP 
    LW $gp, 0x30+var_18($sp)
    MOVE $a0, $v0
    LA $t9, sub_51D40C
    BAL sub_51D40C
    NOP 
    LW $gp, 0x30+var_18($sp)
    LI $v1, 0x196
    BNE $v0, $v1, loc_522790
    MOVE $a3, $zero
loc_522734:
    SW $s4, 0x30+var_20($sp)
    LW $a2, 0x30+var_C($sp)
    LW $a1, 0x30+var_8($sp)
    MOVE $a0, $s6
    LA $t9, sub_51E44C
    BAL sub_51E44C
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_5227EC
    MOVE $a3, $s4
loc_52275C:
    LI $v0, 0x78
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x10
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_522790:
    SW $s4, 0x30+var_20($sp)
    LW $a2, 0x30+var_C($sp)
    LW $a1, 0x30+var_8($sp)
    MOVE $a0, $s6
    LA $t9, sub_51E500
    BAL sub_51E500
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_5227EC
    MOVE $a3, $s4
loc_5227B8:
    LI $v0, 0x82
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 0x10
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_5227EC:
    MOVE $a2, $s3
    LW $a1, 0x30+var_C($sp)
    MOVE $a0, $fp
    LA $t9, sub_4E83D0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522844
    LA $t9, sub_4E7A8C
loc_522810:
    LI $v0, 0x88
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 3
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_522844:
    MOVE $a0, $fp
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522544
    MOVE $a0, $s6
loc_52285C:
    LA $t9, sub_51D41C
    BAL sub_51D41C
    NOP 
    LW $gp, 0x30+var_18($sp)
    BEQZ $v0, loc_5229B0
    LI $a1, 2
loc_522874:
    LW $a0, 0x30+var_C($sp)
    LA $t9, sub_4E7158
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_5228C4
    MOVE $a3, $s3
loc_522890:
    LI $v0, 0x95
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 3
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_5228C4:
    SW $s4, 0x30+var_20($sp)
    LW $a0, 0x30+var_C($sp)
    MOVE $a2, $a0
    MOVE $a1, $s3
    LA $t9, sub_4E8570
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522920
    LI $a1, 4
loc_5228EC:
    LI $v0, 0x99
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 3
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_522920:
    LW $s1, 0x30+var_C($sp)
    MOVE $a0, $s1
    LA $t9, sub_4E7C98
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    MOVE $a0, $s6
    LA $t9, sub_51D41C
    BAL sub_51D41C
    NOP 
    LW $gp, 0x30+var_18($sp)
    SW $v0, 0x30+var_1C($sp)
    SW $s4, 0x30+var_20($sp)
    MOVE $a3, $s3
    MOVE $a2, $s1
    MOVE $a1, $s0
    MOVE $a0, $s0
    LA $t9, sub_4E4C18
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522A0C
    LW $v0, 0x30+arg_C($sp)
loc_52297C:
    LI $v0, 0x9F
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 3
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_5229B0:
    MOVE $a3, $s4
    MOVE $a2, $s3
    MOVE $a1, $s0
    MOVE $a0, $s0
    LA $t9, sub_5EFAF8
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_522A0C
    LW $v0, 0x30+arg_C($sp)
loc_5229D8:
    LI $v0, 0xA4
    SW $v0, 0x30+var_20($sp)
    LA $a3, aCryptoEcEcdsaO
    LI $a2, 3
    LI $a1, 0xF8
    LI $a0, 0x10
    LA $t9, sub_531114
    BAL sub_531114
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A98
    MOVE $a0, $s0
loc_522A0C:
    LW $a0, 0($v0)
    LA $t9, sub_4E6C7C
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    LW $v0, 0x30+arg_8($sp)
    LW $a0, 0($v0)
    LA $t9, sub_4E6C7C
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    LW $v0, 0x30+arg_C($sp)
    SW $fp, 0($v0)
    LW $v0, 0x30+arg_8($sp)
    SW $s0, 0($v0)
    LI $s0, 1
loc_522A4C:
    BEQ $s4, $s7, loc_522A64
    MOVE $a0, $s4
loc_522A54:
    LA $t9, sub_4E3BC0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
loc_522A64:
    LW $a0, 0x30+var_8($sp)
    LA $t9, sub_51DA5C
    BAL sub_51DA5C
    NOP 
    LW $gp, 0x30+var_18($sp)
    LW $a0, 0x30+var_C($sp)
    LA $t9, sub_4E6C7C
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522AC8
    MOVE $v0, $s0
loc_522A94:
    MOVE $a0, $s0
loc_522A98:
    LA $t9, sub_4E6C7C
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    MOVE $a0, $fp
    LA $t9, sub_4E6C7C
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_18($sp)
    B loc_522A4C
    MOVE $s0, $zero
loc_522AC4:
    MOVE $v0, $s0
loc_522AC8:
    LW $ra, 0x30+var_s24($sp)
    LW $fp, 0x30+var_s20($sp)
    LW $s7, 0x30+var_s1C($sp)
    LW $s6, 0x30+var_s18($sp)
    LW $s5, 0x30+var_s14($sp)
    LW $s4, 0x30+var_s10($sp)
    LW $s3, 0x30+var_sC($sp)
    LW $s2, 0x30+var_s8($sp)
    LW $s1, 0x30+var_s4($sp)
    LW $s0, 0x30+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x58

=====

1, mips

######
EVP_get_pw_prompt:
loc_541030:
    LB $v0, byte_76EE20
    BEQZ $v0, locret_54104C
    NOP 
loc_541040:
    LUI $v0, 0x77
    JR $ra
    LA $v0, byte_76EE20
loc_54104C:
    JR $ra
    MOVE $v0, $zero

=====

1, mips

######
SRP_Calc_u:
loc_59DE70:
    ADDIU $sp, -0x20
    SW $ra, 0x1C+var_s0($sp)
    JAL sub_59DC70
    NOP 
    LW $ra, 0x1C+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x20

=====

1, mips

######
X509_NAME_get_index_by_OBJ:
loc_5C1C74:
    ADDIU $sp, -0x30
    SW $ra, 0x1C+var_s10($sp)
    SW $s3, 0x1C+var_sC($sp)
    SW $s2, 0x1C+var_s8($sp)
    SW $s1, 0x1C+var_s4($sp)
    SW $s0, 0x1C+var_s0($sp)
    LA $gp, unk_76F870
    BEQZ $a0, loc_5C1D2C
    SW $gp, 0x1C+var_C($sp)
loc_5C1C9C:
    MOVE $s3, $a1
    MOVE $s0, $a2
    SLTI $v1, $a2, 0
    LI $v0, 0xFFFFFFFF
    MOVN $s0, $v0, $v1
    LW $s1, 0($a0)
    MOVE $a0, $s1
    LA $t9, sub_5A10CC
    JALR $ra, $t9
    NOP 
    LW $gp, 0x1C+var_C($sp)
    MOVE $s2, $v0
    ADDIU $s0, 1
    SLT $v0, $s0, $v0
    BEQZ $v0, loc_5C1D30
    LI $v0, 0xFFFFFFFF
loc_5C1CDC:
    MOVE $a1, $s0
    MOVE $a0, $s1
    LA $t9, sub_5A10E4
    JALR $ra, $t9
    NOP 
    LW $gp, 0x1C+var_C($sp)
    MOVE $a1, $s3
    LW $a0, 0($v0)
    LA $t9, sub_560608
    JALR $ra, $t9
    NOP 
    LW $gp, 0x1C+var_C($sp)
    BEQZ $v0, loc_5C1D30
    MOVE $v0, $s0
loc_5C1D14:
    ADDIU $s0, 1
    SLT $v0, $s0, $s2
    BNEZ $v0, loc_5C1CDC
    LI $v0, 0xFFFFFFFF
loc_5C1D24:
    B loc_5C1D34
    LW $ra, 0x1C+var_s10($sp)
loc_5C1D2C:
    LI $v0, 0xFFFFFFFF
loc_5C1D30:
    LW $ra, 0x1C+var_s10($sp)
loc_5C1D34:
    LW $s3, 0x1C+var_sC($sp)
    LW $s2, 0x1C+var_s8($sp)
    LW $s1, 0x1C+var_s4($sp)
    LW $s0, 0x1C+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x30

=====

1, mips

######
UI_method_get_closer:
loc_5AE284:
    BEQZ $a0, locret_5AE294
    NOP 
loc_5AE28C:
    JR $ra
    LW $v0, 0x14($a0)
loc_5AE294:
    JR $ra
    MOVE $v0, $zero

=====

1, mips

######
eat_ws:
loc_5F6C08:
    MOVE $v0, $a1
    LW $a0, 4($a0)
    LBU $v1, 0($a1)
    SLL $v1, 1
    ADDU $v1, $a0, $v1
    LHU $v1, 0($v1)
    ANDI $v1, 0x18
    LI $a1, 0x10
    BNE $v1, $a1, locret_5F6C54
    NOP 
loc_5F6C30:
    ADDIU $v0, 1
loc_5F6C34:
    LBU $v1, 0($v0)
    SLL $v1, 1
    ADDU $v1, $a0, $v1
    LHU $v1, 0($v1)
    ANDI $v1, 0x18
    BEQ $v1, $a1, loc_5F6C34
    ADDIU $v0, 1
loc_5F6C50:
    ADDIU $v0, -1
loc_5F6C54:
    JR $ra
    NOP 

=====

1, mips

######
asn1_str2tag:
loc_4C50CC:
    ADDIU $sp, -0x30
    SW $ra, 0x18+var_s14($sp)
    SW $s4, 0x18+var_s10($sp)
    SW $s3, 0x18+var_sC($sp)
    SW $s2, 0x18+var_s8($sp)
    SW $s1, 0x18+var_s4($sp)
    SW $s0, 0x18+var_s0($sp)
    LA $gp, unk_76F870
    SW $gp, 0x18+var_8($sp)
    MOVE $s4, $a0
    LI $v0, 0xFFFFFFFF
    BNE $a1, $v0, loc_4C5118
    MOVE $s3, $a1
loc_4C5104:
    LA $t9, sub_64EA10
    JALR $ra, $t9
    NOP 
    LW $gp, 0x18+var_8($sp)
    MOVE $s3, $v0
loc_4C5118:
    LA $v0, off_7438A0
    LUI $v1, 0x77
    SW $v0, dword_76D780
    LI $s1, 0x31
    MOVE $s2, $v1
loc_4C5130:
    LW $s0, -0x2880($s2)
    LW $v0, 4($s0)
    BNE $s3, $v0, loc_4C516C
    MOVE $a2, $s3
loc_4C5140:
    MOVE $a1, $s4
    LW $a0, 0($s0)
    LA $t9, sub_64EAF0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x18+var_8($sp)
    BNEZ $v0, loc_4C5170
    ADDIU $s0, 0xC
loc_4C5160:
    ADDIU $s0, -0xC
    B loc_4C5180
    LW $v0, 8($s0)
loc_4C516C:
    ADDIU $s0, 0xC
loc_4C5170:
    ADDIU $s1, -1
    BNEZ $s1, loc_4C5130
    SW $s0, -0x2880($s2)
loc_4C517C:
    LI $v0, 0xFFFFFFFF
loc_4C5180:
    LW $ra, 0x18+var_s14($sp)
    LW $s4, 0x18+var_s10($sp)
    LW $s3, 0x18+var_sC($sp)
    LW $s2, 0x18+var_s8($sp)
    LW $s1, 0x18+var_s4($sp)
    LW $s0, 0x18+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x30

=====

2, mips

######
BIO_set_retry_reason:
loc_4C398C:
    JR $ra
    SW $a1, 0x1C($a0)

=====

2, mips

######
tls1_check_pkey_comp:
loc_49BEB8:
    LUI $gp, 0x74
    ADDIU $sp, -0x28
    LA $gp, unk_739870
    SW $ra, 0x18+var_sC($sp)
    SW $s2, 0x18+var_s8($sp)
    MOVE $s2, $a0
    SW $s1, 0x18+var_s4($sp)
    MOVE $a0, $a2
    SW $s0, 0x18+var_s0($sp)
    SW $gp, 0x18+var_8($sp)
    LA $t9, sub_5215A0
    JALR $ra, $t9
    MOVE $s1, $a1
    LW $gp, 0x18+var_8($sp)
    MOVE $a0, $v0
    LA $t9, sub_4FB650
    JALR $ra, $t9
    MOVE $s0, $v0
    MOVE $a0, $s0
    LW $gp, 0x18+var_8($sp)
    LA $t9, sub_4FBB34
    JALR $ra, $t9
    MOVE $s0, $v0
    LI $v1, 4
    BEQ $v0, $v1, loc_49BFA0
    LW $gp, 0x18+var_8($sp)
loc_49BF20:
    LW $v1, 0($s2)
    LW $v0, 0x64($v1)
    LW $v0, 0x30($v0)
    ANDI $v0, 8
    BNEZ $v0, loc_49BF6C
    LA $t9, sub_4FC9CC
loc_49BF38:
    LW $v0, 0($v1)
    SLTI $v1, $v0, 0x304
    BNEZ $v1, loc_49BF6C
    LUI $v1, 1
loc_49BF48:
    BEQ $v0, $v1, loc_49BF6C
    NOP 
loc_49BF50:
    LW $ra, 0x18+var_sC($sp)
loc_49BF54:
    MOVE $v0, $zero
loc_49BF58:
    LW $s2, 0x18+var_s8($sp)
    LW $s1, 0x18+var_s4($sp)
    LW $s0, 0x18+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_49BF6C:
    JALR $ra, $t9
    MOVE $a0, $s0
    LW $gp, 0x18+var_8($sp)
    LA $t9, sub_4FC9D4
    JALR $ra, $t9
    MOVE $a0, $v0
    LI $v1, 0x196
    BEQ $v0, $v1, loc_49C000
    LI $v1, 0x197
loc_49BF90:
    BNE $v0, $v1, loc_49BF54
    LW $ra, 0x18+var_sC($sp)
loc_49BF98:
    B loc_49BFA4
    LI $a1, 2
loc_49BFA0:
    MOVE $a1, $zero
loc_49BFA4:
    LW $v0, 0($s1)
    LW $v1, 0x11C($v0)
    BEQZ $v1, loc_49BFE8
    LW $ra, 0x18+var_sC($sp)
loc_49BFB4:
    LW $a0, 0x118($v0)
    BEQZ $a0, loc_49BF58
    MOVE $v0, $zero
loc_49BFC0:
    LBU $v0, 0($v1)
    BEQ $v0, $a1, loc_49BFE8
    ADDIU $v0, $v1, 1
loc_49BFCC:
    ADDU $a0, $v1, $a0
loc_49BFD0:
    BEQ $v0, $a0, loc_49BF50
    ADDIU $v0, 1
loc_49BFD8:
    LBU $v1, -1($v0)
    BNE $v1, $a1, loc_49BFD0
    NOP 
loc_49BFE4:
    LW $ra, 0x18+var_sC($sp)
loc_49BFE8:
    LI $v0, 1
    LW $s2, 0x18+var_s8($sp)
    LW $s1, 0x18+var_s4($sp)
    LW $s0, 0x18+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_49C000:
    B loc_49BFA4
    LI $a1, 1

=====

2, mips

######
SRP_user_pwd_free:
loc_5732D0:
    BEQZ $a0, locret_57336C
    LUI $gp, 0x74
loc_5732D8:
    ADDIU $sp, -0x28
    LA $gp, unk_739870
    SW $s0, 0x28+var_C($sp)
    MOVE $s0, $a0
    SW $ra, 0x28+var_4($sp)
    SW $s1, 0x28+var_8($sp)
    LUI $s1, 0x6C
    SW $gp, 0x28+var_18($sp)
    LA $t9, sub_4CBB74
    JALR $ra, $t9
    LW $a0, 4($a0)
    LW $gp, 0x28+var_18($sp)
    LA $t9, sub_4CBAC0
    JALR $ra, $t9
    LW $a0, 8($s0)
    ADDIU $a1, $s1, (aCryptoSrpSrpVf - 0x6C0000)
    LW $gp, 0x28+var_18($sp)
    LI $a2, 0x32
    LA $t9, sub_52E210
    JALR $ra, $t9
    LW $a0, 0($s0)
    ADDIU $a1, $s1, (aCryptoSrpSrpVf - 0x6C0000)
    LW $gp, 0x28+var_18($sp)
    LI $a2, 0x33
    LA $t9, sub_52E210
    JALR $ra, $t9
    LW $a0, 0x14($s0)
    ADDIU $a1, $s1, (aCryptoSrpSrpVf - 0x6C0000)
    LW $gp, 0x28+var_18($sp)
    MOVE $a0, $s0
    LW $ra, 0x28+var_4($sp)
    LI $a2, 0x34
    LW $s1, 0x28+var_8($sp)
    LW $s0, 0x28+var_C($sp)
    LA $t9, sub_52E210
    JR $t9
    ADDIU $sp, 0x28
loc_57336C:
    JR $ra
    NOP 

=====

2, mips

######
EVP_des_cfb1:
loc_517130:
    LUI $v0, 0x72
    JR $ra
    LA $v0, unk_723D08

=====

2, mips

######
CRYPTO_get_mem_functions:
loc_52E390:
    BEQZ $a0, loc_52E3A0
    LUI $v0, 0x73
loc_52E398:
    LW $v0, off_730008
    SW $v0, 0($a0)
loc_52E3A0:
    BEQZ $a1, loc_52E3B0
    LUI $v0, 0x73
loc_52E3A8:
    LW $v0, off_730004
    SW $v0, 0($a1)
loc_52E3B0:
    BEQZ $a2, locret_52E3C0
    LUI $v0, 0x73
loc_52E3B8:
    LW $v0, off_730000
    SW $v0, 0($a2)
loc_52E3C0:
    JR $ra
    NOP 

=====

2, mips

######
X509_CRL_get_ext_count:
loc_5871A0:
    LA $gp, unk_739870
    LA $t9, sub_58AB40
    B sub_58AB40
    LW $a0, 0x1C($a0)

=====

2, mips

######
BN_sub:
loc_5B5678:
    LUI $gp, 0x74
    LW $v0, 0xC($a1)
    ADDIU $sp, -0x30
    LA $gp, unk_739870
    SW $s2, 0x1C+var_s8($sp)
    MOVE $s2, $a0
    SW $s1, 0x1C+var_s4($sp)
    MOVE $s1, $a1
    SW $s0, 0x1C+var_s0($sp)
    MOVE $s0, $a2
    SW $ra, 0x1C+var_s10($sp)
    SW $s3, 0x1C+var_sC($sp)
    BEQZ $v0, loc_5B5738
    SW $gp, 0x1C+var_C($sp)
loc_5B56B0:
    LW $v0, 0xC($a2)
    BEQZ $v0, loc_5B5744
    LI $s3, 1
loc_5B56BC:
    MOVE $s1, $a2
    MOVE $s0, $a1
loc_5B56C4:
    LW $v0, 4($s1)
    MOVE $a0, $s2
    LW $v1, 4($s0)
    LA $t9, sub_4CCF10
    SLT $a1, $v1, $v0
    MOVZ $v0, $v1, $a1
    JALR $ra, $t9
    MOVE $a1, $v0
    BEQZ $v0, loc_5B5780
    LW $gp, 0x1C+var_C($sp)
loc_5B56EC:
    LA $t9, sub_4CC474
    MOVE $a1, $s0
    JALR $ra, $t9
    MOVE $a0, $s1
    BLTZ $v0, loc_5B57A0
    MOVE $a2, $s0
loc_5B5704:
    MOVE $a1, $s1
    JAL sub_5B53D4
    MOVE $a0, $s2
    BEQZ $v0, loc_5B5780
    LW $ra, 0x1C+var_s10($sp)
loc_5B5718:
    LI $v0, 1
    LW $s3, 0x1C+var_sC($sp)
    LW $s1, 0x1C+var_s4($sp)
    LW $s0, 0x1C+var_s0($sp)
    SW $zero, 0xC($s2)
    LW $s2, 0x1C+var_s8($sp)
    JR $ra
    ADDIU $sp, 0x30
loc_5B5738:
    LW $v0, 0xC($a2)
    BEQZ $v0, loc_5B56C4
    MOVE $s3, $zero
loc_5B5744:
    MOVE $a2, $s0
    MOVE $a1, $s1
    JAL sub_5B5280
    MOVE $a0, $s2
    BEQZ $v0, loc_5B5784
    MOVE $v0, $zero
loc_5B575C:
    LW $ra, 0x1C+var_s10($sp)
    LI $v0, 1
    LW $s1, 0x1C+var_s4($sp)
    LW $s0, 0x1C+var_s0($sp)
    SW $s3, 0xC($s2)
    LW $s3, 0x1C+var_sC($sp)
    LW $s2, 0x1C+var_s8($sp)
    JR $ra
    ADDIU $sp, 0x30
loc_5B5780:
    MOVE $v0, $zero
loc_5B5784:
    LW $ra, 0x1C+var_s10($sp)
    LW $s3, 0x1C+var_sC($sp)
    LW $s2, 0x1C+var_s8($sp)
    LW $s1, 0x1C+var_s4($sp)
    LW $s0, 0x1C+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x30
loc_5B57A0:
    MOVE $a2, $s1
    MOVE $a1, $s0
    JAL sub_5B53D4
    MOVE $a0, $s2
    BEQZ $v0, loc_5B5780
    LI $v1, 1
loc_5B57B8:
    LI $v0, 1
    B loc_5B5784
    SW $v1, 0xC($s2)

=====

2, mips

######
X509_CRL_free:
loc_5948FC:
    LUI $gp, 0x74
    LUI $a1, 0x72
    LA $gp, unk_739870
    LA $t9, sub_4B6734
    JR $t9
    LA $a1, unk_71827C

=====

2, mips

######
strcasecmp_l:
loc_61ADF0:
    BEQ $a0, $a1, locret_61AE40
    NOP 
loc_61ADF8:
    B loc_61AE08
    LW $a3, 0x38($a2)
loc_61AE00:
    BEQZ $a2, locret_61AE40
    NOP 
loc_61AE08:
    ADDIU $a1, 1
    LBU $a2, 0($a0)
    LBU $v1, -1($a1)
    SLL $v0, $a2, 2
    SLL $v1, 2
    ADDU $v0, $a3, $v0
    ADDU $v1, $a3, $v1
    LW $v0, 0($v0)
    LW $v1, 0($v1)
    SUBU $v0, $v1
    BEQZ $v0, loc_61AE00
    ADDIU $a0, 1
loc_61AE38:
    JR $ra
    NOP 
loc_61AE40:
    JR $ra
    MOVE $v0, $zero

=====

2, mips

######
X509_SIG_free:
loc_4BA0C8:
    LUI $gp, 0x74
    LUI $a1, 0x71
    LA $gp, unk_739870
    LA $t9, sub_4B6734
    B sub_4B6734
    LA $a1, unk_70E108

=====

3, mips

######
BN_is_prime_ex:
loc_4F92C8:
    LUI $gp, 0x7B
    ADDIU $sp, -0x58
    LA $gp, unk_7AC870
    SW $ra, 0x30+var_s24($sp)
    SW $fp, 0x30+var_s20($sp)
    MOVE $fp, $a3
    SW $s4, 0x30+var_s10($sp)
    MOVE $s4, $a1
    SW $s2, 0x30+var_s8($sp)
    MOVE $s2, $a2
    SW $s0, 0x30+var_s0($sp)
    MOVE $s0, $a0
    SW $gp, 0x30+var_18($sp)
    SW $s7, 0x30+var_s1C($sp)
    SW $s6, 0x30+var_s18($sp)
    SW $s5, 0x30+var_s14($sp)
    SW $s3, 0x30+var_sC($sp)
    LA $t9, sub_4F3864
    BAL sub_4F3864
    SW $s1, 0x30+var_s4($sp)
    MOVE $a0, $s0
    LW $gp, 0x30+var_18($sp)
    LA $t9, sub_4F4C64
    BAL sub_4F4C64
    MOVE $a1, $v0
    BLEZ $v0, loc_4F960C
    LW $gp, 0x30+var_18($sp)
loc_4F9334:
    BEQZ $s4, loc_4F9438
    LA $t9, sub_4F3900
loc_4F933C:
    LA $t9, sub_4F5594
    BAL sub_4F5594
    MOVE $a0, $s0
    BEQZ $v0, loc_4F9464
    LW $gp, 0x30+var_18($sp)
loc_4F9350:
    BEQZ $s2, loc_4F9640
    LA $t9, sub_4F0560
loc_4F9358:
    MOVE $s1, $s2
loc_4F935C:
    LA $t9, sub_4F0784
    BAL sub_4F0784
    MOVE $a0, $s1
    LW $gp, 0x30+var_18($sp)
    LA $t9, sub_4F096C
    BAL sub_4F096C
    MOVE $a0, $s1
    MOVE $a0, $s1
    LW $gp, 0x30+var_18($sp)
    LA $t9, sub_4F096C
    BAL sub_4F096C
    MOVE $s3, $v0
    MOVE $a0, $s1
    LW $gp, 0x30+var_18($sp)
    LA $t9, sub_4F096C
    BAL sub_4F096C
    SW $v0, 0x30+var_C($sp)
    LW $gp, 0x30+var_18($sp)
    BEQZ $v0, loc_4F93DC
    MOVE $s5, $v0
loc_4F93AC:
    LA $t9, sub_4F3FCC
    MOVE $a1, $s0
    BAL sub_4F3FCC
    MOVE $a0, $s3
    BEQZ $v0, loc_4F93DC
    LW $gp, 0x30+var_18($sp)
loc_4F93C4:
    LA $t9, sub_4FE6A8
    LI $a1, 1
    BAL sub_4FE6A8
    MOVE $a0, $s3
    BNEZ $v0, loc_4F94A0
    LW $gp, 0x30+var_18($sp)
loc_4F93DC:
    MOVE $s7, $zero
    LI $s0, 0xFFFFFFFF
loc_4F93E4:
    LA $t9, sub_4F08D8
    BAL sub_4F08D8
    MOVE $a0, $s1
    BEQZ $s2, loc_4F966C
    LW $gp, 0x30+var_18($sp)
loc_4F93F8:
    LA $t9, sub_4F6774
    BAL sub_4F6774
    MOVE $a0, $s7
    MOVE $v0, $s0
    LW $ra, 0x30+var_s24($sp)
    LW $fp, 0x30+var_s20($sp)
    LW $s7, 0x30+var_s1C($sp)
    LW $s6, 0x30+var_s18($sp)
    LW $s5, 0x30+var_s14($sp)
    LW $s4, 0x30+var_s10($sp)
    LW $s3, 0x30+var_sC($sp)
    LW $s2, 0x30+var_s8($sp)
    LW $s1, 0x30+var_s4($sp)
    LW $s0, 0x30+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x58
loc_4F9438:
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0x514
    BNEZ $v0, loc_4F95EC
    LW $gp, 0x30+var_18($sp)
loc_4F944C:
    LA $t9, sub_4F5594
    MOVE $a0, $s0
    BAL sub_4F5594
    LI $s4, 2
    BNEZ $v0, loc_4F9350
    LW $gp, 0x30+var_18($sp)
loc_4F9464:
    LW $ra, 0x30+var_s24($sp)
    MOVE $a0, $s0
    LW $fp, 0x30+var_s20($sp)
    LI $a1, 2
    LW $s7, 0x30+var_s1C($sp)
    LW $s6, 0x30+var_s18($sp)
    LW $s5, 0x30+var_s14($sp)
    LW $s4, 0x30+var_s10($sp)
    LW $s3, 0x30+var_sC($sp)
    LW $s2, 0x30+var_s8($sp)
    LW $s1, 0x30+var_s4($sp)
    LW $s0, 0x30+var_s0($sp)
    LA $t9, sub_4F5540
    B sub_4F5540
    ADDIU $sp, 0x58
loc_4F94A0:
    LA $t9, sub_4F5500
    BAL sub_4F5500
    MOVE $a0, $s3
    BNEZ $v0, loc_4F9660
    LW $gp, 0x30+var_18($sp)
loc_4F94B4:
    B loc_4F94C0
    LI $s6, 1
loc_4F94BC:
    ADDIU $s6, 1
loc_4F94C0:
    LA $t9, sub_4F4EF0
    MOVE $a1, $s6
    BAL sub_4F4EF0
    MOVE $a0, $s3
    BEQZ $v0, loc_4F94BC
    LW $gp, 0x30+var_18($sp)
loc_4F94D8:
    LA $t9, sub_4FDC90
    MOVE $a2, $s6
    LW $a0, 0x30+var_C($sp)
    BAL sub_4FDC90
    MOVE $a1, $s3
    BEQZ $v0, loc_4F93DC
    LW $gp, 0x30+var_18($sp)
loc_4F94F4:
    LA $t9, sub_4F667C
    BAL sub_4F667C
    NOP 
    LW $gp, 0x30+var_18($sp)
    BEQZ $v0, loc_4F93DC
    MOVE $s7, $v0
loc_4F950C:
    LA $t9, sub_4F680C
    MOVE $a2, $s1
    MOVE $a1, $s0
    BAL sub_4F680C
    MOVE $a0, $v0
    BEQZ $v0, loc_4F9730
    LW $gp, 0x30+var_18($sp)
loc_4F9528:
    BLEZ $s4, loc_4F95E4
    NOP 
loc_4F9530:
    SW $zero, 0x30+var_4($sp)
loc_4F9534:
    LA $t9, sub_4FCA1C
    MOVE $a1, $s3
    BAL sub_4FCA1C
    MOVE $a0, $s5
    BEQZ $v0, loc_4F9730
    LW $gp, 0x30+var_18($sp)
loc_4F954C:
    LA $t9, sub_4FE7E0
    LI $a1, 1
    BAL sub_4FE7E0
    MOVE $a0, $s5
    BEQZ $v0, loc_4F9730
    LW $gp, 0x30+var_18($sp)
loc_4F9564:
    LA $t9, sub_4F1D74
    MOVE $a3, $s0
    LW $a2, 0x30+var_C($sp)
    MOVE $a1, $s5
    SW $s7, 0x30+var_1C($sp)
    MOVE $a0, $s5
    BAL sub_4F1D74
    SW $s1, 0x30+var_20($sp)
    BEQZ $v0, loc_4F9730
    LW $gp, 0x30+var_18($sp)
loc_4F958C:
    LA $t9, sub_4F550C
    BAL sub_4F550C
    MOVE $a0, $s5
    BEQZ $v0, loc_4F96A0
    LW $gp, 0x30+var_18($sp)
loc_4F95A0:
    BEQZ $fp, loc_4F95D4
    LI $v1, 1
loc_4F95A8:
    LW $v0, 0x30+var_30($fp)
    BEQ $v0, $v1, loc_4F9738
    LI $v1, 2
loc_4F95B4:
    BNE $v0, $v1, loc_4F9730
    LI $a0, 1
loc_4F95BC:
    LW $t9, 0x30+var_28($fp)
    LW $a1, 0x30+var_4($sp)
    JALR $ra, $t9
    MOVE $a2, $fp
    BEQZ $v0, loc_4F9730
    LW $gp, 0x30+var_18($sp)
loc_4F95D4:
    LW $v0, 0x30+var_4($sp)
    ADDIU $v0, 1
    BNE $v0, $s4, loc_4F9534
    SW $v0, 0x30+var_4($sp)
loc_4F95E4:
    B loc_4F93E4
    LI $s0, 1
loc_4F95EC:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0x352
    BNEZ $v0, loc_4F9680
    LW $gp, 0x30+var_18($sp)
loc_4F9604:
    B loc_4F933C
    LI $s4, 3
loc_4F960C:
    LW $ra, 0x30+var_s24($sp)
    MOVE $v0, $zero
    LW $fp, 0x30+var_s20($sp)
    LW $s7, 0x30+var_s1C($sp)
    LW $s6, 0x30+var_s18($sp)
    LW $s5, 0x30+var_s14($sp)
    LW $s4, 0x30+var_s10($sp)
    LW $s3, 0x30+var_sC($sp)
    LW $s2, 0x30+var_s8($sp)
    LW $s1, 0x30+var_s4($sp)
    LW $s0, 0x30+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x58
loc_4F9640:
    BAL sub_4F0560
    NOP 
    LW $gp, 0x30+var_18($sp)
    BNEZ $v0, loc_4F935C
    MOVE $s1, $v0
loc_4F9654:
    LI $s0, 0xFFFFFFFF
    B loc_4F93F8
    MOVE $s7, $zero
loc_4F9660:
    MOVE $s7, $zero
    B loc_4F93E4
    MOVE $s0, $zero
loc_4F966C:
    LA $t9, sub_4F0698
    BAL sub_4F0698
    MOVE $a0, $s1
    B loc_4F93F8
    LW $gp, 0x30+var_18($sp)
loc_4F9680:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0x28A
    BNEZ $v0, loc_4F9758
    LW $gp, 0x30+var_18($sp)
loc_4F9698:
    B loc_4F933C
    LI $s4, 4
loc_4F96A0:
    LA $t9, sub_4F4C64
    MOVE $a1, $s3
    BAL sub_4F4C64
    MOVE $a0, $s5
    BEQZ $v0, loc_4F95A0
    LW $gp, 0x30+var_18($sp)
loc_4F96B8:
    B loc_4F970C
    SW $s6, 0x30+var_8($sp)
loc_4F96C0:
    SW $s1, 0x30+var_20($sp)
    MOVE $a3, $s0
    BAL sub_4F5C3C
    MOVE $a2, $s5
    MOVE $a0, $s5
    LW $gp, 0x30+var_18($sp)
    BEQZ $v0, loc_4F9730
    LA $t9, sub_4F550C
loc_4F96E0:
    BAL sub_4F550C
    NOP 
    MOVE $a1, $s3
    LW $gp, 0x30+var_18($sp)
    MOVE $a0, $s5
    BNEZ $v0, loc_4F9728
    LA $t9, sub_4F4C64
loc_4F96FC:
    BAL sub_4F4C64
    NOP 
    BEQZ $v0, loc_4F95A0
    LW $gp, 0x30+var_18($sp)
loc_4F970C:
    LW $v0, 0x30+var_8($sp)
    MOVE $a1, $s5
    LA $t9, sub_4F5C3C
    MOVE $a0, $s5
    ADDIU $v0, -1
    BNEZ $v0, loc_4F96C0
    SW $v0, 0x30+var_8($sp)
loc_4F9728:
    B loc_4F93E4
    MOVE $s0, $zero
loc_4F9730:
    B loc_4F93E4
    LI $s0, 0xFFFFFFFF
loc_4F9738:
    LW $t9, 0x30+var_28($fp)
    BEQZ $t9, loc_4F95D4
    LI $a0, 1
loc_4F9744:
    LW $a2, 0x30+var_2C($fp)
    JALR $ra, $t9
    LW $a1, 0x30+var_4($sp)
    B loc_4F95D4
    LW $gp, 0x30+var_18($sp)
loc_4F9758:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0x226
    BNEZ $v0, loc_4F9778
    LW $gp, 0x30+var_18($sp)
loc_4F9770:
    B loc_4F933C
    LI $s4, 5
loc_4F9778:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0x1C2
    BNEZ $v0, loc_4F9798
    LW $gp, 0x30+var_18($sp)
loc_4F9790:
    B loc_4F933C
    LI $s4, 6
loc_4F9798:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0x190
    BNEZ $v0, loc_4F97B8
    LW $gp, 0x30+var_18($sp)
loc_4F97B0:
    B loc_4F933C
    LI $s4, 7
loc_4F97B8:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0x15E
    BNEZ $v0, loc_4F97D8
    LW $gp, 0x30+var_18($sp)
loc_4F97D0:
    B loc_4F933C
    LI $s4, 8
loc_4F97D8:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0x12C
    BNEZ $v0, loc_4F97F8
    LW $gp, 0x30+var_18($sp)
loc_4F97F0:
    B loc_4F933C
    LI $s4, 9
loc_4F97F8:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0xFA
    BNEZ $v0, loc_4F9818
    LW $gp, 0x30+var_18($sp)
loc_4F9810:
    B loc_4F933C
    LI $s4, 0xC
loc_4F9818:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    SLTI $v0, 0xC8
    BNEZ $v0, loc_4F9838
    LW $gp, 0x30+var_18($sp)
loc_4F9830:
    B loc_4F933C
    LI $s4, 0xF
loc_4F9838:
    LA $t9, sub_4F3900
    BAL sub_4F3900
    MOVE $a0, $s0
    LI $v1, 0x1B
    LI $a0, 0x12
    LW $gp, 0x30+var_18($sp)
    SLTI $v0, 0x96
    MOVZ $v1, $a0, $v0
    B loc_4F933C
    MOVE $s4, $v1

=====

3, mips

######
c2i_ibuf:
loc_4BF1F0:
    LUI $gp, 0x7B
    ADDIU $sp, -0x28
    LA $gp, unk_7AC870
    SW $ra, 0x24+var_s0($sp)
    BEQZ $a3, loc_4BF304
    SW $gp, 0x24+var_C($sp)
loc_4BF208:
    LBU $t0, 0($a2)
    ANDI $t0, 0x80
    BEQZ $a1, loc_4BF21C
    ANDI $t0, 0xFF
loc_4BF218:
    SW $t0, 0($a1)
loc_4BF21C:
    LI $v0, 1
    BEQ $a3, $v0, loc_4BF2E0
    NOP 
loc_4BF228:
    LBU $v0, 0($a2)
    BEQZ $v0, loc_4BF2B8
    LI $v1, 0xFF
loc_4BF234:
    BEQ $v0, $v1, loc_4BF28C
    MOVE $v0, $zero
loc_4BF23C:
    BEQZ $a0, loc_4BF280
    SUBU $v0, $a3, $v0
loc_4BF244:
    BEQZ $t0, loc_4BF254
    MOVE $a1, $zero
loc_4BF24C:
    LI $a1, 1
    LI $t0, 0xFF
loc_4BF254:
    ADDU $a2, $a3
    ADDU $a0, $v0
    SUBU $a3, $a2, $v0
loc_4BF260:
    ADDIU $a2, -1
    LBU $v1, 0($a2)
    ADDIU $a0, -1
    XOR $v1, $t0, $v1
    ADDU $v1, $a1
    SRL $a1, $v1, 8
    BNE $a2, $a3, loc_4BF260
    SB $v1, 0($a0)
loc_4BF280:
    LW $ra, 0x24+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_4BF28C:
    ADDIU $v1, $a2, 1
    LI $v0, 1
    MOVE $a1, $zero
loc_4BF298:
    LBU $t2, 0($v1)
    ADDIU $v0, 1
    ADDIU $v1, 1
    SLTU $t1, $v0, $a3
    BNEZ $t1, loc_4BF298
    OR $a1, $t2
loc_4BF2B0:
    BEQZ $a1, loc_4BF23C
    MOVE $v0, $zero
loc_4BF2B8:
    LBU $v1, 1($a2)
    ANDI $v1, 0x80
    BNE $t0, $v1, loc_4BF23C
    LI $v0, 1
loc_4BF2C8:
    LUI $a3, 0x71
    LA $t9, sub_5461DC
    LI $a2, 0xDD
    LA $a3, aCryptoAsn1AInt
    B loc_4BF318
    LI $v0, 0xBB
loc_4BF2E0:
    BEQZ $a0, loc_4BF34C
    NOP 
loc_4BF2E8:
    BEQZ $t0, loc_4BF338
    LBU $v1, 0($a2)
loc_4BF2F0:
    NEGU $v1, $v1
    SB $v1, 0($a0)
    LW $ra, 0x24+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_4BF304:
    LUI $a3, 0x71
    LA $t9, sub_5461DC
    LI $a2, 0xDE
    LA $a3, aCryptoAsn1AInt
    LI $v0, 0x9A
loc_4BF318:
    LI $a1, 0xE2
    SW $v0, 0x24+var_14($sp)
    JALR $ra, $t9
    LI $a0, 0xD
    MOVE $v0, $zero
    LW $ra, 0x24+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_4BF338:
    SB $v1, 0($a0)
    LI $v0, 1
    LW $ra, 0x24+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_4BF34C:
    B loc_4BF280
    LI $v0, 1

=====

3, mips

######
X509at_add1_attr_by_NID:
loc_5E4E80:
    LUI $gp, 0x7B
    ADDIU $sp, -0x38
    LA $gp, unk_7AC870
    SW $s4, 0x20+var_s10($sp)
    MOVE $s4, $a3
    SW $s3, 0x20+var_sC($sp)
    MOVE $s3, $a2
    SW $s2, 0x20+var_s8($sp)
    MOVE $s2, $a0
    SW $gp, 0x20+var_8($sp)
    MOVE $a0, $a1
    SW $ra, 0x20+var_s14($sp)
    SW $s1, 0x20+var_s4($sp)
    LA $t9, sub_5850B4
    JALR $ra, $t9
    SW $s0, 0x20+var_s0($sp)
    BEQZ $v0, loc_5E5058
    LW $gp, 0x20+var_8($sp)
loc_5E4EC8:
    LA $t9, sub_5F6140
    BAL sub_5F6140
    MOVE $s1, $v0
    LW $gp, 0x20+var_8($sp)
    BEQZ $v0, loc_5E5088
    MOVE $s0, $v0
loc_5E4EE0:
    LA $t9, sub_4C1FBC
    JALR $ra, $t9
    LW $a0, 0($v0)
    LW $gp, 0x20+var_8($sp)
    LA $t9, sub_586AD0
    JALR $ra, $t9
    MOVE $a0, $s1
    LW $gp, 0x20+var_8($sp)
    BNEZ $v0, loc_5E4F4C
    SW $v0, 0($s0)
loc_5E4F08:
    LA $t9, sub_5F6158
    BAL sub_5F6158
    MOVE $a0, $s0
    LW $gp, 0x20+var_8($sp)
loc_5E4F18:
    LA $t9, sub_4C1FBC
    MOVE $a0, $s1
    JALR $ra, $t9
    MOVE $s1, $zero
    LW $ra, 0x20+var_s14($sp)
loc_5E4F2C:
    MOVE $v0, $s1
    LW $s4, 0x20+var_s10($sp)
    LW $s3, 0x20+var_sC($sp)
    LW $s2, 0x20+var_s8($sp)
    LW $s1, 0x20+var_s4($sp)
    LW $s0, 0x20+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x38
loc_5E4F4C:
    LW $a3, 0x20+arg_10($sp)
    MOVE $a2, $s4
    MOVE $a1, $s3
    JAL sub_5E45B0
    MOVE $a0, $s0
    BEQZ $v0, loc_5E4F08
    LW $gp, 0x20+var_8($sp)
loc_5E4F68:
    BEQZ $s2, loc_5E50B4
    LI $v0, 0x50
loc_5E4F70:
    LW $s1, 0($s2)
    BEQZ $s1, loc_5E4FE8
    LA $t9, sub_5CE94C
loc_5E4F7C:
    LA $t9, sub_5F6170
    BAL sub_5F6170
    MOVE $a0, $s0
    LW $gp, 0x20+var_8($sp)
    BEQZ $v0, loc_5E5028
    MOVE $s3, $v0
loc_5E4F94:
    LA $t9, sub_5CF084
    MOVE $a1, $v0
    BAL sub_5CF084
    MOVE $a0, $s1
    BEQZ $v0, loc_5E5000
    LW $gp, 0x20+var_8($sp)
loc_5E4FAC:
    LW $v0, 0($s2)
    BEQZ $v0, loc_5E5050
    NOP 
loc_5E4FB8:
    LA $t9, sub_5F6158
    BAL sub_5F6158
    MOVE $a0, $s0
    MOVE $v0, $s1
    LW $ra, 0x20+var_s14($sp)
    LW $s4, 0x20+var_s10($sp)
    LW $s3, 0x20+var_sC($sp)
    LW $s2, 0x20+var_s8($sp)
    LW $s1, 0x20+var_s4($sp)
    LW $s0, 0x20+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x38
loc_5E4FE8:
    BAL sub_5CE94C
    NOP 
    LW $gp, 0x20+var_8($sp)
    BNEZ $v0, loc_5E4F7C
    MOVE $s1, $v0
loc_5E4FFC:
    MOVE $s3, $zero
loc_5E5000:
    LI $v0, 0x62
    LA $t9, sub_5461DC
    LUI $a3, 0x73
    LI $a2, 0x41
    LA $a3, aCryptoX509X509_2
    SW $v0, 0x20+var_10($sp)
    LI $a1, 0x87
    JALR $ra, $t9
    LI $a0, 0xB
    LW $gp, 0x20+var_8($sp)
loc_5E5028:
    LA $t9, sub_5F6158
    BAL sub_5F6158
    MOVE $a0, $s3
    MOVE $a0, $s1
    LW $gp, 0x20+var_8($sp)
    LA $t9, sub_5CF610
    BAL sub_5CF610
    MOVE $s1, $zero
    B loc_5E4FB8
    LW $gp, 0x20+var_8($sp)
loc_5E5050:
    B loc_5E4FB8
    SW $s1, 0($s2)
loc_5E5058:
    LI $v0, 0xB1
    LA $t9, sub_5461DC
    LUI $a3, 0x73
    LI $a2, 0x6D
    LA $a3, aCryptoX509X509_2
    SW $v0, 0x20+var_10($sp)
    LI $a1, 0x88
    LI $a0, 0xB
    JALR $ra, $t9
    MOVE $s1, $zero
    B loc_5E4F2C
    LW $ra, 0x20+var_s14($sp)
loc_5E5088:
    LI $v0, 0xC4
    LA $t9, sub_5461DC
    LUI $a3, 0x73
    LI $a2, 0x41
    LA $a3, aCryptoX509X509_2
    SW $v0, 0x20+var_10($sp)
    LI $a1, 0x89
    JALR $ra, $t9
    LI $a0, 0xB
    B loc_5E4F18
    LW $gp, 0x20+var_8($sp)
loc_5E50B4:
    LA $t9, sub_5461DC
    LUI $a3, 0x73
    LI $a2, 0x43
    LA $a3, aCryptoX509X509_2
    SW $v0, 0x20+var_10($sp)
    LI $a1, 0x87
    LI $a0, 0xB
    JALR $ra, $t9
    MOVE $s1, $zero
    MOVE $s3, $zero
    B loc_5E5028
    LW $gp, 0x20+var_8($sp)

=====

3, mips

######
EVP_PKEY_paramgen_init:
loc_566F0C:
    LUI $gp, 0x7B
    ADDIU $sp, -0x28
    LA $gp, unk_7AC870
    SW $ra, 0x20+var_s4($sp)
    SW $s0, 0x20+var_s0($sp)
    BEQZ $a0, loc_566F94
    SW $gp, 0x20+var_8($sp)
loc_566F28:
    LW $v0, 0($a0)
    BEQZ $v0, loc_566F94
    MOVE $s0, $a0
loc_566F34:
    LW $v1, 0x18($v0)
    BEQZ $v1, loc_566F94
    NOP 
loc_566F40:
    LW $t9, 0x14($v0)
    LI $v0, 2
    BEQZ $t9, loc_566F80
    SW $v0, 0x10($a0)
loc_566F50:
    JALR $ra, $t9
    NOP 
    BLEZ $v0, loc_566F70
    LW $ra, 0x20+var_s4($sp)
loc_566F60:
    LW $ra, 0x20+var_s4($sp)
    LW $s0, 0x20+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_566F70:
    SW $zero, 0x10($s0)
    LW $s0, 0x20+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_566F80:
    LW $ra, 0x20+var_s4($sp)
    LI $v0, 1
    LW $s0, 0x20+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x28
loc_566F94:
    LI $v0, 0x18
    LA $t9, sub_5461DC
    LUI $a3, 0x72
    LI $a2, 0x96
    LA $a3, aCryptoEvpPmeth_0
    SW $v0, 0x20+var_10($sp)
    LI $a1, 0x95
    JALR $ra, $t9
    LI $a0, 6
    B loc_566F60
    LI $v0, 0xFFFFFFFE

=====

3, mips

######
PEM_read_bio_ex:
loc_590AFC:
    LUI $gp, 0x7B
    ADDIU $sp, -0x88
    LA $gp, unk_7AC870
    SW $s3, 0x60+var_sC($sp)
    MOVE $s3, $a0
    SW $s2, 0x60+var_s8($sp)
    LA $v0, dword_79925C
    LW $v1, 0x60+arg_10($sp)
    LA $t9, sub_559820
    LW $s2, 0x60+arg_14($sp)
    SW $v0, 0x60+var_2C($sp)
    SW $gp, 0x60+var_48($sp)
    SW $ra, 0x60+var_s24($sp)
    SW $fp, 0x60+var_s20($sp)
    SW $s7, 0x60+var_s1C($sp)
    SW $s6, 0x60+var_s18($sp)
    SW $s5, 0x60+var_s14($sp)
    SW $s4, 0x60+var_s10($sp)
    SW $s1, 0x60+var_s4($sp)
    SW $s0, 0x60+var_s0($sp)
    SW $a1, 0x60+var_24($sp)
    SW $a2, 0x60+var_28($sp)
    SW $v1, 0x60+var_20($sp)
    SW $a3, 0x60+var_30($sp)
    LW $v0, (dword_79925C - 0x79925C)($v0)
    SW $v0, 0x60+var_4($sp)
    JALR $ra, $t9
    NOP 
    LW $gp, 0x60+var_48($sp)
    BEQZ $v0, loc_5910F4
    SW $v0, 0x60+var_38($sp)
loc_590B78:
    LW $v0, 0x60+var_20($sp)
    LI $v1, 6
    LW $a0, 0x60+var_28($sp)
    SW $zero, 0($v0)
    ANDI $v0, $s2, 6
    SW $zero, 0($a0)
    LW $a0, 0x60+var_24($sp)
    SW $zero, 0($a0)
    LW $a0, 0x60+var_30($sp)
    BEQ $v0, $v1, loc_591068
    SW $zero, 0($a0)
loc_590BA4:
    ANDI $fp, $s2, 1
    BNEZ $fp, loc_590E38
    LA $t9, sub_4EFBEC
loc_590BB0:
    LA $t9, sub_4EFBE0
    JALR $ra, $t9
    NOP 
    LW $gp, 0x60+var_48($sp)
    MOVE $s0, $v0
loc_590BC4:
    LA $t9, sub_4E6710
    JALR $ra, $t9
    MOVE $a0, $s0
    MOVE $a0, $s0
    LW $gp, 0x60+var_48($sp)
    MOVE $s0, $v0
    LA $t9, sub_4E6710
    JALR $ra, $t9
    SW $v0, 0x60+var_34($sp)
    LW $gp, 0x60+var_48($sp)
    BEQZ $s0, loc_590F20
    SW $v0, 0x60+var_3C($sp)
loc_590BF4:
    BEQZ $v0, loc_590F24
    LI $v0, 0x395
loc_590BFC:
    BNEZ $fp, loc_590F84
    LUI $s6, 0x73
loc_590C04:
    LA $t9, sub_57391C
    LI $a2, 0xEA
loc_590C0C:
    ADDIU $a1, $s6, (aCryptoPemPemLi - 0x730000)
    JALR $ra, $t9
    LI $a0, 0x100
    LW $gp, 0x60+var_48($sp)
    BEQZ $v0, loc_591190
    MOVE $s0, $v0
loc_590C24:
    LUI $v0, 0x73
    LUI $s4, 0x73
    LA $v0, asc_7302C4
    LI $s5, 0xFFFFFFFB
    LA $s4, aBegin_0
    SW $v0, 0x60+var_40($sp)
loc_590C3C:
    LA $t9, sub_4E77FC
loc_590C40:
    LI $a2, 0xFF
    MOVE $a1, $s0
    JALR $ra, $t9
    MOVE $a0, $s3
    BEQZ $v0, loc_590E4C
    LW $gp, 0x60+var_48($sp)
loc_590C58:
    MOVE $a1, $v0
    MOVE $a0, $s0
    JAL sub_58EDC0
    AND $a2, $s2, $s5
    LI $a2, 0xB
    LW $gp, 0x60+var_48($sp)
    MOVE $a1, $s4
    MOVE $a0, $s0
    LA $t9, sub_68C320
    JALR $ra, $t9
    MOVE $s1, $v0
    BNEZ $v0, loc_590C3C
    LW $gp, 0x60+var_48($sp)
loc_590C8C:
    SLTIU $v0, $s1, 6
    BNEZ $v0, loc_590C40
    LA $t9, sub_4E77FC
loc_590C98:
    ADDIU $v1, $s1, -6
    LA $t9, sub_68C320
    LW $a1, 0x60+var_40($sp)
    LI $a2, 6
    ADDU $s7, $s0, $v1
    JALR $ra, $t9
    MOVE $a0, $s7
    BNEZ $v0, loc_590C3C
    LW $gp, 0x60+var_48($sp)
loc_590CBC:
    SB $zero, 0($s7)
    BNEZ $fp, loc_59115C
    ADDIU $s1, -0x10
loc_590CC8:
    LA $t9, sub_57391C
    LI $a2, 0xEA
loc_590CD0:
    ADDIU $a1, $s6, 0x194
    JALR $ra, $t9
    MOVE $a0, $s1
    LW $gp, 0x60+var_48($sp)
    BEQZ $v0, loc_591344
    MOVE $s5, $v0
loc_590CE8:
    LA $t9, sub_68DA50
    ADDIU $a1, $s0, 0xB
    MOVE $a2, $s1
    JALR $ra, $t9
    MOVE $a0, $v0
    BEQZ $fp, loc_5910D0
    LW $gp, 0x60+var_48($sp)
loc_590D04:
    LA $t9, sub_575994
    ADDIU $a2, $s6, 0x194
    LI $a3, 0xE2
    LI $a1, 0x100
    BAL sub_575994
    MOVE $a0, $s0
    LI $a2, 0xE9
    LW $gp, 0x60+var_48($sp)
    LA $t9, sub_57507C
loc_590D28:
    ADDIU $a1, $s6, 0x194
    JALR $ra, $t9
    LI $a0, 0x100
    LW $gp, 0x60+var_48($sp)
    BEQZ $v0, loc_5914A4
    MOVE $s0, $v0
loc_590D40:
    LW $v0, 0x60+var_34($sp)
    MOVE $s1, $zero
    SW $zero, 0x60+var_1C($sp)
    SW $v0, 0x60+var_40($sp)
    LI $v0, 0xFFFFFFFB
    AND $v0, $s2, $v0
    SW $v0, 0x60+var_14($sp)
    LA $v0, aEnd_0
    SW $v0, 0x60+var_18($sp)
loc_590D68:
    LA $t9, sub_4E77FC
loc_590D6C:
    LI $a2, 0xFF
    MOVE $a1, $s0
    JALR $ra, $t9
    MOVE $a0, $s3
    LW $gp, 0x60+var_48($sp)
    BLEZ $v0, loc_591168
    MOVE $s4, $v0
loc_590D88:
    BNEZ $s1, loc_590F90
    LA $t9, sub_68C320
loc_590D90:
    LA $t9, sub_68D100
    LI $a1, 0x3A
    MOVE $a2, $v0
    JALR $ra, $t9
    MOVE $a0, $s0
    BEQZ $v0, loc_5910A8
    LW $gp, 0x60+var_48($sp)
loc_590DAC:
    LI $s1, 1
    LW $a2, 0x60+var_14($sp)
loc_590DB4:
    MOVE $a1, $s4
loc_590DB8:
    JAL sub_58EDC0
    MOVE $a0, $s0
    LB $v1, 0($s0)
    MOVE $s4, $v0
    LI $v0, 0xA
    BEQ $v1, $v0, loc_591000
    LW $gp, 0x60+var_48($sp)
loc_590DD4:
    LUI $s7, 0x73
loc_590DD8:
    LA $t9, sub_68C320
    LI $a2, 9
    ADDIU $a1, $s7, (aEnd_0 - 0x730000)
    JALR $ra, $t9
    MOVE $a0, $s0
    BEQZ $v0, loc_5911BC
    LW $gp, 0x60+var_48($sp)
loc_590DF4:
    LW $v0, 0x60+var_1C($sp)
    BNEZ $v0, loc_59131C
    LA $t9, sub_4E75B8
loc_590E00:
    MOVE $a1, $s0
    JALR $ra, $t9
    LW $a0, 0x60+var_40($sp)
    BLTZ $v0, loc_591034
    LW $gp, 0x60+var_48($sp)
loc_590E14:
    LI $v0, 2
    BNE $s1, $v0, loc_590D6C
    LA $t9, sub_4E77FC
loc_590E20:
    SLTI $v0, $s4, 0x42
    BEQZ $v0, loc_591034
    XORI $s4, 0x41
loc_590E2C:
    SLTU $v0, $zero, $s4
    B loc_590D6C
    SW $v0, 0x60+var_1C($sp)
loc_590E38:
    JALR $ra, $t9
    NOP 
    LW $gp, 0x60+var_48($sp)
    B loc_590BC4
    MOVE $s0, $v0
loc_590E4C:
    LI $v0, 0x2EC
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, 0x194
    LI $a2, 0x6C
    LI $a1, 0x90
    SW $v0, 0x60+var_50($sp)
    JALR $ra, $t9
    LI $a0, 9
    LW $gp, 0x60+var_48($sp)
loc_590E70:
    BNEZ $fp, loc_591124
    LA $t9, sub_5738E0
loc_590E78:
    LI $a2, 0xE4
    ADDIU $a1, $s6, 0x194
    BAL sub_5738E0
    MOVE $a0, $s0
    MOVE $s5, $zero
    LW $gp, 0x60+var_48($sp)
    MOVE $s0, $zero
    LA $t9, sub_559840
    JALR $ra, $t9
    LW $a0, 0x60+var_38($sp)
    LW $gp, 0x60+var_48($sp)
loc_590EA4:
    LA $t9, sub_5738E0
    LI $a2, 0xE4
    ADDIU $a1, $s6, 0x194
    BAL sub_5738E0
    MOVE $a0, $s5
    LW $gp, 0x60+var_48($sp)
loc_590EBC:
    LA $t9, sub_4E68F8
    JALR $ra, $t9
    LW $a0, 0x60+var_34($sp)
    LW $gp, 0x60+var_48($sp)
    LA $t9, sub_4E68F8
    JALR $ra, $t9
    LW $a0, 0x60+var_3C($sp)
    MOVE $v0, $s0
    LW $gp, 0x60+var_48($sp)
loc_590EE0:
    LW $v1, 0x60+var_2C($sp)
    LW $a0, 0x60+var_4($sp)
    LW $v1, 0($v1)
    BNE $a0, $v1, loc_591580
    LW $ra, 0x60+var_s24($sp)
loc_590EF4:
    LW $fp, 0x60+var_s20($sp)
    LW $s7, 0x60+var_s1C($sp)
    LW $s6, 0x60+var_s18($sp)
    LW $s5, 0x60+var_s14($sp)
    LW $s4, 0x60+var_s10($sp)
    LW $s3, 0x60+var_sC($sp)
    LW $s2, 0x60+var_s8($sp)
    LW $s1, 0x60+var_s4($sp)
    LW $s0, 0x60+var_s0($sp)
    JR $ra
    ADDIU $sp, 0x88
loc_590F20:
    LI $v0, 0x395
loc_590F24:
    LA $t9, sub_5461DC
    LUI $s6, 0x73
    LI $a2, 0x41
    ADDIU $a3, $s6, (aCryptoPemPemLi - 0x730000)
    SW $v0, 0x60+var_50($sp)
    LI $a1, 0x91
    LI $a0, 9
    JALR $ra, $t9
    MOVE $s5, $zero
    MOVE $s0, $zero
    LW $gp, 0x60+var_48($sp)
loc_590F50:
    LA $t9, sub_559840
    JALR $ra, $t9
    LW $a0, 0x60+var_38($sp)
    BEQZ $fp, loc_590EA4
    LW $gp, 0x60+var_48($sp)
loc_590F64:
    LA $t9, sub_575994
    LI $a3, 0xE2
    ADDIU $a2, $s6, 0x194
    MOVE $a1, $zero
    BAL sub_575994
    MOVE $a0, $s5
    B loc_590EBC
    LW $gp, 0x60+var_48($sp)
loc_590F84:
    LA $t9, sub_57507C
    B loc_590C0C
    LI $a2, 0xE9
loc_590F90:
    LI $a2, 9
    LW $a1, 0x60+var_18($sp)
    MOVE $a0, $s0
    JALR $ra, $t9
    LUI $s7, 0x73
    BEQZ $v0, loc_590FF8
    LI $v0, 1
loc_590FAC:
    BEQ $s1, $v0, loc_590DB4
    LW $a2, 0x60+var_14($sp)
loc_590FB4:
    LI $s1, 2
loc_590FB8:
    LI $a2, 0xFFFFFFFF
loc_590FBC:
    MOVE $a1, $s4
    AND $a2, $s2, $a2
    JAL sub_58EDC0
    MOVE $a0, $s0
    LB $v1, 0($s0)
    MOVE $s4, $v0
    LI $v0, 0xA
    BNE $v1, $v0, loc_590DD8
    LW $gp, 0x60+var_48($sp)
loc_590FE0:
    LI $v0, 2
    BEQ $s1, $v0, loc_591010
    LW $v0, 0x60+var_3C($sp)
loc_590FEC:
    LI $s1, 2
    B loc_590D68
    SW $v0, 0x60+var_40($sp)
loc_590FF8:
    B loc_590FBC
    LI $a2, 0xFFFFFFFB
loc_591000:
    LW $v0, 0x60+var_3C($sp)
    LI $s1, 2
    B loc_590D68
    SW $v0, 0x60+var_40($sp)
loc_591010:
    LI $v0, 0x33F
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, 0x194
    LI $a2, 0x66
    LI $a1, 0x8F
    SW $v0, 0x60+var_50($sp)
    JALR $ra, $t9
    LI $a0, 9
    LW $gp, 0x60+var_48($sp)
loc_591034:
    BNEZ $fp, loc_59136C
    LA $t9, sub_5738E0
loc_59103C:
    LI $a2, 0xE4
    ADDIU $a1, $s6, 0x194
    MOVE $a0, $s0
loc_591048:
    BAL sub_5738E0
    MOVE $s0, $zero
    LW $gp, 0x60+var_48($sp)
    LA $t9, sub_559840
    JALR $ra, $t9
    LW $a0, 0x60+var_38($sp)
    B loc_590EA4
    LW $gp, 0x60+var_48($sp)
loc_591068:
    LI $v0, 0x38D
    LA $t9, sub_5461DC
    LUI $s6, 0x73
    LI $a2, 7
    ADDIU $a3, $s6, (aCryptoPemPemLi - 0x730000)
    SW $v0, 0x60+var_50($sp)
    LI $a1, 0x91
    LI $a0, 9
    JALR $ra, $t9
    ANDI $fp, $s2, 1
    MOVE $s5, $zero
    LW $gp, 0x60+var_48($sp)
    MOVE $s0, $zero
    SW $zero, 0x60+var_3C($sp)
    B loc_590F50
    SW $zero, 0x60+var_34($sp)
loc_5910A8:
    LA $t9, sub_68C320
    LI $a2, 9
    LW $a1, 0x60+var_18($sp)
    MOVE $a0, $s0
    JALR $ra, $t9
    LUI $s7, 0x73
    BNEZ $v0, loc_590FB8
    LW $a2, 0x60+var_14($sp)
loc_5910C8:
    B loc_590DB8
    MOVE $a1, $s4
loc_5910D0:
    LA $t9, sub_5738E0
    LI $a2, 0xE4
    ADDIU $a1, $s6, 0x194
    BAL sub_5738E0
    MOVE $a0, $s0
    LI $a2, 0xEA
    LW $gp, 0x60+var_48($sp)
    B loc_590D28
    LA $t9, sub_57391C
loc_5910F4:
    LI $v0, 0x384
    LA $t9, sub_5461DC
    LUI $a3, 0x73
    LI $a2, 0x41
    LA $a3, aCryptoPemPemLi
    SW $v0, 0x60+var_50($sp)
    LI $a1, 0x91
    JALR $ra, $t9
    LI $a0, 9
    MOVE $v0, $zero
    B loc_590EE0
    LW $gp, 0x60+var_48($sp)
loc_591124:
    LA $t9, sub_575994
    LI $a3, 0xE2
    ADDIU $a2, $s6, 0x194
    LI $a1, 0x100
    BAL sub_575994
    MOVE $a0, $s0
    MOVE $s5, $zero
    LW $gp, 0x60+var_48($sp)
    MOVE $s0, $zero
    LA $t9, sub_559840
    JALR $ra, $t9
    LW $a0, 0x60+var_38($sp)
    B loc_590F64
    LW $gp, 0x60+var_48($sp)
loc_59115C:
    LA $t9, sub_57507C
    B loc_590CD0
    LI $a2, 0xE9
loc_591168:
    LI $v0, 0x32F
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, 0x194
    LI $a2, 0x70
    LI $a1, 0x8F
    SW $v0, 0x60+var_50($sp)
    JALR $ra, $t9
    LI $a0, 9
    B loc_591034
    LW $gp, 0x60+var_48($sp)
loc_591190:
    LI $v0, 0x2E4
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, (aCryptoPemPemLi - 0x730000)
    LI $a2, 0x41
    LI $a1, 0x90
    SW $v0, 0x60+var_50($sp)
    LI $a0, 9
    JALR $ra, $t9
    MOVE $s5, $zero
    B loc_590F50
    LW $gp, 0x60+var_48($sp)
loc_5911BC:
    LA $t9, sub_68C240
    MOVE $a0, $s5
    JALR $ra, $t9
    ADDIU $s2, $s0, 9
    MOVE $a1, $s5
    LW $gp, 0x60+var_48($sp)
    MOVE $a2, $v0
    MOVE $a0, $s2
    LA $t9, sub_68C320
    JALR $ra, $t9
    MOVE $s3, $v0
    BNEZ $v0, loc_5913A0
    LW $gp, 0x60+var_48($sp)
loc_5911F0:
    LUI $a1, 0x73
    LA $t9, sub_68C320
    LI $a2, 6
    LA $a1, asc_7302C4
    JALR $ra, $t9
    ADDU $a0, $s2, $s3
    BNEZ $v0, loc_5913A0
    LW $gp, 0x60+var_48($sp)
loc_591210:
    BNEZ $s1, loc_591224
    LW $v0, 0x60+var_3C($sp)
loc_591218:
    SW $v0, 0x60+var_34($sp)
    LW $v0, 0x60+var_40($sp)
    SW $v0, 0x60+var_3C($sp)
loc_591224:
    BEQZ $fp, loc_591564
    LA $t9, sub_575994
loc_59122C:
    LI $a3, 0xE2
    ADDIU $a2, $s6, 0x194
    LI $a1, 0x100
    BAL sub_575994
    MOVE $a0, $s0
    LW $gp, 0x60+var_48($sp)
loc_591244:
    LW $s0, 0x60+var_38($sp)
    LA $t9, sub_559CAC
    JALR $ra, $t9
    MOVE $a0, $s0
    ADDIU $a3, $sp, 0x60+var_8
    LW $gp, 0x60+var_48($sp)
    MOVE $a2, $zero
    LW $a0, 0x60+var_3C($sp)
    LA $t9, sub_4E808C
    JALR $ra, $t9
    LI $a1, 0x73
    ADDIU $a2, $sp, 0x60+var_10
    LW $v1, 0x60+var_8($sp)
    MOVE $a0, $s0
    LW $gp, 0x60+var_48($sp)
    LW $v0, 0($v1)
    LW $a3, 4($v1)
    LA $t9, sub_559EF0
    SW $v0, 0x60+var_50($sp)
    MOVE $a1, $a3
    JALR $ra, $t9
    SW $v0, 0x60+var_10($sp)
    BLTZ $v0, loc_5912F0
    LW $gp, 0x60+var_48($sp)
loc_5912A4:
    LW $v0, 0x60+var_8($sp)
    ADDIU $a2, $sp, 0x60+var_C
    LA $t9, sub_55A20C
    LW $a0, 0x60+var_38($sp)
    LW $a1, 4($v0)
    LW $v0, 0x60+var_10($sp)
    JALR $ra, $t9
    ADDU $a1, $v0
    BLTZ $v0, loc_5912F0
    LW $gp, 0x60+var_48($sp)
loc_5912CC:
    LW $v1, 0x60+var_C($sp)
    LW $v0, 0x60+var_10($sp)
    ADDU $v0, $v1
    LW $v1, 0x60+var_8($sp)
    SW $v0, 0x60+var_10($sp)
    BNEZ $v0, loc_5913C8
    SW $v0, 0($v1)
loc_5912E8:
    B loc_590F50
    MOVE $s0, $zero
loc_5912F0:
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, 0x194
    LI $a2, 0x64
    LI $a1, 0x91
    LI $v0, 0x3A5
loc_591304:
    LI $a0, 9
    SW $v0, 0x60+var_50($sp)
    JALR $ra, $t9
    MOVE $s0, $zero
    B loc_590F50
    LW $gp, 0x60+var_48($sp)
loc_59131C:
    LI $v0, 0x357
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, 0x194
    LI $a2, 0x66
    LI $a1, 0x8F
    SW $v0, 0x60+var_50($sp)
    JALR $ra, $t9
    LI $a0, 9
    B loc_591034
    LW $gp, 0x60+var_48($sp)
loc_591344:
    LI $v0, 0x2FB
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, 0x194
    LI $a2, 0x41
    LI $a1, 0x90
    SW $v0, 0x60+var_50($sp)
    JALR $ra, $t9
    LI $a0, 9
    B loc_590E70
    LW $gp, 0x60+var_48($sp)
loc_59136C:
    LA $t9, sub_575994
    LI $a3, 0xE2
    ADDIU $a2, $s6, 0x194
    LI $a1, 0x100
    MOVE $a0, $s0
loc_591380:
    BAL sub_575994
    MOVE $s0, $zero
    LW $gp, 0x60+var_48($sp)
    LA $t9, sub_559840
    JALR $ra, $t9
    LW $a0, 0x60+var_38($sp)
    B loc_590F64
    LW $gp, 0x60+var_48($sp)
loc_5913A0:
    LI $v0, 0x34D
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, 0x194
    LI $a2, 0x66
    LI $a1, 0x8F
    SW $v0, 0x60+var_50($sp)
    JALR $ra, $t9
    LI $a0, 9
    B loc_591034
    LW $gp, 0x60+var_48($sp)
loc_5913C8:
    LA $t9, sub_4E808C
    MOVE $a3, $zero
    LW $a0, 0x60+var_34($sp)
    MOVE $a2, $zero
    JALR $ra, $t9
    LI $a1, 3
    LW $gp, 0x60+var_48($sp)
    MOVE $s0, $v0
    BNEZ $fp, loc_5914BC
    ADDIU $a0, $v0, 1
loc_5913F0:
    LA $t9, sub_57391C
    LI $a2, 0xEA
    BAL sub_57391C
    ADDIU $a1, $s6, 0x194
    LI $a2, 0xEA
    LW $gp, 0x60+var_48($sp)
    ADDIU $a1, $s6, 0x194
    LW $s1, 0x60+var_28($sp)
    LW $a0, 0x60+var_10($sp)
    LA $t9, sub_57391C
    BAL sub_57391C
    SW $v0, 0($s1)
    LW $v1, 0x60+var_30($sp)
    LW $gp, 0x60+var_48($sp)
    SW $v0, 0($v1)
    LW $a0, 0($s1)
    BEQZ $a0, loc_59153C
    LA $t9, sub_5738E0
loc_591438:
    BEQZ $v0, loc_591540
    LI $a2, 0xE4
loc_591440:
    LA $t9, sub_4E6C68
    MOVE $a1, $a0
    LW $a0, 0x60+var_34($sp)
    JALR $ra, $t9
    MOVE $a2, $s0
    LW $v0, 0x60+var_28($sp)
    LW $gp, 0x60+var_48($sp)
    LW $a0, 0x60+var_3C($sp)
    LW $v0, 0($v0)
    LA $t9, sub_4E6C68
    ADDU $s0, $v0, $s0
    LW $v0, 0x60+var_30($sp)
    SB $zero, 0($s0)
    LI $s0, 1
    LW $a2, 0x60+var_10($sp)
    JALR $ra, $t9
    LW $a1, 0($v0)
    LW $v0, 0x60+var_10($sp)
    LW $v1, 0x60+var_20($sp)
    LW $gp, 0x60+var_48($sp)
    SW $v0, 0($v1)
    LW $v0, 0x60+var_24($sp)
    SW $s5, 0($v0)
    B loc_590F50
    MOVE $s5, $zero
loc_5914A4:
    LA $t9, sub_5461DC
    ADDIU $a3, $s6, 0x194
    LI $a2, 0x41
    LI $a1, 0x8F
    B loc_591304
    LI $v0, 0x327
loc_5914BC:
    LA $t9, sub_57507C
    LI $a2, 0xE9
    BAL sub_57507C
    ADDIU $a1, $s6, 0x194
    LI $a2, 0xE9
    LW $gp, 0x60+var_48($sp)
    ADDIU $a1, $s6, 0x194
    LW $s1, 0x60+var_28($sp)
    LW $a0, 0x60+var_10($sp)
    LA $t9, sub_57507C
    BAL sub_57507C
    SW $v0, 0($s1)
    LW $v1, 0x60+var_30($sp)
    LW $gp, 0x60+var_48($sp)
    SW $v0, 0($v1)
    LW $a0, 0($s1)
    BEQZ $a0, loc_59150C
    LA $t9, sub_575994
loc_591504:
    BNEZ $v0, loc_591440
    NOP 
loc_59150C:
    LI $a3, 0xE2
    ADDIU $a2, $s6, 0x194
    BAL sub_575994
    MOVE $a1, $zero
    LI $a3, 0xE2
    LW $gp, 0x60+var_48($sp)
    ADDIU $a2, $s6, 0x194
    LW $v0, 0x60+var_30($sp)
    MOVE $a1, $zero
    LA $t9, sub_575994
    B loc_591380
    LW $a0, 0($v0)
loc_59153C:
    LI $a2, 0xE4
loc_591540:
    BAL sub_5738E0
    ADDIU $a1, $s6, 0x194
    LI $a2, 0xE4
    LW $gp, 0x60+var_48($sp)
    ADDIU $a1, $s6, 0x194
    LW $v0, 0x60+var_30($sp)
    LA $t9, sub_5738E0
    B loc_591048
    LW $a0, 0($v0)
loc_591564:
    LA $t9, sub_5738E0
    LI $a2, 0xE4
    ADDIU $a1, $s6, 0x194
    BAL sub_5738E0
    MOVE $a0, $s0
    B loc_591244
    LW $gp, 0x60+var_48($sp)
loc_591580:
    LA $t9, sub_69C5E0
    JALR $ra, $t9
    NOP 
    LUI $gp, 0x7B
    ADDIU $sp, -0x38
    LA $gp, unk_7AC870
    SW $ra, 0x98+var_64($sp)
    SW $s4, 0x98+var_68($sp)
    MOVE $s4, $a0
    SW $s3, 0x98+var_6C($sp)
    MOVE $s3, $a3
    SW $s2, 0x98+var_70($sp)
    MOVE $s2, $a2
    SW $s1, 0x98+var_74($sp)
    SW $s0, 0x98+var_78($sp)
    SW $gp, 0x98+var_80($sp)
    LA $t9, sub_4EF01C
    JALR $ra, $t9
    MOVE $s1, $a1
    LW $gp, 0x98+var_80($sp)
    LA $t9, sub_4E6710
    JALR $ra, $t9
    MOVE $a0, $v0
    LW $gp, 0x98+var_80($sp)
    BEQZ $v0, loc_59165C
    MOVE $s0, $v0
loc_5915E8:
    LA $t9, sub_4E808C
    MOVE $a2, $zero
    LI $a1, 0x6A
    MOVE $a3, $s4
    JALR $ra, $t9
    MOVE $a0, $v0
    MOVE $a3, $s3
    LW $v0, 0x98+var_50($sp)
    MOVE $a2, $s2
    MOVE $a1, $s1
    MOVE $a0, $s0
    SW $v0, 0x98+var_88($sp)
    LI $v0, 2
    JAL sub_590AFC
    SW $v0, 0x98+var_84($sp)
    MOVE $a0, $s0
    LW $gp, 0x98+var_80($sp)
    LA $t9, sub_4E68F8
    JALR $ra, $t9
    MOVE $s0, $v0
    MOVE $v0, $s0
    LW $ra, 0x98+var_64($sp)
    LW $s4, 0x98+var_68($sp)
    LW $s3, 0x98+var_6C($sp)
    LW $s2, 0x98+var_70($sp)
    LW $s1, 0x98+var_74($sp)
    LW $s0, 0x98+var_78($sp)
    JR $ra
    ADDIU $sp, 0x38
loc_59165C:
    LI $v0, 0x2A3
    LA $t9, sub_5461DC
    LUI $a3, 0x73
    LI $a2, 7
    LA $a3, aCryptoPemPemLi
    SW $v0, 0x98+var_88($sp)
    LI $a1, 0x6C
    JALR $ra, $t9
    LI $a0, 9
    MOVE $v0, $s0
    LW $ra, 0x98+var_64($sp)
    LW $s4, 0x98+var_68($sp)
    LW $s3, 0x98+var_6C($sp)
    LW $s2, 0x98+var_70($sp)
    LW $s1, 0x98+var_74($sp)
    LW $s0, 0x98+var_78($sp)
    JR $ra
    ADDIU $sp, 0x38

=====

3, mips

######
X509_keyid_get0:
loc_5FA0D4:
    LW $v0, 0xC4($a0)
    BEQZ $v0, locret_5FA104
    NOP 
loc_5FA0E0:
    LW $v0, 0xC($v0)
    BEQZ $v0, locret_5FA104
    NOP 
loc_5FA0EC:
    BEQZ $a1, locret_5FA0FC
    NOP 
loc_5FA0F4:
    LW $v1, 0($v0)
    SW $v1, 0($a1)
loc_5FA0FC:
    JR $ra
    LW $v0, 8($v0)
loc_5FA104:
    JR $ra
    MOVE $v0, $zero

=====

3, mips

######
_IO_wfile_seekoff:
loc_67B564:
    ADDIU $sp, -0xF8
    LUI $gp, 0x7B
    SW $s3, 0xD0+var_sC($sp)
    LA $gp, unk_7AC870
    SW $s0, 0xD0+var_s0($sp)
    SW $ra, 0xD0+var_s24($sp)
    MOVE $s0, $a0
    SW $fp, 0xD0+var_s20($sp)
    SW $s7, 0xD0+var_s1C($sp)
    SW $s6, 0xD0+var_s18($sp)
    SW $s5, 0xD0+var_s14($sp)
    SW $s4, 0xD0+var_s10($sp)
    SW $s2, 0xD0+var_s8($sp)
    SW $s1, 0xD0+var_s4($sp)
    SW $gp, 0xD0+var_B0($sp)
    LW $v0, 0xD0+arg_14($sp)
    BEQZ $v0, loc_67BA5C
    LW $s3, 0xD0+arg_10($sp)
loc_67B5AC:
    LW $v0, 0x5C($a0)
    MOVE $s1, $a2
    LW $a0, 8($v0)
    LW $v1, 4($v0)
    BEQ $a0, $v1, loc_67B624
    MOVE $s2, $a3
loc_67B5C4:
    LW $a0, 0x10($v0)
    LW $v1, 0xC($v0)
    SLTU $v1, $a0
loc_67B5D0:
    BEQZ $v1, loc_67B638
    MOVE $s4, $zero
loc_67B5D8:
    LA $t9, sub_67A344
loc_67B5DC:
    BAL sub_67A344
    MOVE $a0, $s0
    BEQZ $v0, loc_67BB6C
    LW $gp, 0xD0+var_B0($sp)
loc_67B5EC:
    MOVE $v0, $zero
    LI $v1, 0xFFFFFFFF
loc_67B5F4:
    LW $ra, 0xD0+var_s24($sp)
    LW $fp, 0xD0+var_s20($sp)
    LW $s7, 0xD0+var_s1C($sp)
    LW $s6, 0xD0+var_s18($sp)
    LW $s5, 0xD0+var_s14($sp)
    LW $s4, 0xD0+var_s10($sp)
    LW $s3, 0xD0+var_sC($sp)
    LW $s2, 0xD0+var_s8($sp)
    LW $s1, 0xD0+var_s4($sp)
    LW $s0, 0xD0+var_s0($sp)
    JR $ra
    ADDIU $sp, 0xF8
loc_67B624:
    LW $v1, 0xC($v0)
    LW $a0, 0x10($v0)
    BNE $v1, $a0, loc_67B5D0
    SLTU $v1, $a0
loc_67B634:
    LI $s4, 1
loc_67B638:
    LW $v1, 0($s0)
    ANDI $v1, 0x800
    BNEZ $v1, loc_67B5DC
    LA $t9, sub_67A344
loc_67B648:
    LW $v1, 0x18($v0)
    BEQZ $v1, loc_67BBF4
    NOP 
loc_67B654:
    LI $v0, 1
    BEQ $s3, $v0, loc_67B9CC
    LI $v0, 2
loc_67B660:
    BNE $s3, $v0, loc_67B77C
    NOP 
loc_67B668:
    LW $v0, 0x98($s0)
    ADDIU $a1, $sp, 0xD0+var_A8
    LW $t9, 0x48($v0)
    JALR $ra, $t9
    MOVE $a0, $s0
    BEQZ $v0, loc_67B748
    LW $gp, 0xD0+var_B0($sp)
loc_67B684:
    LA $t9, sub_682ABC
loc_67B688:
    BAL sub_682ABC
    MOVE $a0, $s0
    MOVE $a0, $s0
    LW $v0, 0x98($s0)
    MOVE $a2, $s1
    SW $s3, 0xD0+var_C0($sp)
    LW $t9, 0x40($v0)
    JALR $ra, $t9
    MOVE $a3, $s2
    LI $a0, 0xFFFFFFFF
    MOVE $a1, $v0
    BEQ $a1, $a0, loc_67BBE4
    MOVE $t0, $v1
loc_67B6BC:
    LW $a0, 0x5C($s0)
    MOVE $v0, $a1
    LW $a3, 0($s0)
    MOVE $v1, $t0
    LW $a2, 0x1C($s0)
    LW $ra, 0xD0+var_s24($sp)
    SW $a1, 0x50($s0)
    LI $a1, 0xFFFFFFEF
    SW $t0, 0x54($s0)
    AND $a3, $a1
    LW $a1, 0x18($a0)
    LW $fp, 0xD0+var_s20($sp)
    LW $s7, 0xD0+var_s1C($sp)
    LW $s6, 0xD0+var_s18($sp)
    LW $s5, 0xD0+var_s14($sp)
    LW $s4, 0xD0+var_s10($sp)
    LW $s3, 0xD0+var_sC($sp)
    LW $s2, 0xD0+var_s8($sp)
    LW $s1, 0xD0+var_s4($sp)
    SW $a3, 0($s0)
    SW $a2, 0xC($s0)
    SW $a2, 4($s0)
    SW $a2, 8($s0)
    SW $a2, 0x14($s0)
    SW $a2, 0x10($s0)
    SW $a2, 0x18($s0)
    SW $a1, 8($a0)
    SW $a1, 0($a0)
    SW $a1, 4($a0)
    SW $a1, 0x10($a0)
    SW $a1, 0xC($a0)
    SW $a1, 0x14($a0)
    LW $s0, 0xD0+var_s0($sp)
    JR $ra
    ADDIU $sp, 0xF8
loc_67B748:
    LW $v0, 0xD0+var_90($sp)
    LI $v1, 0x8000
    ANDI $v0, 0xF000
    BNE $v0, $v1, loc_67B688
    LA $t9, sub_682ABC
loc_67B75C:
    LW $a0, 0xD0+var_6C($sp)
    MOVE $s3, $zero
    LW $v0, 0xD0+var_70($sp)
    ADDU $a0, $s2, $a0
    ADDU $v0, $s1, $v0
    SLTU $s1, $a0, $s2
    ADDU $s1, $v0
    MOVE $s2, $a0
loc_67B77C:
    LW $a0, 0x50($s0)
    LI $v0, 0xFFFFFFFF
    BEQ $a0, $v0, loc_67B874
    LW $a1, 0x54($s0)
loc_67B78C:
    LW $v0, 0xC($s0)
    BEQZ $v0, loc_67B87C
    NOP 
loc_67B798:
    LW $v0, 0($s0)
    ANDI $v1, $v0, 0x100
    BNEZ $v1, loc_67B880
    NOP 
loc_67B7A8:
    LW $a3, 0x1C($s0)
    LW $v1, 8($s0)
    SUBU $v1, $a3
    SRA $a2, $v1, 31
    SUBU $v1, $a1, $v1
    SUBU $a2, $a0, $a2
    SLTU $t0, $a1, $v1
    SUBU $a2, $t0
    SLT $t0, $s1, $a2
    BNEZ $t0, loc_67B880
    NOP 
loc_67B7D4:
    BEQ $a2, $s1, loc_67BD5C
    SLTU $a2, $s2, $v1
loc_67B7DC:
    SLT $a2, $s1, $a0
loc_67B7E0:
    BNEZ $a2, loc_67B7FC
    NOP 
loc_67B7E8:
    BNE $a0, $s1, loc_67B880
    NOP 
loc_67B7F0:
    SLTU $a1, $s2, $a1
    BEQZ $a1, loc_67B884
    ANDI $v0, 4
loc_67B7FC:
    SUBU $v1, $s2, $v1
    LW $v0, 0x5C($s0)
    MOVE $a1, $zero
    SW $a3, 0xC($s0)
    ADDU $v1, $a3, $v1
    SW $a3, 0x14($s0)
    SW $a3, 0x10($s0)
    MOVE $a0, $s0
    SW $a3, 0x18($s0)
    SW $v1, 4($s0)
    LW $v1, 0x18($v0)
    SW $v1, 8($v0)
    SW $v1, 0($v0)
    SW $v1, 4($v0)
    SW $v1, 0x10($v0)
    SW $v1, 0xC($v0)
    JAL sub_67AC20
    SW $v1, 0x14($v0)
    BNEZ $v0, loc_67B684
    LW $gp, 0xD0+var_B0($sp)
loc_67B84C:
    LW $v0, 0($s0)
    LI $v1, 0xFFFFFFEF
    LW $a2, 0x50($s0)
    LW $a3, 0x54($s0)
    AND $v0, $v1
    BGEZ $a2, loc_67BE04
    SW $v0, 0($s0)
loc_67B868:
    MOVE $v0, $s1
    B loc_67B5F4
    MOVE $v1, $s2
loc_67B874:
    BNE $a1, $a0, loc_67B78C
    NOP 
loc_67B87C:
    LW $v0, 0($s0)
loc_67B880:
    ANDI $v0, 4
loc_67B884:
    BNEZ $v0, loc_67B688
    LA $t9, sub_682ABC
loc_67B88C:
    LW $v1, 0x1C($s0)
    LW $v0, 0x20($s0)
    SUBU $a3, $v1, $v0
    SUBU $v0, $v1
    SRA $a2, $a3, 31
    AND $a3, $s2
    AND $a2, $s1
    SUBU $s5, $s2, $a3
    SUBU $fp, $s1, $a2
    SLTU $v1, $s2, $s5
    SUBU $fp, $v1
    SRA $v1, $v0, 31
    SLT $a0, $v1, $fp
    BNEZ $a0, loc_67BC74
    NOP 
loc_67B8C8:
    BEQ $fp, $v1, loc_67BC6C
    SLTU $v0, $s5
loc_67B8D0:
    LW $v0, 0x98($s0)
    SW $zero, 0xD0+var_C0($sp)
    LW $t9, 0x40($v0)
    JALR $ra, $t9
    MOVE $a0, $s0
    MOVE $s6, $v0
    BLTZ $s6, loc_67BBAC
    MOVE $s7, $v1
loc_67B8F0:
    OR $v0, $fp, $s5
    BEQZ $v0, loc_67BCA0
    MOVE $a3, $zero
loc_67B8FC:
    LW $v0, 0x98($s0)
    LW $a1, 0x1C($s0)
    BNEZ $s4, loc_67BD34
    LW $t9, 0x38($v0)
loc_67B90C:
    LW $a2, 0x20($s0)
    SUBU $a2, $a1
loc_67B914:
    JALR $ra, $t9
    MOVE $a0, $s0
    SRA $a0, $v0, 31
    MOVE $s4, $v0
    SLT $v0, $a0, $fp
    BNEZ $v0, loc_67BD10
    LW $gp, 0xD0+var_B0($sp)
loc_67B930:
    BEQ $fp, $a0, loc_67BD08
    SLTU $v0, $s4, $s5
loc_67B938:
    MOVE $a3, $s4
loc_67B93C:
    LW $v0, 0x5C($s0)
    LI $a1, 1
    LW $a2, 0x1C($s0)
    MOVE $a0, $s0
    LW $v1, 0x18($v0)
    ADDU $s5, $a2, $s5
    ADDU $a3, $a2, $a3
    SW $a2, 0xC($s0)
    SW $a2, 0x14($s0)
    SW $s5, 4($s0)
    SW $a3, 8($s0)
    SW $a2, 0x10($s0)
    SW $a2, 0x18($s0)
    SW $v1, 8($v0)
    SW $v1, 0($v0)
    SW $v1, 4($v0)
    SW $v1, 0x10($v0)
    SW $v1, 0xC($v0)
    JAL sub_67AC20
    SW $v1, 0x14($v0)
    BNEZ $v0, loc_67B684
    LW $gp, 0xD0+var_B0($sp)
loc_67B994:
    SRA $v1, $s4, 31
    LW $v0, 0($s0)
    ADDU $s7, $s4, $s7
    ADDU $s6, $v1, $s6
    SLTU $s4, $s7, $s4
    LI $a0, 0xFFFFFFEF
    SW $s7, 0x54($s0)
    ADDU $s4, $s6
    AND $a0, $v0, $a0
    MOVE $v1, $s2
    MOVE $v0, $s1
    SW $s4, 0x50($s0)
    B loc_67B5F4
    SW $a0, 0($s0)
loc_67B9CC:
    LW $s5, 0x58($s0)
    LW $t9, 0x10($s5)
    JALR $ra, $t9
    MOVE $a0, $s5
    BLEZ $v0, loc_67BD6C
    LW $gp, 0xD0+var_B0($sp)
loc_67B9E4:
    LW $a0, 0x5C($s0)
    LW $v1, 8($s0)
    LW $a2, 4($s0)
    LW $a1, 4($a0)
    LW $a0, 0($a0)
    SUBU $a2, $v1, $a2
    SRA $a3, $a2, 31
    SUBU $a0, $a1, $a0
    SRA $a0, 2
    MUL $a0, $v0
    SRA $v0, $a0, 31
    SUBU $a0, $s2, $a0
    SUBU $v0, $s1, $v0
    SLTU $s1, $s2, $a0
    SUBU $s1, $v0, $s1
    SUBU $s2, $a0, $a2
    SUBU $s1, $a3
    SLTU $a0, $s2
    SUBU $s1, $a0
loc_67BA30:
    LW $a0, 0x50($s0)
    LI $v0, 0xFFFFFFFF
    BEQ $a0, $v0, loc_67BD3C
    LW $a1, 0x54($s0)
loc_67BA40:
    ADDU $a2, $s2, $a1
loc_67BA44:
    ADDU $v0, $s1, $a0
    SLTU $s1, $a2, $s2
    ADDU $s1, $v0
    MOVE $s2, $a2
    B loc_67B78C
    MOVE $s3, $zero
loc_67BA5C:
    LW $a1, 0x5C($a0)
    LW $v0, 0x18($a1)
    BEQZ $v0, loc_67BD54
    MOVE $s1, $zero
loc_67BA6C:
    LW $s4, 0x10($a1)
    LW $v0, 0xC($a1)
    LW $a2, 0($a0)
    SLTU $s4, $v0, $s4
    BEQZ $s4, loc_67BA8C
    ANDI $s3, $a2, 0x1000
loc_67BA84:
    BNEZ $s3, loc_67BE24
    LI $v1, 2
loc_67BA8C:
    ANDI $a2, 0x100
    BEQZ $a2, loc_67BCAC
    NOP 
loc_67BA98:
    LW $v0, 0($a1)
    LW $v1, 4($a1)
    SLTU $v0, $v1
    BNEZ $v0, loc_67BF48
    NOP 
loc_67BAAC:
    LW $s2, 0x20($a1)
    LW $s1, 0x28($a1)
    MOVE $s6, $s2
loc_67BAB8:
    LW $s5, 0x58($s0)
    LW $t9, 0x10($s5)
    JALR $ra, $t9
    MOVE $a0, $s5
    BNEZ $s4, loc_67BCBC
    LW $gp, 0xD0+var_B0($sp)
loc_67BAD0:
    BLEZ $v0, loc_67BEEC
    ADDIU $a1, $sp, 0xD0+var_A8
loc_67BAD8:
    SUBU $s1, $s2
    LW $v1, 8($s0)
    LW $s2, 4($s0)
    SRA $s1, 2
    MUL $v0, $s1, $v0
    SUBU $s2, $v1, $s2
    SRA $s1, $s2, 31
    NEGU $v1, $v0
    SRL $v0, 31
    SLTU $a0, $zero, $v1
    SUBU $v0, $a0
    SUBU $s2, $v1, $s2
    SUBU $v0, $s1
    SLTU $s1, $v1, $s2
    SUBU $s1, $v0, $s1
loc_67BB14:
    LW $v0, 0x50($s0)
    LI $a0, 0xFFFFFFFF
    BEQ $v0, $a0, loc_67BB74
    LW $v1, 0x54($s0)
loc_67BB24:
    ADDU $v1, $s2, $v1
loc_67BB28:
    ADDU $s1, $v0
    SLTU $s2, $v1, $s2
    ADDU $s1, $s2, $s1
    BLTZ $s1, loc_67BF48
    LW $ra, 0xD0+var_s24($sp)
loc_67BB3C:
    MOVE $v0, $s1
    LW $fp, 0xD0+var_s20($sp)
    LW $s7, 0xD0+var_s1C($sp)
    LW $s6, 0xD0+var_s18($sp)
    LW $s5, 0xD0+var_s14($sp)
    LW $s4, 0xD0+var_s10($sp)
    LW $s3, 0xD0+var_sC($sp)
    LW $s2, 0xD0+var_s8($sp)
    LW $s1, 0xD0+var_s4($sp)
    LW $s0, 0xD0+var_s0($sp)
    JR $ra
    ADDIU $sp, 0xF8
loc_67BB6C:
    B loc_67B648
    LW $v0, 0x5C($s0)
loc_67BB74:
    BNE $v1, $v0, loc_67BB24
    LI $s3, 0xFFFFFFFF
loc_67BB7C:
    LW $v0, 0x98($s0)
    LI $v1, 1
    MOVE $a3, $zero
    MOVE $a2, $zero
    SW $v1, 0xD0+var_C0($sp)
    LW $t9, 0x40($v0)
    JALR $ra, $t9
    MOVE $a0, $s0
    BNE $v0, $s3, loc_67BB24
    LW $gp, 0xD0+var_B0($sp)
loc_67BBA4:
    BNE $v1, $v0, loc_67BB28
    ADDU $v1, $s2, $v1
loc_67BBAC:
    LI $v0, 0xFFFFFFFF
    LI $v1, 0xFFFFFFFF
loc_67BBB4:
    LW $ra, 0xD0+var_s24($sp)
    LW $fp, 0xD0+var_s20($sp)
    LW $s7, 0xD0+var_s1C($sp)
    LW $s6, 0xD0+var_s18($sp)
    LW $s5, 0xD0+var_s14($sp)
    LW $s4, 0xD0+var_s10($sp)
    LW $s3, 0xD0+var_sC($sp)
    LW $s2, 0xD0+var_s8($sp)
    LW $s1, 0xD0+var_s4($sp)
    LW $s0, 0xD0+var_s0($sp)
    JR $ra
    ADDIU $sp, 0xF8
loc_67BBE4:
    BNE $v1, $a1, loc_67B6BC
    LI $v0, 0xFFFFFFFF
loc_67BBEC:
    B loc_67BBB4
    LI $v1, 0xFFFFFFFF
loc_67BBF4:
    LW $a0, 8($v0)
    BEQZ $a0, loc_67BC1C
    LA $t9, sub_68938C
loc_67BC00:
    BAL sub_68938C
    NOP 
    LI $v1, 0xFFFFFEFF
    LW $v0, 0($s0)
    LW $gp, 0xD0+var_B0($sp)
    AND $v0, $v1
    SW $v0, 0($s0)
loc_67BC1C:
    LA $t9, sub_6817D0
    BAL sub_6817D0
    MOVE $a0, $s0
    LW $v0, 0x5C($s0)
    LW $a0, 0x1C($s0)
    LW $gp, 0xD0+var_B0($sp)
    LW $v1, 0x18($v0)
    SW $a0, 0x14($s0)
    SW $a0, 0x10($s0)
    SW $a0, 0x18($s0)
    SW $a0, 0xC($s0)
    SW $a0, 4($s0)
    SW $a0, 8($s0)
    SW $v1, 0x10($v0)
    SW $v1, 0xC($v0)
    SW $v1, 0x14($v0)
    SW $v1, 8($v0)
    SW $v1, 0($v0)
    B loc_67B654
    SW $v1, 4($v0)
loc_67BC6C:
    BEQZ $v0, loc_67B8D0
    NOP 
loc_67BC74:
    LW $v0, 0x98($s0)
    MOVE $a2, $s1
    SW $zero, 0xD0+var_C0($sp)
    MOVE $a3, $s2
    LW $t9, 0x40($v0)
    JALR $ra, $t9
    MOVE $a0, $s0
    MOVE $s6, $v0
    BLTZ $s6, loc_67BBAC
    MOVE $s7, $v1
loc_67BC9C:
    MOVE $a3, $zero
loc_67BCA0:
    MOVE $s5, $zero
    B loc_67B93C
    MOVE $s4, $zero
loc_67BCAC:
    LW $s6, 8($a1)
    LW $s2, 0($a1)
    B loc_67BAB8
    LW $s1, 4($a1)
loc_67BCBC:
    BLEZ $v0, loc_67BE5C
    LA $t9, sub_688AB8
loc_67BCC4:
    LW $a0, 0x5C($s0)
    LW $s2, 0xC($a0)
    LW $v1, 0x10($a0)
    SUBU $v1, $s2
    SRA $v1, 2
    MUL $s2, $v1, $v0
    SRA $s1, $s2, 31
loc_67BCE0:
    BNEZ $s3, loc_67BD4C
    LW $v0, 0x14($s0)
loc_67BCE8:
    LW $v1, 8($s0)
loc_67BCEC:
    SUBU $v0, $v1
    SRA $v1, $v0, 31
    ADDU $s2, $v0, $s2
    ADDU $s1, $v1, $s1
    SLTU $v0, $s2, $v0
    B loc_67BB14
    ADDU $s1, $v0, $s1
loc_67BD08:
    BEQZ $v0, loc_67B93C
    MOVE $a3, $s4
loc_67BD10:
    LI $v0, 0xFFFFFFFF
    BEQ $s4, $v0, loc_67BDF4
    NOP 
loc_67BD1C:
    SUBU $s2, $s5, $s4
    SUBU $fp, $a0
    SLTU $s1, $s5, $s2
    SUBU $s1, $fp, $s1
    B loc_67B684
    LI $s3, 1
loc_67BD34:
    B loc_67B914
    MOVE $a2, $s5
loc_67BD3C:
    BNE $a1, $a0, loc_67BA44
    ADDU $a2, $s2, $a1
loc_67BD44:
    B loc_67B688
    LA $t9, sub_682ABC
loc_67BD4C:
    B loc_67BCEC
    LW $v1, 0x10($s0)
loc_67BD54:
    B loc_67BB14
    MOVE $s2, $zero
loc_67BD5C:
    BNEZ $a2, loc_67B880
    SLT $a2, $s1, $a0
loc_67BD64:
    B loc_67B7E0
    NOP 
loc_67BD6C:
    LW $v0, 0x5C($s0)
    MOVE $a0, $s5
    LW $a3, 8($v0)
    LW $v1, 0($v0)
    LW $a2, 0x34($v0)
    LW $a1, 0x38($v0)
    SUBU $v1, $a3
    SRA $v1, 2
    SW $a2, 0x2C($v0)
    SW $a1, 0x30($v0)
    LW $a1, 0x5C($s0)
    LW $a2, 0xC($s0)
    LW $a3, 8($s0)
    SW $v1, 0xD0+var_C0($sp)
    LW $t9, 0x18($s5)
    JALR $ra, $t9
    ADDIU $a1, 0x2C
    LW $a0, 0xC($s0)
    LW $v1, 8($s0)
    LW $a1, 0x5C($s0)
    ADDU $a2, $a0, $v0
    LW $gp, 0xD0+var_B0($sp)
    SUBU $v1, $a0
    SUBU $a0, $v1, $v0
    LW $v1, 0($a1)
    SW $a2, 4($s0)
    SRA $v0, $a0, 31
    SUBU $a0, $s2, $a0
    SUBU $v0, $s1, $v0
    SW $v1, 4($a1)
    SLTU $s1, $s2, $a0
    SUBU $s1, $v0, $s1
    B loc_67BA30
    MOVE $s2, $a0
loc_67BDF4:
    LI $s3, 1
    MOVE $s1, $fp
    B loc_67B684
    MOVE $s2, $s5
loc_67BE04:
    LW $v0, 0x98($s0)
    SW $zero, 0xD0+var_C0($sp)
    LW $t9, 0x40($v0)
    JALR $ra, $t9
    MOVE $a0, $s0
    MOVE $v0, $s1
    B loc_67B5F4
    MOVE $v1, $s2
loc_67BE24:
    LW $v0, 0x98($a0)
    MOVE $a3, $zero
    SW $v1, 0xD0+var_C0($sp)
    LW $t9, 0x40($v0)
    JALR $ra, $t9
    MOVE $a2, $zero
    LI $a0, 0xFFFFFFFF
    BEQ $v0, $a0, loc_67BF84
    LW $gp, 0xD0+var_B0($sp)
loc_67BE48:
    LW $a2, 0($s0)
    LW $a1, 0x5C($s0)
    SW $v0, 0x50($s0)
    B loc_67BA8C
    SW $v1, 0x54($s0)
loc_67BE5C:
    LW $s4, 0x5C($s0)
    LW $s6, 0xC($s4)
    LW $s7, 0x10($s4)
    SUBU $s1, $s7, $s6
    BAL sub_688AB8
    MOVE $a0, $s1
    ADDIU $a0, $sp, 0xD0+var_4
    MOVE $s2, $v0
    LW $v0, 0x38($s4)
    LW $v1, 0x34($s4)
    ADDU $s1, $s2, $s1
    SW $a0, 0xD0+var_B4($sp)
    ADDIU $a1, $sp, 0xD0+var_A8
    SW $s2, 0xD0+var_BC($sp)
    MOVE $a3, $s7
    SW $v0, 0xD0+var_A4($sp)
    ADDIU $v0, $sp, 0xD0+var_8
    SW $v1, 0xD0+var_A8($sp)
    MOVE $a2, $s6
    SW $s1, 0xD0+var_B8($sp)
    SW $v0, 0xD0+var_C0($sp)
    SW $s2, 0xD0+var_4($sp)
    SW $s6, 0xD0+var_8($sp)
    LW $t9, 4($s5)
    JALR $ra, $t9
    MOVE $a0, $s5
    BNEZ $v0, loc_67BF6C
    LW $gp, 0xD0+var_B0($sp)
loc_67BECC:
    LW $v0, 0xD0+var_4($sp)
    MOVE $a0, $s2
    LA $t9, sub_68938C
    BAL sub_68938C
    SUBU $s2, $v0, $s2
    LW $gp, 0xD0+var_B0($sp)
    B loc_67BCE0
    SRA $s1, $s2, 31
loc_67BEEC:
    LW $v1, 0x5C($s0)
    SUBU $v0, $s2, $s6
    LW $a3, 8($s0)
    SRA $v0, 2
    LW $a2, 0xC($s0)
    LW $t0, 0x34($v1)
    LW $v1, 0x38($v1)
    SW $v0, 0xD0+var_C0($sp)
    SW $t0, 0xD0+var_A8($sp)
    SW $v1, 0xD0+var_A4($sp)
    LW $t9, 0x18($s5)
    JALR $ra, $t9
    MOVE $a0, $s5
    LW $v1, 8($s0)
    LW $a0, 0xC($s0)
    LW $gp, 0xD0+var_B0($sp)
    SUBU $v1, $a0
    SUBU $v0, $v1, $v0
    NEGU $s2, $v0
    SRL $v0, 31
    SLTU $s1, $zero, $s2
    B loc_67BB14
    SUBU $s1, $v0, $s1
loc_67BF48:
    RDHWR $v1, $29
    MOVE $a0, $v1
    LA $v1, 0xFFFF9014
    LI $a1, 0x16
    LI $v0, 0xFFFFFFFF
    ADDU $a0, $v1, $a0
    LI $v1, 0xFFFFFFFF
    B loc_67B5F4
    SW $a1, 0($a0)
loc_67BF6C:
    LA $t9, sub_68938C
    BAL sub_68938C
    MOVE $a0, $s2
    MOVE $v0, $zero
    B loc_67B5F4
    LI $v1, 0xFFFFFFFF
loc_67BF84:
    BNE $v1, $v0, loc_67BE48
    NOP 
loc_67BF8C:
    LI $v0, 0xFFFFFFFF
    B loc_67BBB4
    LI $v1, 0xFFFFFFFF

=====

3, mips

######
_CONF_free_data:
loc_62BF98:
    BEQZ $a0, locret_62C024
    NOP 
loc_62BFA0:
    LW $v0, 8($a0)
    BEQZ $v0, locret_62C024
    LUI $gp, 0x7B
loc_62BFAC:
    ADDIU $sp, -0x20
    LA $gp, unk_7AC870
    MOVE $a1, $zero
    SW $ra, 0x20+var_4($sp)
    SW $s0, 0x20+var_8($sp)
    MOVE $s0, $a0
    SW $gp, 0x20+var_10($sp)
    LA $t9, sub_571268
    JALR $ra, $t9
    MOVE $a0, $v0
    LUI $a1, 0x63
    LW $gp, 0x20+var_10($sp)
    LW $a0, 8($s0)
    LA $a1, sub_62B9D4
    LA $t9, sub_571190
    JALR $ra, $t9
    MOVE $a2, $a0
    LUI $a1, 0x63
    LW $gp, 0x20+var_10($sp)
    LW $a0, 8($s0)
    LA $t9, sub_5710E8
    JALR $ra, $t9
    LA $a1, sub_62BAA0
    LW $gp, 0x20+var_10($sp)
    LW $a0, 8($s0)
    LW $ra, 0x20+var_4($sp)
    LW $s0, 0x20+var_8($sp)
    LA $t9, sub_570964
    JR $t9
    ADDIU $sp, 0x20
loc_62C024:
    JR $ra
    NOP 

=====

3, mips

######
readv:
loc_6D19E0:
    LA $gp, unk_7AC870
    RDHWR $v1, $29
    LW $v1, -0x7490($v1)
    BNE $zero, $v1, loc_6D1A14
    NOP 
loc_6D19F8:
    LI $v0, 0x1031
    SYSCALL 0
    BNEZ $a3, loc_6D19B0
    NOP 
loc_6D1A08:
    JR $ra
    NOP 
loc_6D1A14:
    ADDIU $sp, -0x30
    SW $ra, 0x30+var_14($sp)
    SW $gp, 0x30+var_10($sp)
    SW $a0, 0x30+var_30($sp)
    SW $a1, 0x30+var_2C($sp)
    SW $a2, 0x30+var_28($sp)
    LA $t9, sub_69B090
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_10($sp)
    SW $v0, 0x30+var_4($sp)
    LW $a0, 0x30+var_30($sp)
    LW $a1, 0x30+var_2C($sp)
    LW $a2, 0x30+var_28($sp)
    LI $v0, 0x1031
    SYSCALL 0
    SW $v0, 0x30+var_C($sp)
    SW $a3, 0x30+var_8($sp)
    LW $a0, 0x30+var_4($sp)
    LA $t9, sub_69B16C
    JALR $ra, $t9
    NOP 
    LW $gp, 0x30+var_10($sp)
    LW $v0, 0x30+var_C($sp)
    LW $a3, 0x30+var_8($sp)
    LW $ra, 0x30+var_14($sp)
    BNEZ $a3, loc_6D19B0
    ADDIU $sp, 0x30
loc_6D1A84:
    JR $ra
    NOP 
loc_6D19B0:
    LA $t9, sub_6A9180
    JR $t9
    NOP 

=====

3, mips

######
BIO_find_type:
loc_4E8A80:
    BEQZ $a0, locret_4E8AB8
    NOP 
loc_4E8A88:
    ANDI $v0, $a1, 0xFF
    BEQZ $v0, loc_4E8AC0
    NOP 
loc_4E8A94:
    LW $v0, 0($a0)
    BEQZ $v0, loc_4E8AAC
    NOP 
loc_4E8AA0:
    LW $v0, 0($v0)
    BEQ $a1, $v0, locret_4E8AF0
    NOP 
loc_4E8AAC:
    LW $a0, 0x28($a0)
    BNEZ $a0, loc_4E8A94
    NOP 
loc_4E8AB8:
    JR $ra
    MOVE $v0, $zero
loc_4E8AC0:
    LW $v0, 0($a0)
    BEQZ $v0, loc_4E8ADC
    NOP 
loc_4E8ACC:
    LW $v0, 0($v0)
    AND $v0, $a1, $v0
    BNEZ $v0, locret_4E8AF0
    NOP 
loc_4E8ADC:
    LW $a0, 0x28($a0)
    BNEZ $a0, loc_4E8AC0
    MOVE $v0, $zero
loc_4E8AE8:
    JR $ra
    NOP 
loc_4E8AF0:
    JR $ra
    MOVE $v0, $a0

=====

0, powerpc

######
_dl_lookup_symbol_x:
loc_1033B090:
    STWU r1, back_chain(r1)
    MFCR r12
    MFLR r0, lr
    STW r21, 0x90+var_2C(r1)
    STW r22, 0x90+var_28(r1)
    STW r23, 0x90+var_24(r1)
    STW r24, 0x90+var_20(r1)
    STW r25, 0x90+var_1C(r1)
    STW r26, 0x90+var_18(r1)
    STW r27, 0x90+var_14(r1)
    STW r28, 0x90+var_10(r1)
    STW r31, 0x90+var_4(r1)
    STW r0, 0x90+sender_lr(r1)
    STW r16, 0x90+var_40(r1)
    STW r17, 0x90+var_3C(r1)
    STW r18, 0x90+var_38(r1)
    STW r19, 0x90+var_34(r1)
    STW r20, 0x90+var_30(r1)
    STW r29, 0x90+var_C(r1)
    STW r30, 0x90+var_8(r1)
    STW r12, 0x90+var_44(r1)
    MR r27, r3
    MR r31, r1
    MR r23, r4
    MR r26, r5
    MR r21, r6
    MR r25, r7
    MR r22, r8
    MR r24, r9
    MR r28, r10
    LBZ r3, 0(r3)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1033B4B4
loc_1033B114:
    MR r9, r27
    LI r30, 0x1505
    NOP 
loc_1033B120:
    MULLI r30, r30, 0x21
    ADD r30, r3, r30
    LBZU r3, 1(r9)
    CMPWI cr7, r3, 0
    BNE cr7, loc_1033B120
loc_1033B134:
    CMPWI cr4, r25, 0
    LI r9, 0
    LI r10, -1
    STW r9, 0x38(r31)
    STW r10, 0x40(r31)
    STW r9, 0x3C(r31)
    BEQ cr4, loc_1033B15C
loc_1033B150:
    LI r9, -6
    AND. r10, r24, r9
    BNE cr0, loc_1033BB58
loc_1033B15C:
    CMPWI cr3, r28, 0
    LWZ r8, 0(r21)
    BNE cr3, loc_1033B458
loc_1033B168:
    CMPWI cr7, r8, 0
    LI r20, 0
    BEQ cr7, loc_1033B484
loc_1033B174:
    MR r9, r20
    MR r29, r21
    B loc_1033B190
loc_1033B180:
    LWZU r8, 4(r29)
    LI r9, 0
    CMPWI cr7, r8, 0
    BEQ cr7, loc_1033B2E0
loc_1033B190:
    STW r23, 0x90+var_7C(r1)
    STW r22, 0x90+var_80(r1)
    STW r28, 0x90+var_84(r1)
    STW r24, 0x90+var_88(r1)
    MR r10, r25
    ADDI r7, r31, 0x38
    ADDI r5, r31, 0x40
    MR r4, r30
    MR r3, r27
    LWZ r6, 0(r26)
    BL sub_1033A740
    CMPWI cr0, r3, 0
    BGT cr0, loc_1033B2E0
loc_1033B1C4:
    BEQ cr0, loc_1033B180
loc_1033B1C8:
    BNE cr3, loc_1033B180
loc_1033B1CC:
    BEQ cr4, loc_1033BB38
loc_1033B1D0:
    CMPWI cr7, r23, 0
    BEQ cr7, loc_1033B770
loc_1033B1D8:
    LWZ r24, 4(r23)
loc_1033B1DC:
    LBZ r9, 0(r24)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1033B1FC
loc_1033B1E8:
    LIS r9, off_1040FF6C@ha
    LWZ r9, off_1040FF6C@l(r9)
    LWZ r24, (off_1041A910 - 0x1041A910)(r9)
    CMPWI cr7, r24, 0
    BEQ cr7, loc_1033B864
loc_1033B1FC:
    LIS r9, aVersion_0@ha
    CMPWI cr7, r3, -2
    LWZ r8, 0(r25)
    LWZ r10, 0xC(r25)
    ADDI r9, r9, aVersion_0@l
    LIS r4, aSymbol@ha
    STW r9, 0x20(r31)
    LIS r9, aNotDefinedInFi@ha
    ADDI r9, r9, aNotDefinedInFi@l
    ADDI r25, r4, aSymbol@l
    STW r9, 0x28(r31)
    LIS r9, aWithLinkTimeRe@ha
    ADDI r9, r9, aWithLinkTimeRe@l
    STW r25, 0x18(r31)
    STW r27, 0x1C(r31)
    STW r8, 0x24(r31)
    STW r10, 0x2C(r31)
    STW r9, 0x30(r31)
    BEQ cr7, loc_1033B74C
loc_1033B248:
    LIS r9, byte_103F190C@ha
    ADDI r9, r9, byte_103F190C@l
loc_1033B250:
    ADDI r30, r31, 0x18
    STW r9, 0x34(r31)
    ADDI r27, r31, 0x34
    MR r28, r30
    LI r3, 7
    LI r29, 1
    B loc_1033B278
loc_1033B270:
    LWZU r3, 4(r28)
    BL sub_102F6E14
loc_1033B278:
    CMPLW cr7, r28, r27
    ADD r29, r29, r3
    BNE cr7, loc_1033B270
loc_1033B284:
    ADDI r9, r29, 0x1E
    LWZ r10, 0x90+back_chain(r1)
    MR r4, r25
    CLRRWI r9, r9, 4
    NEG r9, r9
    STWUX r10, r1, r9
    ADDI r29, r1, 0x90+var_69
    CLRRWI r29, r29, 4
    MR r3, r29
    B loc_1033B2B4
loc_1033B2B0:
    LWZU r4, 4(r30)
loc_1033B2B4:
    BL sub_102F8700
    CMPLW cr7, r27, r30
    BNE cr7, loc_1033B2B0
loc_1033B2C0:
    LIS r5, aRelocationErro@ha
    MR r6, r29
    ADDI r5, r5, aRelocationErro@l
    MR r4, r24
loc_1033B2D0:
    LI r3, 0
    BL sub_1033DE30
    B loc_1033B4A4
loc_1033B2E0:
    LWZ r9, 0x38(r31)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B484
loc_1033B2EC:
    LWZ r6, 0(r26)
    CMPWI cr7, r6, 0
    BEQ cr7, loc_1033B308
loc_1033B2F8:
    LBZ r9, 0xD(r6)
    CLRLWI r9, r9, 30
    CMPWI cr7, r9, 3
    BEQ cr7, loc_1033B3B0
loc_1033B308:
    LWZ r30, 0x3C(r31)
    LI r29, 0
loc_1033B310:
    LWZ r9, 0x19C(r30)
    LIS r10, -0x8000
    MR r3, r30
    CLRRWI r9, r9, 30
    CMPW cr7, r9, r10
    BEQ cr7, loc_1033B4BC
loc_1033B328:
    LWZ r9, 0x204(r3)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B564
loc_1033B334:
    LIS r9, dword_1041AA5C@ha
    LWZ r9, dword_1041AA5C@l(r9)
    ANDI. r10, r9, 0x804
    BNE cr0, loc_1033B570
loc_1033B344:
    LWZ r9, 0x38(r31)
    STW r9, 0(r26)
loc_1033B34C:
    ADDI r11, r31, 0x90
    LWZ r0, 4(r11)
    LWZ r16, -0x40(r11)
    LWZ r12, -0x44(r11)
    LWZ r31, -4(r11)
    MTLR lr, r0
    LWZ r17, -0x3C(r11)
    LWZ r18, -0x38(r11)
    MTCRF 0x10, r12
    MTCRF 8, r12
    LWZ r19, -0x34(r11)
    LWZ r20, -0x30(r11)
    LWZ r21, -0x2C(r11)
    LWZ r22, -0x28(r11)
    LWZ r23, -0x24(r11)
    LWZ r24, -0x20(r11)
    LWZ r25, -0x1C(r11)
    LWZ r26, -0x18(r11)
    LWZ r27, -0x14(r11)
    LWZ r28, -0x10(r11)
    LWZ r29, -0xC(r11)
    LWZ r30, -8(r11)
    MR r1, r11
    BLR lr
loc_1033B3B0:
    CMPWI cr7, r22, 1
    BEQ cr7, loc_1033B61C
loc_1033B3B8:
    LWZ r8, 0(r21)
    LI r9, 0
    STW r9, 0x18(r31)
    STW r9, 0x1C(r31)
    CMPWI cr7, r8, 0
    BEQ cr7, loc_1033B648
loc_1033B3D0:
    MR r29, r21
    LI r18, 0
    LI r19, 1
    B loc_1033B3F4
loc_1033B3E0:
    LWZU r8, 4(r29)
    CMPWI cr7, r8, 0
    BEQ cr7, loc_1033B428
loc_1033B3EC:
    LWZ r6, 0(r26)
    LI r20, 0
loc_1033B3F4:
    STW r18, 0x90+var_7C(r1)
    STW r19, 0x90+var_80(r1)
    STW r28, 0x90+var_84(r1)
    STW r24, 0x90+var_88(r1)
    MR r10, r25
    MR r9, r20
    ADDI r7, r31, 0x18
    ADDI r5, r31, 0x40
    MR r4, r30
    MR r3, r27
    BL sub_1033A740
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1033B3E0
loc_1033B428:
    LWZ r9, 0x18(r31)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B648
loc_1033B434:
    LWZ r9, 0x1C(r31)
    CMPW cr7, r23, r9
    BEQ cr7, loc_1033B648
loc_1033B440:
    LWZ r9, 0(r26)
    STW r23, 0x3C(r31)
    MR r30, r23
    LI r29, 1
    STW r9, 0x38(r31)
    B loc_1033B310
loc_1033B458:
    LWZ r10, 0(r8)
    LI r20, 0
    LWZ r9, 0(r10)
    CMPW cr7, r28, r9
    BEQ cr7, loc_1033B174
loc_1033B46C:
    NOP 
loc_1033B470:
    LWZU r9, 4(r10)
    ADDI r20, r20, 1
    CMPW cr7, r28, r9
    BNE cr7, loc_1033B470
loc_1033B480:
    B loc_1033B174
loc_1033B484:
    LWZ r9, 0(r26)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B4A0
loc_1033B490:
    LBZ r9, 0xC(r9)
    SRWI r9, r9, 4
    CMPWI cr7, r9, 2
    BEQ cr7, loc_1033B4A4
loc_1033B4A0:
    BEQ cr3, loc_1033B654
loc_1033B4A4:
    LI r9, 0
    LI r3, 0
    STW r9, 0(r26)
    B loc_1033B34C
loc_1033B4B4:
    LI r30, 0x1505
    B loc_1033B134
loc_1033B4BC:
    ANDI. r9, r24, 1
    BEQ cr0, loc_1033B328
loc_1033B4C4:
    CMPLW cr7, r23, r30
    BEQ cr7, loc_1033B870
loc_1033B4CC:
    LWZ r9, 0x20C(r30)
    ANDI. r10, r9, 8
    BNE cr0, loc_1033B328
loc_1033B4D8:
    LWZ r19, 0x1FC(r23)
    SYNC 0, 0
    LWZ r18, 0x1F8(r23)
    CMPWI cr7, r18, 0
    BEQ cr7, loc_1033B524
loc_1033B4EC:
    LWZ r9, 0(r18)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B524
loc_1033B4F8:
    CMPLW cr7, r30, r9
    MR r10, r18
    BNE cr7, loc_1033B518
loc_1033B504:
    B loc_1033B55C
loc_1033B510:
    CMPLW cr7, r9, r30
    BEQ cr7, loc_1033B55C
loc_1033B518:
    LWZU r9, 4(r10)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1033B510
loc_1033B524:
    CMPWI cr7, r19, 0
    BEQ cr7, loc_1033B77C
loc_1033B52C:
    LWZ r20, 0(r19)
    ADDI r10, r19, 4
    CMPWI cr7, r20, 0
    BEQ cr7, loc_1033B780
loc_1033B53C:
    MTCTR ctr, r20
    LWZ r9, 4(r19)
    CMPW cr7, r9, r30
    BEQ cr7, loc_1033B55C
loc_1033B54C:
    BDZ cr0, loc_1033B780
loc_1033B550:
    LWZU r9, 4(r10)
    CMPW cr7, r9, r30
    BNE cr7, loc_1033B54C
loc_1033B55C:
    LWZ r3, 0x3C(r31)
    B loc_1033B328
loc_1033B564:
    LI r9, 1
    STW r9, 0x204(r3)
    B loc_1033B334
loc_1033B570:
    ANDI. r10, r9, 4
    BEQ cr0, loc_1033B344
loc_1033B578:
    LWZ r4, 4(r23)
    LBZ r9, 0(r4)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1033B5A4
loc_1033B588:
    LIS r9, off_1040FF6C@ha
    LWZ r9, off_1040FF6C@l(r9)
    LWZ r4, (off_1041A910 - 0x1041A910)(r9)
    CMPWI cr7, r4, 0
    BNE cr7, loc_1033B5A4
loc_1033B59C:
    LIS r4, aMainProgram@ha
    ADDI r4, r4, aMainProgram@l
loc_1033B5A4:
    LWZ r6, 4(r3)
    LWZ r5, 0x18(r23)
    LBZ r9, 0(r6)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1033B5D4
loc_1033B5B8:
    LIS r9, off_1040FF6C@ha
    LWZ r9, off_1040FF6C@l(r9)
    LWZ r6, (off_1041A910 - 0x1041A910)(r9)
    CMPWI cr7, r6, 0
    BNE cr7, loc_1033B5D4
loc_1033B5CC:
    LIS r6, aMainProgram@ha
    ADDI r6, r6, aMainProgram@l
loc_1033B5D4:
    CMPWI cr7, r29, 0
    LWZ r7, 0x18(r3)
    BNE cr7, loc_1033B63C
loc_1033B5E0:
    LIS r8, aNormal@ha
    ADDI r8, r8, aNormal@l
loc_1033B5E8:
    LIS r3, aBindingFileSLu@ha
    MR r9, r27
    ADDI r3, r3, aBindingFileSLu@l
    CRCLR 4*cr1+eq
    BL sub_1033E750
    BEQ cr4, loc_1033B758
loc_1033B600:
    LWZ r4, 0(r25)
    LIS r3, aS_18@ha
    ADDI r3, r3, aS_18@l
    CRCLR 4*cr1+eq
    BL sub_1033E7F0
    LWZ r3, 0x3C(r31)
    B loc_1033B344
loc_1033B61C:
    LWZ r9, 0x3C(r31)
    CMPW cr7, r23, r9
    BEQ cr7, loc_1033B858
loc_1033B628:
    STW r6, 0x38(r31)
    STW r23, 0x3C(r31)
    MR r30, r23
    LI r29, 1
    B loc_1033B310
loc_1033B63C:
    LIS r8, aProtected@ha
    ADDI r8, r8, aProtected@l
    B loc_1033B5E8
loc_1033B648:
    LWZ r30, 0x3C(r31)
    LI r29, 1
    B loc_1033B310
loc_1033B654:
    LIS r9, dword_1041AA5C@ha
    LWZ r9, dword_1041AA5C@l(r9)
    ANDI. r10, r9, 0x100
    BNE cr0, loc_1033B4A4
loc_1033B664:
    CMPWI cr7, r23, 0
    BEQ cr7, loc_1033B878
loc_1033B66C:
    LWZ r10, 4(r23)
loc_1033B670:
    BEQ cr4, loc_1033B8D4
loc_1033B674:
    LWZ r8, 0(r25)
    LIS r9, aVersion_0@ha
    ADDI r9, r9, aVersion_0@l
    CMPWI cr7, r8, 0
    BEQ cr7, loc_1033B8C8
loc_1033B688:
    LBZ r7, 0(r10)
    MR r28, r10
    CMPWI cr7, r7, 0
    BNE cr7, loc_1033B6AC
loc_1033B698:
    LIS r10, off_1040FF6C@ha
    LWZ r10, off_1040FF6C@l(r10)
    LWZ r28, (off_1041A910 - 0x1041A910)(r10)
    CMPWI cr7, r28, 0
    BEQ cr7, loc_1033BB78
loc_1033B6AC:
    STW r27, 0x1C(r31)
    ADDI r27, r31, 0x18
    ADDI r24, r31, 0x24
    MR r25, r27
    CMPLW cr7, r25, r24
    LIS r4, aUndefinedSymbo@ha
    ADDI r29, r4, aUndefinedSymbo@l
    LI r3, 0x12
    LI r30, 1
    STW r29, 0x18(r31)
    STW r9, 0x20(r31)
    STW r8, 0x24(r31)
    ADD r30, r30, r3
    BEQ cr7, loc_1033B6F8
loc_1033B6E4:
    LWZU r3, 4(r25)
    BL sub_102F6E14
    CMPLW cr7, r25, r24
    ADD r30, r30, r3
    BNE cr7, loc_1033B6E4
loc_1033B6F8:
    ADDI r9, r30, 0x1E
    LWZ r10, 0x90+back_chain(r1)
    MR r4, r29
    CLRRWI r9, r9, 4
    NEG r9, r9
    STWUX r10, r1, r9
    ADDI r30, r1, 0x90+var_69
    CLRRWI r30, r30, 4
    MR r3, r30
    BL sub_102F8700
    CMPLW cr7, r27, r24
    BEQ cr7, loc_1033B738
loc_1033B728:
    LWZU r4, 4(r27)
    BL sub_102F8700
    CMPLW cr7, r27, r24
    BNE cr7, loc_1033B728
loc_1033B738:
    LIS r5, aSymbolLookupEr@ha
    MR r6, r30
    ADDI r5, r5, aSymbolLookupEr@l
    MR r4, r28
    B loc_1033B2D0
loc_1033B74C:
    LIS r9, aNoVersionSymbo@ha
    ADDI r9, r9, aNoVersionSymbo@l
    B loc_1033B250
loc_1033B758:
    LIS r3, (aFileSLuNeededB_0+0x3C)@ha
    ADDI r3, r3, (aFileSLuNeededB_0+0x3C)@l
    CRCLR 4*cr1+eq
    BL sub_1033E7F0
    LWZ r3, 0x3C(r31)
    B loc_1033B344
loc_1033B770:
    LIS r24, byte_103F190C@ha
    ADDI r24, r24, byte_103F190C@l
    B loc_1033B1DC
loc_1033B77C:
    LI r20, 0
loc_1033B780:
    EXTRWI r9, r24, 1,29
    LWZ r16, 0x250(r30)
    LWZ r17, 0x254(r30)
    CMPWI cr3, r9, 0
    BNE cr3, loc_1033B9C0
loc_1033B794:
    LIS r9, 0
    ADDI r9, r9, 0
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B7B0
loc_1033B7A4:
    LIS r3, dword_1041A600@ha
    ADDI r3, r3, dword_1041A600@l
    BL dword_10000000
loc_1033B7B0:
    LWZ r9, 0x18(r23)
    LIS r10, off_1041A61C@ha
    ADDI r10, r10, off_1041A61C@l
    MULLI r9, r9, 0x4C
    LWZX r9, r10, r9
    CMPWI cr7, r9, 0
    BNE cr7, loc_1033B7DC
loc_1033B7CC:
    B loc_1033B8C0
loc_1033B7D0:
    LWZ r9, 0xC(r9)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B8C0
loc_1033B7DC:
    CMPLW cr7, r9, r30
    BNE cr7, loc_1033B7D0
loc_1033B7E4:
    LWZ r9, 0x250(r30)
    LWZ r10, 0x254(r30)
    CMPLW cr7, r16, r9
    BEQ cr7, loc_1033B884
loc_1033B7F4:
    XOR r9, r16, r9
    XOR r10, r17, r10
    OR r9, r9, r10
    SUBFIC r9, r9, 0
    SUBFE r30, r30, r30
loc_1033B808:
    LIS r9, 0
    ADDI r9, r9, 0
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B824
loc_1033B818:
    LIS r3, dword_1041A600@ha
    ADDI r3, r3, dword_1041A600@l
    BL dword_10000000
loc_1033B824:
    BNE cr3, loc_1033B9A4
loc_1033B828:
    CMPWI cr7, r30, -1
    MR r6, r21
    BNE cr7, loc_1033B55C
loc_1033B834:
    MR r10, r28
    MR r9, r24
    MR r8, r22
    MR r7, r25
    MR r5, r26
    MR r4, r23
    MR r3, r27
    BL sub_1033B090
    B loc_1033B34C
loc_1033B858:
    MR r30, r23
    LI r29, 1
    B loc_1033B310
loc_1033B864:
    LIS r24, aMainProgram@ha
    ADDI r24, r24, aMainProgram@l
    B loc_1033B1FC
loc_1033B870:
    MR r3, r23
    B loc_1033B328
loc_1033B878:
    LIS r10, byte_103F190C@ha
    ADDI r10, r10, byte_103F190C@l
    B loc_1033B670
loc_1033B884:
    CMPLW cr7, r17, r10
    BNE cr7, loc_1033B7F4
loc_1033B88C:
    LWZ r18, 0x20C(r30)
    ANDI. r9, r18, 8
    BNE cr0, loc_1033B99C
loc_1033B898:
    LWZ r9, 0x19C(r23)
    LIS r10, -0x8000
    CLRRWI r9, r9, 30
    CMPW cr7, r9, r10
    BEQ cr7, loc_1033B8E4
loc_1033B8AC:
    ORI r18, r18, 8
    STW r18, 0x20C(r30)
    LI r30, 0
    B loc_1033B808
loc_1033B8C0:
    LI r30, -1
    B loc_1033B808
loc_1033B8C8:
    LIS r8, byte_103F190C@ha
    ADDI r8, r8, byte_103F190C@l
    B loc_1033B688
loc_1033B8D4:
    LIS r9, byte_103F190C@ha
    ADDI r9, r9, byte_103F190C@l
    MR r8, r9
    B loc_1033B688
loc_1033B8E4:
    LWZ r9, 0x20C(r23)
    ANDI. r10, r9, 8
    BNE cr0, loc_1033B8AC
loc_1033B8F0:
    LWZ r19, 0x200(r23)
    CMPLW cr7, r19, r20
    BLE cr7, loc_1033BB84
loc_1033B8FC:
    LWZ r10, 0x1FC(r23)
    SLWI r9, r20, 2
    ADD r9, r10, r9
    STW r30, 4(r9)
    SYNC 0, 0
    LWZ r9, 0x1FC(r23)
    ADDI r20, r20, 1
    STW r20, 0(r9)
loc_1033B91C:
    LIS r9, dword_1041AA5C@ha
    LWZ r9, dword_1041AA5C@l(r9)
    ANDI. r10, r9, 0x40
    BEQ cr0, loc_1033B99C
loc_1033B92C:
    LWZ r4, 4(r30)
    LBZ r9, 0(r4)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1033B958
loc_1033B93C:
    LIS r9, off_1040FF6C@ha
    LWZ r9, off_1040FF6C@l(r9)
    LWZ r4, (off_1041A910 - 0x1041A910)(r9)
    CMPWI cr7, r4, 0
    BNE cr7, loc_1033B958
loc_1033B950:
    LIS r4, aMainProgram@ha
    ADDI r4, r4, aMainProgram@l
loc_1033B958:
    LWZ r6, 4(r23)
    LWZ r5, 0x18(r30)
    LBZ r9, 0(r6)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1033B988
loc_1033B96C:
    LIS r9, off_1040FF6C@ha
    LWZ r9, off_1040FF6C@l(r9)
    LWZ r6, (off_1041A910 - 0x1041A910)(r9)
    CMPWI cr7, r6, 0
    BNE cr7, loc_1033B988
loc_1033B980:
    LIS r6, aMainProgram@ha
    ADDI r6, r6, aMainProgram@l
loc_1033B988:
    LIS r3, aFileSLuNeededB_0@ha
    LWZ r7, 0x18(r23)
    ADDI r3, r3, aFileSLuNeededB_0@l
    CRCLR 4*cr1+eq
    BL sub_1033E750
loc_1033B99C:
    LI r30, 0
    B loc_1033B808
loc_1033B9A4:
    LI r9, 1
    STW r9, -0x74CC(r2)
    SYNC 0, 0
    CMPWI cr7, r30, -1
    BNE- cr7, loc_1033B55C
loc_1033B9B8:
    LWZ r6, 0x1D4(r23)
    B loc_1033B834
loc_1033B9C0:
    ADDI r8, r2, -0x74CC
    LI r7, 0
    SYNC 0, 0
loc_1033B9CC:
    LWARX r10, 0, r8
    STWCX. r7, 0, r8
    BNE- cr0, loc_1033B9CC
loc_1033B9D8:
    CMPWI cr7, r10, 2
    BEQ cr7, loc_1033BA98
loc_1033B9E0:
    LIS r9, 0
    ADDI r9, r9, 0
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B9FC
loc_1033B9F0:
    LIS r3, dword_1041A600@ha
    ADDI r3, r3, dword_1041A600@l
    BL dword_10000000
loc_1033B9FC:
    LWZ r9, 0x1F8(r23)
    MR r10, r30
    CMPLW cr7, r18, r9
    MR r30, r10
    BEQ cr7, loc_1033BA44
loc_1033BA10:
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033BA44
loc_1033BA18:
    LWZ r8, 0(r9)
    CMPWI cr7, r8, 0
    BEQ cr7, loc_1033BA44
loc_1033BA24:
    CMPLW cr7, r8, r10
    BNE cr7, loc_1033BA38
loc_1033BA2C:
    B loc_1033BAD8
loc_1033BA30:
    CMPLW cr7, r10, r8
    BEQ cr7, loc_1033BA8C
loc_1033BA38:
    LWZU r8, 4(r9)
    CMPWI cr7, r8, 0
    BNE cr7, loc_1033BA30
loc_1033BA44:
    LWZ r9, 0x1FC(r23)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1033B7B0
loc_1033BA50:
    CMPLW cr7, r19, r9
    BEQ cr7, loc_1033BAE4
loc_1033BA58:
    LWZ r20, 0(r9)
    ADDI r8, r9, 4
    CMPWI cr7, r20, 0
    BEQ cr7, loc_1033B7B0
loc_1033BA68:
    MTCTR ctr, r20
    LWZ r7, 4(r9)
    MR r9, r8
    CMPLW cr7, r7, r10
    BEQ cr7, loc_1033BA8C
loc_1033BA7C:
    BDZ cr0, loc_1033B7B0
loc_1033BA80:
    LWZU r8, 4(r9)
    CMPLW cr7, r10, r8
    BNE cr7, loc_1033BA7C
loc_1033BA8C:
    LWZ r9, 0x250(r10)
    LWZ r10, 0x254(r10)
    B loc_1033B7F4
loc_1033BA98:
    LWZ r9, -0x7030(r2)
    LI r0, 0xDD
    MR r3, r8
    LI r4, 0x81
    LI r5, 1
    CMPWI cr7, r9, 0
    LI r6, 0
    BEQ cr7, loc_1033BACC
loc_1033BAB8:
    LI r9, 0x31
    TABORT. r9
    MFCR r9
    EXTRWI r9, r9, 1,2
    XORI r9, r9, 1
loc_1033BACC:
    SC 0
    MFCR r0
    B loc_1033B9E0
loc_1033BAD8:
    LWZ r9, 0x250(r10)
    LWZ r10, 0x254(r10)
    B loc_1033B7F4
loc_1033BAE4:
    LWZ r8, 0(r19)
    CMPLW cr7, r8, r20
    BLE cr7, loc_1033B7B0
loc_1033BAF0:
    ADDI r19, r19, 4
    SLWI r9, r20, 2
    LWZX r7, r19, r9
    ADD r19, r19, r9
    CMPLW cr7, r7, r10
    BEQ cr7, loc_1033BA8C
loc_1033BB08:
    ADDI r9, r20, 1
    SUBF r20, r20, r8
    CMPLW cr7, r9, r8
    BLE+ cr7, loc_1033BB1C
loc_1033BB18:
    LI r20, 1
loc_1033BB1C:
    CMPWI cr0, r20, 1
    ADDI r20, r20, -1
    BEQ cr0, loc_1033BC04
loc_1033BB28:
    LWZU r9, 4(r19)
    CMPLW cr7, r10, r9
    BNE cr7, loc_1033BB1C
loc_1033BB34:
    B loc_1033BA8C
loc_1033BB38:
    LIS r6, aDlLookupSymbol@ha
    LIS r4, aDlLookupC@ha
    LIS r3, aVersionNull@ha
    ADDI r6, r6, aDlLookupSymbol@l
    LI r5, 0x348
    ADDI r4, r4, aDlLookupC@l
    ADDI r3, r3, aVersionNull@l
    BL sub_102CAFA0
loc_1033BB58:
    LIS r6, aDlLookupSymbol@ha
    LIS r4, aDlLookupC@ha
    LIS r3, aVersionNullFla@ha
    ADDI r6, r6, aDlLookupSymbol@l
    LI r5, 0x332
    ADDI r4, r4, aDlLookupC@l
    ADDI r3, r3, aVersionNullFla@l
    BL sub_102CAFA0
loc_1033BB78:
    LIS r10, aMainProgram@ha
    ADDI r28, r10, aMainProgram@l
    B loc_1033B6AC
loc_1033BB84:
    CMPWI cr7, r19, 0
    BEQ cr7, loc_1033BBF8
loc_1033BB8C:
    SLWI r19, r19, 1
    ADDI r3, r19, 1
    SLWI r3, r3, 2
loc_1033BB98:
    BL sub_102F3670
    MR. r17, r3
    BEQ cr0, loc_1033B8AC
loc_1033BBA4:
    CMPWI cr7, r20, 0
    LI r18, 0
    BEQ cr7, loc_1033BBC8
loc_1033BBB0:
    LWZ r4, 0x1FC(r23)
    SLWI r18, r20, 2
    ADDI r3, r17, 4
    MR r5, r18
    ADDI r4, r4, 4
    BL sub_102F89C0
loc_1033BBC8:
    ADD r18, r17, r18
    ADDI r20, r20, 1
    STW r30, 4(r18)
    STW r20, 0(r17)
    SYNC 0, 0
    LWZ r3, 0x1FC(r23)
    STW r19, 0x200(r23)
    STW r17, 0x1FC(r23)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1033B91C
loc_1033BBF0:
    BL sub_10340240
    B loc_1033B91C
loc_1033BBF8:
    LI r3, 0x2C
    LI r19, 0xA
    B loc_1033BB98
loc_1033BC04:
    MR r20, r8
    B loc_1033B7B0

=====

0, powerpc

######
test_rc4_init_key:
loc_1029974C:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x30+sender_lr(r1)
    STW r29, 0x30+var_C(r1)
    STW r30, 0x30+var_8(r1)
    STW r31, 0x30+var_4(r1)
    MR r31, r1
    STW r3, 0x1C(r31)
    STW r4, 0x18(r31)
    STW r5, 0x14(r31)
    STW r6, 0x10(r31)
    LIS r9, off_1041A8E8@ha
    LWZ r9, off_1041A8E8@l(r9)
    MR r6, r9
    LI r5, 0x2E
    LI r4, 1
    LIS r9, aTestEngOpenssl@ha
    ADDI r3, r9, aTestEngOpenssl@l
    BL sub_102E2AE0
    LWZ r3, 0x1C(r31)
    BL sub_10171DD8
    MR r9, r3
    MR r30, r9
    LWZ r3, 0x1C(r31)
    BL sub_10171FE0
    MR r9, r3
    MR r5, r9
    LWZ r4, 0x18(r31)
    MR r3, r30
    BL sub_102F89C0
    LWZ r3, 0x1C(r31)
    BL sub_10171DD8
    MR r9, r3
    ADDI r30, r9, 0x10
    LWZ r3, 0x1C(r31)
    BL sub_10171FE0
    MR r29, r3
    LWZ r3, 0x1C(r31)
    BL sub_10171DD8
    MR r9, r3
    MR r5, r9
    MR r4, r29
    MR r3, r30
    BL sub_101C5784
    LI r9, 1
    MR r3, r9
    ADDI r11, r31, 0x30
    LWZ r0, 4(r11)
    MTLR lr, r0
    LWZ r29, -0xC(r11)
    LWZ r30, -8(r11)
    LWZ r31, -4(r11)
    MR r1, r11
    BLR lr

=====

0, powerpc

######
TS_RESP_CTX_set_signer_digest:
loc_101FBE04:
    STWU r1, back_chain(r1)
    STW r31, 0x20+var_4(r1)
    MR r31, r1
    STW r3, 0xC(r31)
    STW r4, 8(r31)
    LWZ r9, 0xC(r31)
    LWZ r10, 8(r31)
    STW r10, 8(r9)
    LI r9, 1
    MR r3, r9
    ADDI r11, r31, 0x20
    LWZ r31, -4(r11)
    MR r1, r11
    BLR lr

=====

0, powerpc

######
ssl3_digest_cached_records:
loc_100CE1B4:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x30+sender_lr(r1)
    STW r30, 0x30+var_8(r1)
    STW r31, 0x30+var_4(r1)
    MR r31, r1
    STW r3, 0xC(r31)
    STW r4, 8(r31)
    LWZ r9, -0x7008(r2)
    STW r9, 0x1C(r31)
    LI r9, 0
    LWZ r9, 0xC(r31)
    LWZ r9, 0x74(r9)
    LWZ r9, 0xD8(r9)
    CMPWI cr7, r9, 0
    BNE cr7, loc_100CE32C
loc_100CE1F4:
    LWZ r9, 0xC(r31)
    LWZ r9, 0x74(r9)
    LWZ r9, 0xD4(r9)
    ADDI r10, r31, 0x10
    MR r6, r10
    LI r5, 0
    LI r4, 3
    MR r3, r9
    BL sub_100FB208
    STW r3, 0x14(r31)
    LWZ r9, 0x14(r31)
    CMPWI cr7, r9, 0
    BGT cr7, loc_100CE24C
loc_100CE228:
    LI r7, 0x15B
    LIS r9, aSslS3EncC@ha
    ADDI r6, r9, aSslS3EncC@l
    LI r5, 0x14C
    LI r4, 0x125
    LI r3, 0x14
    BL sub_1015E9A0
    LI r9, 0
    B loc_100CE360
loc_100CE24C:
    LWZ r9, 0xC(r31)
    LWZ r30, 0x74(r9)
    BL sub_10163418
    MR r9, r3
    STW r9, 0xD8(r30)
    LWZ r9, 0xC(r31)
    LWZ r9, 0x74(r9)
    LWZ r9, 0xD8(r9)
    CMPWI cr7, r9, 0
    BNE cr7, loc_100CE298
loc_100CE274:
    LI r7, 0x161
    LIS r9, aSslS3EncC@ha
    ADDI r6, r9, aSslS3EncC@l
    LI r5, 0x41
    LI r4, 0x125
    LI r3, 0x14
    BL sub_1015E9A0
    LI r9, 0
    B loc_100CE360
loc_100CE298:
    LWZ r3, 0xC(r31)
    BL sub_1007D018
    STW r3, 0x18(r31)
    LWZ r9, 0x18(r31)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_100CE308
loc_100CE2B0:
    LWZ r9, 0xC(r31)
    LWZ r9, 0x74(r9)
    LWZ r9, 0xD8(r9)
    LI r5, 0
    LWZ r4, 0x18(r31)
    MR r3, r9
    BL sub_10163504
    MR r9, r3
    CMPWI cr7, r9, 0
    BEQ cr7, loc_100CE308
loc_100CE2D8:
    LWZ r9, 0xC(r31)
    LWZ r9, 0x74(r9)
    LWZ r9, 0xD8(r9)
    LWZ r10, 0x10(r31)
    LWZ r8, 0x14(r31)
    MR r5, r8
    MR r4, r10
    MR r3, r9
    BL sub_10163874
    MR r9, r3
    CMPWI cr7, r9, 0
    BNE cr7, loc_100CE32C
loc_100CE308:
    LI r7, 0x168
    LIS r9, aSslS3EncC@ha
    ADDI r6, r9, aSslS3EncC@l
    LI r5, 0x44
    LI r4, 0x125
    LI r3, 0x14
    BL sub_1015E9A0
    LI r9, 0
    B loc_100CE360
loc_100CE32C:
    LWZ r9, 8(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_100CE35C
loc_100CE338:
    LWZ r9, 0xC(r31)
    LWZ r9, 0x74(r9)
    LWZ r9, 0xD4(r9)
    MR r3, r9
    BL sub_100F9F24
    LWZ r9, 0xC(r31)
    LWZ r9, 0x74(r9)
    LI r10, 0
    STW r10, 0xD4(r9)
loc_100CE35C:
    LI r9, 1
loc_100CE360:
    MR r3, r9
    LWZ r10, 0x1C(r31)
    LWZ r9, -0x7008(r2)
    CMPLW cr7, r10, r9
    LI r10, 0
    LI r9, 0
    BEQ cr7, loc_100CE380
loc_100CE37C:
    BL sub_10307800
loc_100CE380:
    ADDI r11, r31, 0x30
    LWZ r0, 4(r11)
    MTLR lr, r0
    LWZ r30, -8(r11)
    LWZ r31, -4(r11)
    MR r1, r11
    BLR lr

=====

0, powerpc

######
X509_STORE_CTX_get0_chain:
loc_10219AAC:
    STWU r1, back_chain(r1)
    STW r31, 0x20+var_4(r1)
    MR r31, r1
    STW r3, 0xC(r31)
    LWZ r9, 0xC(r31)
    LWZ r9, 0x50(r9)
    MR r3, r9
    ADDI r11, r31, 0x20
    LWZ r31, -4(r11)
    MR r1, r11
    BLR lr

=====

0, powerpc

######
_IO_new_file_seekoff:
loc_102E8570:
    STWU r1, back_chain(r1)
    CMPWI cr7, r8, 0
    MFLR r0, lr
    STW r31, 0xA0+var_4(r1)
    STW r0, 0xA0+sender_lr(r1)
    STW r24, 0xA0+var_20(r1)
    STW r25, 0xA0+var_1C(r1)
    STW r26, 0xA0+var_18(r1)
    STW r27, 0xA0+var_14(r1)
    STW r28, 0xA0+var_10(r1)
    STW r29, 0xA0+var_C(r1)
    STW r30, 0xA0+var_8(r1)
    MR r31, r3
    BEQ cr7, loc_102E8970
loc_102E85A8:
    LWZ r9, 0xC(r3)
    LWZ r10, 8(r3)
    MR r30, r5
    MR r29, r6
    MR r28, r7
    CMPW cr7, r9, r10
    BEQ cr7, loc_102E86C0
loc_102E85C4:
    LWZ r10, 0x14(r3)
    LWZ r9, 0x10(r3)
loc_102E85CC:
    CMPLW cr7, r9, r10
    LI r27, 0
    BGE cr7, loc_102E86E0
loc_102E85D8:
    MR r3, r31
    BL sub_102EBA40
    CMPWI cr7, r3, 0
    BNE cr7, loc_102E89DC
loc_102E85E8:
    LWZ r9, 0x1C(r31)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_102E86F8
loc_102E85F4:
    CMPWI cr7, r28, 1
    BEQ cr7, loc_102E8740
loc_102E85FC:
    CMPWI cr7, r28, 2
    BNE cr7, loc_102E8860
loc_102E8604:
    LWZ r9, 0x98(r31)
    ADDI r4, r1, 0xA0+var_98
    MR r3, r31
    LWZ r9, 0x48(r9)
    MTCTR ctr, r9
    BCTRL ctr
    CMPWI cr7, r3, 0
    BEQ cr7, loc_102E8830
loc_102E8624:
    MR r3, r31
    BL sub_102ED440
    LWZ r9, 0x98(r31)
    MR r7, r28
    MR r5, r30
    MR r6, r29
    MR r3, r31
    LWZ r9, 0x40(r9)
    MTCTR ctr, r9
    BCTRL ctr
    CMPWI cr7, r3, -1
    BEQ cr7, loc_102E8B10
loc_102E8654:
    LWZ r10, 0(r31)
    LWZ r9, 0x1C(r31)
    STW r3, 0x50(r31)
    STW r4, 0x54(r31)
    RLWINM r10, r10, 0,28,26
    STW r9, 0xC(r31)
    STW r10, 0(r31)
    STW r9, 4(r31)
    STW r9, 8(r31)
    STW r9, 0x14(r31)
    STW r9, 0x10(r31)
    STW r9, 0x18(r31)
loc_102E8684:
    LWZ r0, 0xA0+sender_lr(r1)
    LWZ r24, 0xA0+var_20(r1)
    LWZ r25, 0xA0+var_1C(r1)
    LWZ r26, 0xA0+var_18(r1)
    MTLR lr, r0
    LWZ r27, 0xA0+var_14(r1)
    LWZ r28, 0xA0+var_10(r1)
    LWZ r29, 0xA0+var_C(r1)
    LWZ r30, 0xA0+var_8(r1)
    LWZ r31, 0xA0+var_4(r1)
    ADDI r1, r1, 0xA0
    BLR lr
loc_102E86C0:
    LWZ r9, 0x10(r3)
    LWZ r10, 0x14(r3)
    CMPLW cr7, r9, r10
    BNE cr7, loc_102E85CC
loc_102E86D0:
    LI r27, 1
    NOP 
    NOP 
    NOP 
loc_102E86E0:
    LWZ r9, 0(r31)
    ANDI. r10, r9, 0x800
    BNE cr0, loc_102E85D8
loc_102E86EC:
    LWZ r9, 0x1C(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_102E85F4
loc_102E86F8:
    LWZ r3, 0xC(r31)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_102E8714
loc_102E8704:
    BL sub_102F3F70
    LWZ r9, 0(r31)
    RLWINM r9, r9, 0,24,22
    STW r9, 0(r31)
loc_102E8714:
    MR r3, r31
    BL sub_102EBF50
    CMPWI cr7, r28, 1
    LWZ r9, 0x1C(r31)
    STW r9, 0x14(r31)
    STW r9, 0x10(r31)
    STW r9, 0x18(r31)
    STW r9, 0xC(r31)
    STW r9, 4(r31)
    STW r9, 8(r31)
    BNE cr7, loc_102E85FC
loc_102E8740:
    LWZ r9, 4(r31)
    LWZ r4, 8(r31)
    LWZ r5, 0x50(r31)
    LWZ r6, 0x54(r31)
    SUBF r4, r9, r4
    CMPWI cr7, r5, -1
    SRAWI r9, r4, 0x1F
    SUBFC r4, r4, r29
    SUBFE r9, r9, r30
    MR r29, r4
    MR r30, r9
    BEQ cr7, loc_102E8AC0
loc_102E8770:
    ADDC r4, r4, r6
    ADDE r30, r9, r5
    MR r29, r4
    CMPWI cr7, r30, 0
    BLT cr7, loc_102E89C4
loc_102E8784:
    LI r28, 0
loc_102E8788:
    LWZ r9, 0xC(r31)
    CMPWI cr7, r9, 0
    LWZ r9, 0(r31)
    BEQ cr7, loc_102E887C
loc_102E8798:
    ANDI. r10, r9, 0x100
    BNE cr0, loc_102E887C
loc_102E87A0:
    LWZ r7, 0x1C(r31)
    LWZ r10, 8(r31)
    SUBF r10, r7, r10
    SRAWI r8, r10, 0x1F
    SUBFC r10, r10, r6
    SUBFE r8, r8, r5
    CMPW cr7, r8, r30
    BGT cr7, loc_102E887C
loc_102E87C0:
    CMPLW cr7, r8, r30
    BEQ cr7, loc_102E8B70
loc_102E87C8:
    CMPW cr7, r5, r30
    BGT cr7, loc_102E87E0
loc_102E87D0:
    CMPLW cr7, r5, r30
    BNE cr7, loc_102E887C
loc_102E87D8:
    CMPLW cr7, r6, r29
    BLE cr7, loc_102E887C
loc_102E87E0:
    CMPWI cr7, r5, 0
    SUBF r10, r10, r29
    ADD r10, r7, r10
    RLWINM r9, r9, 0,28,26
    STW r7, 0xC(r31)
    STW r10, 4(r31)
    STW r7, 0x14(r31)
    STW r7, 0x10(r31)
    STW r7, 0x18(r31)
    STW r9, 0(r31)
    BLT cr7, loc_102E8AD0
loc_102E880C:
    LWZ r9, 0x98(r31)
    LI r7, 0
    MR r3, r31
    LWZ r9, 0x40(r9)
    MTCTR ctr, r9
    BCTRL ctr
    MR r3, r30
    MR r4, r29
    B loc_102E8684
loc_102E8830:
    LWZ r9, 0xA0+var_88(r1)
    RLWINM r9, r9, 0,16,19
    XORIS r10, r9, 0xFFFF
    CMPWI cr7, r10, -0x8000
    BNE cr7, loc_102E8624
loc_102E8844:
    LWZ r4, 0xA0+var_64(r1)
    LWZ r9, 0xA0+var_68(r1)
    LI r28, 0
    ADDC r4, r29, r4
    ADDE r30, r30, r9
    MR r29, r4
    NOP 
loc_102E8860:
    LWZ r5, 0x50(r31)
    LWZ r6, 0x54(r31)
    CMPWI cr7, r5, -1
    BNE cr7, loc_102E8788
loc_102E8870:
    CMPWI cr7, r6, -1
    BNE cr7, loc_102E8788
loc_102E8878:
    LWZ r9, 0(r31)
loc_102E887C:
    ANDI. r10, r9, 4
    BNE cr0, loc_102E8624
loc_102E8884:
    LWZ r10, 0x20(r31)
    LWZ r9, 0x1C(r31)
    SUBF r6, r10, r9
    SUBF r9, r9, r10
    SRAWI r5, r6, 0x1F
    AND r6, r6, r29
    SUBFC r28, r6, r29
    AND r5, r5, r30
    SUBFE r26, r5, r30
    SRAWI r10, r9, 0x1F
    CMPW cr7, r26, r10
    BLE cr7, loc_102E8A20
loc_102E88B4:
    LWZ r9, 0x98(r31)
    LI r7, 0
    MR r5, r30
    MR r6, r29
    MR r3, r31
    LWZ r9, 0x40(r9)
    MTCTR ctr, r9
    BCTRL ctr
    MR. r24, r3
    MR r25, r4
    BLT cr0, loc_102E89DC
loc_102E88E0:
    LI r10, 0
    LI r4, 0
    LI r3, 0
    LI r28, 0
loc_102E88F0:
    LWZ r0, 0xA0+sender_lr(r1)
    LWZ r9, 0x1C(r31)
    ADDC r4, r25, r4
    LWZ r8, 0(r31)
    ADDE r10, r24, r10
    STW r4, 0x54(r31)
    MTLR lr, r0
    ADD r28, r9, r28
    LWZ r24, 0xA0+var_20(r1)
    LWZ r25, 0xA0+var_1C(r1)
    ADD r3, r9, r3
    RLWINM r8, r8, 0,28,26
    LWZ r26, 0xA0+var_18(r1)
    LWZ r27, 0xA0+var_14(r1)
    STW r28, 4(r31)
    STW r3, 8(r31)
    STW r9, 0xC(r31)
    STW r9, 0x14(r31)
    STW r9, 0x10(r31)
    STW r9, 0x18(r31)
    STW r10, 0x50(r31)
    STW r8, 0(r31)
    MR r3, r30
    MR r4, r29
    LWZ r28, 0xA0+var_10(r1)
    LWZ r29, 0xA0+var_C(r1)
    LWZ r30, 0xA0+var_8(r1)
    LWZ r31, 0xA0+var_4(r1)
    ADDI r1, r1, 0xA0
    BLR lr
loc_102E8970:
    LWZ r9, 0x1C(r3)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_102E8B80
loc_102E897C:
    LWZ r29, 0x14(r3)
    LWZ r9, 0x10(r3)
    CMPLW cr7, r29, r9
    BLE cr7, loc_102E8B20
loc_102E898C:
    LWZ r9, 0(r3)
    ANDI. r10, r9, 0x1000
    BNE cr0, loc_102E8BE0
loc_102E8998:
    LWZ r9, 8(r3)
    LWZ r4, 0x54(r31)
    LWZ r3, 0x50(r3)
    SUBF r29, r9, r29
    SRAWI r30, r29, 0x1F
loc_102E89AC:
    CMPWI cr7, r3, -1
    BEQ cr7, loc_102E8BA0
loc_102E89B4:
    ADDC r29, r4, r29
    ADDE r30, r3, r30
    CMPWI cr7, r30, 0
    BGE cr7, loc_102E8AD0
loc_102E89C4:
    LIS r9, dword_1040FFF4@ha
    LI r10, 0x16
    ADDI r9, r9, dword_1040FFF4@l
    ADDIS r9, r2, 0
    ADDI r9, r9, -0x6FEC
    STW r10, 0(r9)
loc_102E89DC:
    LWZ r0, 0xA0+sender_lr(r1)
    LWZ r24, 0xA0+var_20(r1)
    LI r3, -1
    LI r4, -1
    LWZ r25, 0xA0+var_1C(r1)
    LWZ r26, 0xA0+var_18(r1)
    MTLR lr, r0
    LWZ r27, 0xA0+var_14(r1)
    LWZ r28, 0xA0+var_10(r1)
    LWZ r29, 0xA0+var_C(r1)
    LWZ r30, 0xA0+var_8(r1)
    LWZ r31, 0xA0+var_4(r1)
    ADDI r1, r1, 0xA0
    BLR lr
loc_102E8A20:
    CMPLW cr7, r26, r10
    BNE cr7, loc_102E8A30
loc_102E8A28:
    CMPLW cr7, r28, r9
    BGT cr7, loc_102E88B4
loc_102E8A30:
    LWZ r9, 0x98(r31)
    LI r7, 0
    MR r3, r31
    LWZ r9, 0x40(r9)
    MTCTR ctr, r9
    BCTRL ctr
    MR. r24, r3
    MR r25, r4
    BLT- cr0, loc_102E89DC
loc_102E8A54:
    OR. r9, r26, r28
    BEQ- cr0, loc_102E88E0
loc_102E8A5C:
    CMPWI cr7, r27, 0
    LWZ r9, 0x98(r31)
    LWZ r4, 0x1C(r31)
    MR r5, r28
    LWZ r9, 0x38(r9)
    BNE cr7, loc_102E8A7C
loc_102E8A74:
    LWZ r5, 0x20(r31)
    SUBF r5, r4, r5
loc_102E8A7C:
    MTCTR ctr, r9
    MR r3, r31
    BCTRL ctr
    SRAWI r9, r3, 0x1F
    MR r4, r3
    CMPW cr7, r26, r9
    MR r10, r9
    BLE cr7, loc_102E8B50
loc_102E8A9C:
    CMPWI cr7, r3, -1
    BEQ cr7, loc_102E8C20
loc_102E8AA4:
    SUBFC r29, r3, r28
    LI r28, 1
    SUBFE r30, r9, r26
    B loc_102E8624
loc_102E8AC0:
    CMPWI cr7, r6, -1
    BNE cr7, loc_102E8770
loc_102E8AC8:
    B loc_102E8624
loc_102E8AD0:
    LWZ r0, 0xA0+sender_lr(r1)
    MR r3, r30
    MR r4, r29
    LWZ r24, 0xA0+var_20(r1)
    LWZ r25, 0xA0+var_1C(r1)
    LWZ r26, 0xA0+var_18(r1)
    MTLR lr, r0
    LWZ r27, 0xA0+var_14(r1)
    LWZ r28, 0xA0+var_10(r1)
    LWZ r29, 0xA0+var_C(r1)
    LWZ r30, 0xA0+var_8(r1)
    LWZ r31, 0xA0+var_4(r1)
    ADDI r1, r1, 0xA0
    BLR lr
loc_102E8B10:
    CMPWI cr7, r4, -1
    BNE cr7, loc_102E8654
loc_102E8B18:
    B loc_102E89DC
loc_102E8B20:
    LWZ r29, 8(r3)
    LWZ r9, 4(r3)
    LWZ r4, 0x54(r31)
    LWZ r3, 0x50(r3)
    SUBF r29, r9, r29
    SRAWI r30, r29, 0x1F
    SUBFIC r29, r29, 0
    SUBFZE r30, r30
    B loc_102E89AC
loc_102E8B50:
    CMPLW cr7, r26, r9
    BNE cr7, loc_102E88F0
loc_102E8B58:
    CMPLW cr7, r28, r3
    BGT cr7, loc_102E8A9C
loc_102E8B60:
    B loc_102E88F0
loc_102E8B70:
    CMPLW cr7, r10, r29
    BGT cr7, loc_102E887C
loc_102E8B78:
    B loc_102E87C8
loc_102E8B80:
    LWZ r3, 0x50(r3)
    LWZ r4, 0x54(r31)
    LI r30, 0
    LI r29, 0
    B loc_102E89AC
loc_102E8BA0:
    CMPWI cr7, r4, -1
    BNE cr7, loc_102E89B4
loc_102E8BA8:
    LWZ r9, 0x98(r31)
    LI r7, 1
    LI r5, 0
    LI r6, 0
    MR r3, r31
    LWZ r9, 0x40(r9)
    MTCTR ctr, r9
    BCTRL ctr
    CMPWI cr7, r3, -1
    BNE- cr7, loc_102E89B4
loc_102E8BD0:
    CMPWI cr7, r4, -1
    BEQ cr7, loc_102E89DC
loc_102E8BD8:
    B loc_102E89B4
loc_102E8BE0:
    LWZ r9, 0x98(r3)
    LI r7, 2
    LI r5, 0
    LI r6, 0
    LWZ r9, 0x40(r9)
    MTCTR ctr, r9
    BCTRL ctr
    CMPWI cr7, r3, -1
    BEQ cr7, loc_102E8C30
loc_102E8C04:
    LWZ r29, 0x14(r31)
    LWZ r9, 0x10(r31)
    STW r3, 0x50(r31)
    STW r4, 0x54(r31)
    SUBF r29, r9, r29
    SRAWI r30, r29, 0x1F
    B loc_102E89B4
loc_102E8C20:
    MR r29, r28
    MR r30, r26
    LI r28, 1
    B loc_102E8624
loc_102E8C30:
    CMPWI cr7, r4, -1
    BNE cr7, loc_102E8C04
loc_102E8C38:
    B loc_102E89DC

=====

0, powerpc

######
ENGINE_set_ctrl_function:
loc_1015A290:
    STWU r1, back_chain(r1)
    STW r31, 0x20+var_4(r1)
    MR r31, r1
    STW r3, 0xC(r31)
    STW r4, 8(r31)
    LWZ r9, 0xC(r31)
    LWZ r10, 8(r31)
    STW r10, 0x38(r9)
    LI r9, 1
    MR r3, r9
    ADDI r11, r31, 0x20
    LWZ r31, -4(r11)
    MR r1, r11
    BLR lr

=====

0, powerpc

######
TS_RESP_CTX_set_serial_cb:
loc_101FC36C:
    STWU r1, back_chain(r1)
    STW r31, 0x30+var_4(r1)
    MR r31, r1
    STW r3, 0x1C(r31)
    STW r4, 0x18(r31)
    STW r5, 0x14(r31)
    LWZ r9, 0x1C(r31)
    LWZ r10, 0x18(r31)
    STW r10, 0x34(r9)
    LWZ r9, 0x1C(r31)
    LWZ r10, 0x14(r31)
    STW r10, 0x38(r9)
    NOP 
    ADDI r11, r31, 0x30
    LWZ r31, -4(r11)
    MR r1, r11
    BLR lr

=====

0, powerpc

######
read_encoded_value_with_base:
loc_1034EF60:
    STWU r1, back_chain(r1)
    CMPLWI cr7, r3, 0x50
    MFLR r0, lr
    BCL 20, 4*cr7+so, loc_1034EF70
    STW r30, 0x10+var_8(r1)
    STW r0, 0x10+sender_lr(r1)
    MFLR r30, lr
    ADDIS r30, r30, (off_1040FFAC+0x8000 - loc_1034EF70)@ha
    ADDI r30, r30, (off_1040FFAC+0x8000 - loc_1034EF70)@l
    BEQ cr7, loc_1034F0F0
loc_1034EF88:
    CLRLWI r10, r3, 28
    CMPLWI cr7, r10, 0xC
    BGT cr7, def_1034EFA8
loc_1034EF94:
    LWZ r8, (off_1040FFAC - 0x10417FAC)(r30)
    SLWI r10, r10, 2
    LWZX r9, r8, r10
    ADD r8, r9, r8
    MTCTR ctr, r8
    BCTR# ctr
loc_1034EFB0:
    LWZ r10, 0(r5)
    ADDI r9, r5, 4
loc_1034EFB8:
    CMPWI cr7, r10, 0
    BEQ cr7, loc_1034EFDC
loc_1034EFC0:
    RLWINM r8, r3, 0,25,27
    CMPWI cr7, r8, 0x10
    BEQ cr7, loc_1034F120
loc_1034EFCC:
    ANDI. r11, r3, 0x80
    ADD r10, r10, r4
    BEQ cr0, loc_1034EFDC
loc_1034EFD8:
    LWZ r10, 0(r10)
loc_1034EFDC:
    LWZ r0, 0x10+sender_lr(r1)
    LWZ r30, 0x10+var_8(r1)
    MR r3, r9
    STW r10, 0(r6)
    ADDI r1, r1, 0x10
    MTLR lr, r0
    BLR lr
loc_1034F000:
    LWZ r10, 4(r5)
    ADDI r9, r5, 8
    B loc_1034EFB8
loc_1034F010:
    LHA r10, 0(r5)
    ADDI r9, r5, 2
    B loc_1034EFB8
loc_1034F020:
    MR r9, r5
    LI r10, 0
    LI r7, 0
    B loc_1034F040
loc_1034F040:
    ADDI r9, r9, 1
    LBZ r11, -1(r9)
    ANDI. r8, r11, 0x80
    CLRLWI r8, r11, 25
    SLW r8, r8, r7
    OR r10, r10, r8
    ADDI r7, r7, 7
    BNE cr0, loc_1034F040
loc_1034F060:
    CMPLWI cr7, r7, 0x1F
    BGT cr7, loc_1034EFB8
loc_1034F068:
    ANDI. r8, r11, 0x40
    BEQ cr0, loc_1034EFB8
loc_1034F070:
    LI r8, -1
    SLW r7, r8, r7
    OR r10, r10, r7
    B loc_1034EFC0
loc_1034F080:
    MR r9, r5
    LI r10, 0
    LI r7, 0
    B loc_1034F0A0
loc_1034F0A0:
    ADDI r9, r9, 1
    LBZ r8, -1(r9)
    ANDI. r11, r8, 0x80
    CLRLWI r8, r8, 25
    SLW r8, r8, r7
    OR r10, r10, r8
    ADDI r7, r7, 7
    BNE cr0, loc_1034F0A0
loc_1034F0C0:
    B loc_1034EFB8
loc_1034F0D0:
    LHZ r10, 0(r5)
    ADDI r9, r5, 2
    B loc_1034EFB8
loc_1034F0E0:
    BL loc_102D05F0
    NOP 
    NOP 
    NOP 
loc_1034F0F0:
    LWZ r0, 0x10+sender_lr(r1)
    ADDI r9, r5, 3
    LWZ r30, 0x10+var_8(r1)
    CLRRWI r9, r9, 2
    MTLR lr, r0
    LWZ r10, 0(r9)
    ADDI r9, r9, 4
    MR r3, r9
    STW r10, 0(r6)
    ADDI r1, r1, 0x10
    BLR lr
loc_1034F120:
    MR r4, r5
    B loc_1034EFCC

=====

0, powerpc

######
sk_X509_pop_free_11:
loc_1008336C:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x20+sender_lr(r1)
    STW r31, 0x20+var_4(r1)
    MR r31, r1
    STW r3, 0xC(r31)
    STW r4, 8(r31)
    LWZ r4, 8(r31)
    LWZ r3, 0xC(r31)
    BL sub_101F47C8
    NOP 
    ADDI r11, r31, 0x20
    LWZ r0, 4(r11)
    MTLR lr, r0
    LWZ r31, -4(r11)
    MR r1, r11
    BLR lr

=====

1, powerpc

######
tls_construct_end_of_early_data:
loc_10077D50:
    LWZ r9, 0x60(r3)
    CMPLWI cr7, r9, 3
    BEQ cr7, loc_10077D94
loc_10077D5C:
    CMPLWI cr7, r9, 6
    BEQ cr7, loc_10077D94
loc_10077D64:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x10+sender_lr(r1)
    LI r7, 0xDF0
    LIS r6, aSslStatemState_0@ha
    ADDI r6, r6, aSslStatemState_0@l
    LI r5, 0x42
    LI r4, 0x218
    LI r3, 0x14
    BL sub_100F2028
    LI r3, 0
    B loc_10077DA4
loc_10077D94:
    LI r9, 6
    STW r9, 0x60(r3)
    LI r3, 1
    BLR lr
loc_10077DA4:
    LWZ r0, 0x10+sender_lr(r1)
    MTLR lr, r0
    ADDI r1, r1, 0x10
    BLR lr

=====

1, powerpc

######
SSL_CTX_get_default_passwd_cb_userdata:
loc_10065C94:
    STWU r1, back_chain(r1)
    LWZ r3, 0x70(r3)
    ADDI r1, r1, 0x10
    BLR lr

=====

1, powerpc

######
X509_POLICY_NODE_print:
loc_10176C04:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x20+sender_lr(r1)
    STW r29, 0x20+var_C(r1)
    STW r30, 0x20+var_8(r1)
    STW r31, 0x20+var_4(r1)
    MR r31, r3
    MR r30, r5
    LWZ r29, 0(r4)
    LIS r6, byte_1024FFC0@ha
    ADDI r6, r6, byte_1024FFC0@l
    LIS r4, aSpolicy@ha
    ADDI r4, r4, aSpolicy@l
    CRCLR 4*cr1+eq
    BL sub_100AD270
    LWZ r4, 4(r29)
    MR r3, r31
    BL sub_10097468
    LIS r4, (aFileSLuNeededB_0+0x3C)@ha
    ADDI r4, r4, (aFileSLuNeededB_0+0x3C)@l
    MR r3, r31
    BL sub_100B02C4
    ADDI r30, r30, 2
    LWZ r9, 0(r29)
    ANDI. r10, r9, 0x10
    BNE cr0, loc_10176C78
loc_10176C6C:
    LIS r7, aNonCritical@ha
    ADDI r7, r7, aNonCritical@l
    B loc_10176C80
loc_10176C78:
    LIS r7, (aNonCritical+4)@ha
    ADDI r7, r7, (aNonCritical+4)@l
loc_10176C80:
    LIS r6, byte_1024FFC0@ha
    ADDI r6, r6, byte_1024FFC0@l
    MR r5, r30
    LIS r4, aSS_18@ha
    ADDI r4, r4, aSS_18@l
    MR r3, r31
    CRCLR 4*cr1+eq
    BL sub_100AD270
    LWZ r4, 8(r29)
    CMPWI cr7, r4, 0
    BEQ cr7, loc_10176CBC
loc_10176CAC:
    MR r5, r30
    MR r3, r31
    BL sub_10175754
    B loc_10176CDC
loc_10176CBC:
    LIS r6, byte_1024FFC0@ha
    ADDI r6, r6, byte_1024FFC0@l
    MR r5, r30
    LIS r4, aSnoQualifiers@ha
    ADDI r4, r4, aSnoQualifiers@l
    MR r3, r31
    CRCLR 4*cr1+eq
    BL sub_100AD270
loc_10176CDC:
    LWZ r0, 0x20+sender_lr(r1)
    MTLR lr, r0
    LWZ r29, 0x20+var_C(r1)
    LWZ r30, 0x20+var_8(r1)
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    BLR lr

=====

1, powerpc

######
conn_state:
loc_100B200C:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x50+sender_lr(r1)
    MFCR r12
    STW r19, 0x50+var_34(r1)
    STW r20, 0x50+var_30(r1)
    STW r21, 0x50+var_2C(r1)
    STW r22, 0x50+var_28(r1)
    STW r23, 0x50+var_24(r1)
    STW r24, 0x50+var_20(r1)
    STW r25, 0x50+var_1C(r1)
    STW r26, 0x50+var_18(r1)
    STW r27, 0x50+var_14(r1)
    STW r28, 0x50+var_10(r1)
    STW r29, 0x50+var_C(r1)
    STW r30, 0x50+var_8(r1)
    STW r31, 0x50+var_4(r1)
    STW r12, 0x50+var_38(r1)
    MR r28, r3
    MR r31, r4
    LWZ r27, 0x1C(r4)
    LI r29, -1
    LIS r30, jpt_100B20A8@ha
    ADDI r30, r30, jpt_100B20A8@l
    LI r25, 5
    LI r26, 0
    LI r23, 3
    LI r22, 4
    ADDI r21, r4, 0x14
    LI r20, 0xA
    LI r24, 2
    CMPWI cr4, r27, 0
loc_100B208C:
    LWZ r9, 0(r31)
    CMPLWI cr7, r9, 6
    BGT cr7, def_100B20A8
loc_100B2098:
    SLWI r9, r9, 2
    LWZX r9, r30, r9
    ADD r9, r9, r30
    MTCTR ctr, r9
    BCTR# ctr
loc_100B20AC:
    LI r29, 1
    B def_100B20A8
loc_100B20B4:
    LWZ r9, 8(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_100B2110
loc_100B20C0:
    LWZ r9, 0xC(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_100B2110
loc_100B20CC:
    LI r7, 0x57
    LIS r6, aCryptoBioBssCo@ha
    ADDI r6, r6, aCryptoBioBssCo@l
    LI r5, 0x90
    LI r4, 0x73
    LI r3, 0x20
    BL sub_100F2028
    LWZ r7, 0xC(r31)
    LIS r6, aService@ha
    ADDI r6, r6, aService@l
    LWZ r5, 8(r31)
    LIS r4, aHostname@ha
    ADDI r4, r4, aHostname@l
    LI r3, 4
    CRCLR 4*cr1+eq
    BL sub_100F28CC
    B def_100B20A8
loc_100B2110:
    STW r24, 0(r31)
    B loc_100B23F4
loc_100B2118:
    LWZ r9, 4(r31)
    CMPWI cr7, r9, 6
    BEQ cr7, loc_100B215C
loc_100B2124:
    CMPWI cr7, r9, 0x100
    BEQ cr7, loc_100B2164
loc_100B212C:
    CMPWI cr7, r9, 4
    BNE cr7, loc_100B213C
loc_100B2134:
    MR r6, r24
    B loc_100B2168
loc_100B213C:
    LI r7, 0x78
    LIS r6, aCryptoBioBssCo@ha
    ADDI r6, r6, aCryptoBioBssCo@l
    LI r5, 0x92
    LI r4, 0x73
    LI r3, 0x20
    BL sub_100F2028
    B def_100B20A8
loc_100B215C:
    MR r6, r20
    B loc_100B2168
loc_100B2164:
    MR r6, r26
loc_100B2168:
    MR r8, r21
    LI r7, 1
    MR r5, r26
    LWZ r4, 0xC(r31)
    LWZ r3, 8(r31)
    BL sub_100AAE14
    CMPWI cr7, r3, 0
    BEQ cr7, def_100B20A8
loc_100B2188:
    LWZ r9, 0x14(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_100B21B4
loc_100B2194:
    LI r7, 0x81
    LIS r6, aCryptoBioBssCo@ha
    ADDI r6, r6, aCryptoBioBssCo@l
    LI r5, 0x8E
    LI r4, 0x73
    LI r3, 0x20
    BL sub_100F2028
    B def_100B20A8
loc_100B21B4:
    STW r9, 0x18(r31)
    STW r23, 0(r31)
    B loc_100B23F4
loc_100B21C0:
    LWZ r3, 0x18(r31)
    BL sub_100AA720
    MR r29, r3
    LWZ r3, 0x18(r31)
    BL sub_100AA740
    MR r19, r3
    LWZ r3, 0x18(r31)
    BL sub_100AA760
    MR r6, r26
    MR r5, r3
    MR r4, r19
    MR r3, r29
    BL sub_100ADC80
    MR r29, r3
    CMPWI cr7, r3, -1
    BNE cr7, loc_100B2264
loc_100B2200:
    BL sub_101BBFB0
    LIS r30, aCryptoBioBssCo@ha
    ADDI r30, r30, aCryptoBioBssCo@l
    LI r7, 0x8D
    MR r6, r30
    LWZ r5, 0(r3)
    LI r4, 4
    LI r3, 2
    BL sub_100F2028
    LWZ r7, 0xC(r31)
    LIS r6, aService@ha
    ADDI r6, r6, aService@l
    LWZ r5, 8(r31)
    LIS r4, aHostname@ha
    ADDI r4, r4, aHostname@l
    LI r3, 4
    CRCLR 4*cr1+eq
    BL sub_100F28CC
    LI r7, 0x91
    MR r6, r30
    LI r5, 0x76
    LI r4, 0x73
    LI r3, 0x20
    BL sub_100F2028
    B def_100B20A8
loc_100B2264:
    STW r3, 0x20(r28)
    STW r22, 0(r31)
    B loc_100B23F4
loc_100B2270:
    LI r4, 0xF
    MR r3, r28
    BL sub_100B00D0
    LWZ r29, 0x20(r28)
    LWZ r3, 0x18(r31)
    BL sub_100AA7F4
    LWZ r5, 0x10(r31)
    ORI r5, r5, 4
    MR r4, r3
    MR r3, r29
    BL sub_100ADD30
    STW r26, 0x1C(r28)
    MR. r29, r3
    BNE cr0, loc_100B2368
loc_100B22A8:
    MR r3, r26
    BL sub_100B5268
    CMPWI cr7, r3, 0
    BEQ cr7, loc_100B22DC
loc_100B22B8:
    LI r4, 0xC
    MR r3, r28
    BL sub_100B00FC
    LI r9, 6
    STW r9, 0(r31)
    LI r9, 2
    STW r9, 0x1C(r28)
    BL sub_100F214C
    B def_100B20A8
loc_100B22DC:
    LWZ r3, 0x18(r31)
    BL sub_100AA700
    STW r3, 0x18(r31)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_100B2304
loc_100B22F0:
    LWZ r3, 0x20(r28)
    BL sub_100AE420
    STW r23, 0(r31)
    BL sub_100F214C
    B loc_100B23F4
loc_100B2304:
    BL sub_101BBFB0
    LIS r30, aCryptoBioBssCo@ha
    ADDI r30, r30, aCryptoBioBssCo@l
    LI r7, 0xAD
    MR r6, r30
    LWZ r5, 0(r3)
    LI r4, 2
    LI r3, 2
    BL sub_100F2028
    LWZ r7, 0xC(r31)
    LIS r6, aService@ha
    ADDI r6, r6, aService@l
    LWZ r5, 8(r31)
    LIS r4, aHostname@ha
    ADDI r4, r4, aHostname@l
    LI r3, 4
    CRCLR 4*cr1+eq
    BL sub_100F28CC
    LI r7, 0xB1
    MR r6, r30
    LI r5, 0x67
    LI r4, 0x73
    LI r3, 0x20
    BL sub_100F2028
    B def_100B20A8
loc_100B2368:
    STW r25, 0(r31)
    B loc_100B23F4
loc_100B2370:
    LWZ r3, 0x20(r28)
    BL sub_100AD694
    MR. r19, r3
    BEQ cr0, loc_100B23F0
loc_100B2380:
    LI r4, 0xF
    MR r3, r28
    BL sub_100B00D0
    LIS r30, aCryptoBioBssCo@ha
    ADDI r30, r30, aCryptoBioBssCo@l
    LI r7, 0xBD
    MR r6, r30
    MR r5, r19
    LI r4, 2
    LI r3, 2
    BL sub_100F2028
    LWZ r7, 0xC(r31)
    LIS r6, aService@ha
    ADDI r6, r6, aService@l
    LWZ r5, 8(r31)
    LIS r4, aHostname@ha
    ADDI r4, r4, aHostname@l
    LI r3, 4
    CRCLR 4*cr1+eq
    BL sub_100F28CC
    LI r7, 0xC1
    MR r6, r30
    LI r5, 0x6E
    LI r4, 0x73
    LI r3, 0x20
    BL sub_100F2028
    LI r29, 0
    B def_100B20A8
loc_100B23F0:
    STW r25, 0(r31)
loc_100B23F4:
    BEQ cr4, loc_100B208C
loc_100B23F8:
    MR r5, r29
    LWZ r4, 0(r31)
    MR r3, r28
    MTCTR ctr, r27
    BCTRL ctr
    MR. r29, r3
    BNE cr0, loc_100B208C
loc_100B2414:
    B loc_100B2438
loc_100B2418:
    CMPWI cr7, r27, 0
    BEQ cr7, loc_100B2438
loc_100B2420:
    MR r5, r29
    LWZ r4, 0(r31)
    MR r3, r28
    MTCTR ctr, r27
    BCTRL ctr
    MR r29, r3
loc_100B2438:
    MR r3, r29
    LWZ r0, 0x50+sender_lr(r1)
    LWZ r12, 0x50+var_38(r1)
    MTLR lr, r0
    LWZ r19, 0x50+var_34(r1)
    LWZ r20, 0x50+var_30(r1)
    LWZ r21, 0x50+var_2C(r1)
    LWZ r22, 0x50+var_28(r1)
    LWZ r23, 0x50+var_24(r1)
    LWZ r24, 0x50+var_20(r1)
    LWZ r25, 0x50+var_1C(r1)
    LWZ r26, 0x50+var_18(r1)
    LWZ r27, 0x50+var_14(r1)
    LWZ r28, 0x50+var_10(r1)
    LWZ r29, 0x50+var_C(r1)
    LWZ r30, 0x50+var_8(r1)
    LWZ r31, 0x50+var_4(r1)
    MTCRF 8, r12
    ADDI r1, r1, 0x50
    BLR lr

=====

1, powerpc

######
engine_pile_cmp:
loc_101A4014:
    STWU r1, back_chain(r1)
    LWZ r3, 0(r3)
    LWZ r9, 0(r4)
    SUBF r3, r9, r3
    ADDI r1, r1, 0x10
    BLR lr

=====

1, powerpc

######
make_IPAddressFamily:
loc_1016F0C0:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x30+sender_lr(r1)
    STW r28, 0x30+var_10(r1)
    STW r29, 0x30+var_C(r1)
    STW r30, 0x30+var_8(r1)
    STW r31, 0x30+var_4(r1)
    MR r30, r3
    LWZ r9, -0x7008(r2)
    STW r9, 0x30+var_14(r1)
    LI r9, 0
    SRWI r9, r4, 8
    STB r9, 0x30+var_18(r1)
    STB r4, 0x30+var_17(r1)
    CMPWI cr0, r5, 0
    BEQ cr0, loc_1016F110
loc_1016F100:
    LWZ r9, 0(r5)
    STB r9, 0x30+var_16(r1)
    LI r28, 3
    B loc_1016F114
loc_1016F110:
    LI r28, 2
loc_1016F114:
    LI r31, 0
    B loc_1016F158
loc_1016F11C:
    MR r4, r31
    MR r3, r30
    BL sub_1014CFC8
    MR r29, r3
    LWZ r10, 0(r3)
    LWZ r9, 0(r10)
    CMPW cr7, r28, r9
    BNE cr7, loc_1016F154
loc_1016F13C:
    MR r5, r28
    ADDI r4, r1, 0x30+var_18
    LWZ r3, 8(r10)
    BL sub_101DF440
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1016F1E8
loc_1016F154:
    ADDI r31, r31, 1
loc_1016F158:
    MR r3, r30
    BL sub_1014CFA8
    CMPW cr7, r31, r3
    BLT cr7, loc_1016F11C
loc_1016F168:
    BL sub_1016F098
    MR. r31, r3
    BEQ cr0, loc_1016F1DC
loc_1016F174:
    LWZ r9, 4(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1016F190
loc_1016F180:
    BL sub_1016EFF0
    STW r3, 4(r31)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1016F1DC
loc_1016F190:
    LWZ r9, 0(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1016F1AC
loc_1016F19C:
    BL sub_100A58B0
    STW r3, 0(r31)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1016F1DC
loc_1016F1AC:
    MR r5, r28
    ADDI r4, r1, 0x30+var_18
    LWZ r3, 0(r31)
    BL sub_10183740
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1016F1DC
loc_1016F1C4:
    MR r4, r31
    MR r3, r30
    BL sub_1014CAC4
    MR r29, r31
    CMPWI cr7, r3, 0
    BNE cr7, loc_1016F1E8
loc_1016F1DC:
    MR r3, r31
    BL sub_1016DFC8
    LI r29, 0
loc_1016F1E8:
    MR r3, r29
    LWZ r10, 0x30+var_14(r1)
    LWZ r9, -0x7008(r2)
    XOR. r10, r10, r9
    LI r9, 0
    BEQ+ cr0, loc_1016F204
loc_1016F200:
    BL sub_101EEE40
loc_1016F204:
    LWZ r0, 0x30+sender_lr(r1)
    MTLR lr, r0
    LWZ r28, 0x30+var_10(r1)
    LWZ r29, 0x30+var_C(r1)
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr

=====

1, powerpc

######
unlock_all:
loc_10109D40:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x20+sender_lr(r1)
    STW r31, 0x20+var_4(r1)
    LIS r31, dword_102FD6EC@ha
    ADDI r31, r31, dword_102FD6EC@l
    LWZ r3, (dword_102FD6FC - 0x102FD6EC)(r31)
    BL sub_1014E794
    LWZ r31, (dword_102FD700 - 0x102FD6EC)(r31)
    CMPWI cr7, r31, 0
    BEQ cr7, loc_10109D80
loc_10109D6C:
    LWZ r3, 0(r31)
    BL sub_1014E7B0
    LWZ r31, 8(r31)
    CMPWI cr7, r31, 0
    BNE cr7, loc_10109D6C
loc_10109D80:
    LIS r9, dword_102FD6FC@ha
    LWZ r3, dword_102FD6FC@l(r9)
    BL sub_1014E7B0
    LWZ r0, 0x20+sender_lr(r1)
    MTLR lr, r0
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    BLR lr

=====

1, powerpc

######
set_reasons:
loc_101772E4:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x30+sender_lr(r1)
    STW r26, 0x30+var_18(r1)
    STW r27, 0x30+var_14(r1)
    STW r28, 0x30+var_10(r1)
    STW r29, 0x30+var_C(r1)
    STW r30, 0x30+var_8(r1)
    STW r31, 0x30+var_4(r1)
    MR r27, r3
    MR r3, r4
    BL sub_10180178
    MR. r28, r3
    BEQ cr0, loc_10177404
loc_1017731C:
    LWZ r9, 0(r27)
    LI r31, 0
    CMPWI cr7, r9, 0
    BNE cr7, loc_101773EC
loc_1017732C:
    LI r29, 0
    LIS r26, unk_102A17EC@ha
    B loc_101773C0
loc_10177338:
    MR r4, r29
    MR r3, r28
    BL sub_1014CFC8
    LWZ r30, 4(r3)
    LWZ r9, 0(r27)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1017740C
loc_10177354:
    BL sub_100A5A84
    STW r3, 0(r27)
    CMPWI cr7, r3, 0
    BNE cr7, loc_1017740C
loc_10177364:
    B loc_101773D8
loc_10177368:
    MR r4, r30
    LWZ r3, 8(r31)
    BL sub_101DDEA0
    CMPWI cr7, r3, 0
    BNE cr7, loc_10177398
loc_1017737C:
    LI r5, 1
    LWZ r4, 0(r31)
    LWZ r3, 0(r27)
    BL sub_10182708
    CMPWI cr7, r3, 0
    BNE cr7, loc_101773B0
loc_10177394:
    B loc_101773E0
loc_10177398:
    ADDI r31, r31, 0xC
    LWZ r9, 4(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_10177368
loc_101773A8:
    LI r31, 0
    B loc_101773EC
loc_101773B0:
    LWZ r9, 4(r31)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_101773E8
loc_101773BC:
    ADDI r29, r29, 1
loc_101773C0:
    MR r3, r28
    BL sub_1014CFA8
    CMPW cr7, r29, r3
    BLT cr7, loc_10177338
loc_101773D0:
    LI r31, 1
    B loc_101773EC
loc_101773D8:
    LI r31, 0
    B loc_101773EC
loc_101773E0:
    LI r31, 0
    B loc_101773EC
loc_101773E8:
    LI r31, 0
loc_101773EC:
    LIS r4, sub_1017EB10@ha
    ADDI r4, r4, sub_1017EB10@l
    MR r3, r28
    BL sub_1014CF20
    MR r3, r31
    B loc_10177414
loc_10177404:
    LI r3, 0
    B loc_10177414
loc_1017740C:
    ADDI r31, r26, unk_102A17EC@l
    B loc_10177368
loc_10177414:
    LWZ r0, 0x30+sender_lr(r1)
    MTLR lr, r0
    LWZ r26, 0x30+var_18(r1)
    LWZ r27, 0x30+var_14(r1)
    LWZ r28, 0x30+var_10(r1)
    LWZ r29, 0x30+var_C(r1)
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr

=====

1, powerpc

######
write_lebn:
loc_101250A4:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x20+sender_lr(r1)
    STW r30, 0x20+var_8(r1)
    STW r31, 0x20+var_4(r1)
    MR r31, r3
    MR r3, r4
    MR r30, r5
    LWZ r4, 0(r31)
    BL sub_100B8324
    LWZ r9, 0(r31)
    ADD r30, r9, r30
    STW r30, 0(r31)
    LWZ r0, 0x20+sender_lr(r1)
    MTLR lr, r0
    LWZ r30, 0x20+var_8(r1)
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    BLR lr

=====

1, powerpc

######
tls_collect_extensions:
loc_100701F8:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x80+sender_lr(r1)
    MFCR r12
    STW r14, 0x80+var_48(r1)
    STW r15, 0x80+var_44(r1)
    STW r16, 0x80+var_40(r1)
    STW r17, 0x80+var_3C(r1)
    STW r18, 0x80+var_38(r1)
    STW r19, 0x80+var_34(r1)
    STW r20, 0x80+var_30(r1)
    STW r21, 0x80+var_2C(r1)
    STW r22, 0x80+var_28(r1)
    STW r23, 0x80+var_24(r1)
    STW r24, 0x80+var_20(r1)
    STW r25, 0x80+var_1C(r1)
    STW r26, 0x80+var_18(r1)
    STW r27, 0x80+var_14(r1)
    STW r28, 0x80+var_10(r1)
    STW r29, 0x80+var_C(r1)
    STW r30, 0x80+var_8(r1)
    STW r31, 0x80+var_4(r1)
    STW r12, 0x80+var_4C(r1)
    MR r26, r3
    MR r23, r5
    MR r16, r6
    STW r7, 0x80+var_6C(r1)
    STW r8, 0x80+var_68(r1)
    STW r9, 0x80+var_64(r1)
    LWZ r9, -0x7008(r2)
    STW r9, 0x80+var_54(r1)
    LI r9, 0
    LWZ r29, 0(r4)
    LWZ r31, 4(r4)
    LWZ r28, 0x378(r3)
    ADDI r18, r28, 0xE4
    STW r9, 0(r6)
    ANDI. r30, r5, 0x80
    BEQ cr0, loc_100702A0
loc_10070294:
    LWZ r3, 0x378(r3)
    ADDI r3, r3, 0xE4
    BL sub_10073DFC
loc_100702A0:
    CMPWI cr7, r18, 0
    BEQ cr7, loc_100702B4
loc_100702A8:
    LWZ r17, 0xE8(r28)
    ADDI r17, r17, 0x17
    B loc_100702B8
loc_100702B4:
    LI r17, 0x17
loc_100702B8:
    LI r5, 0x1D8
    LIS r4, aSslStatemExten_1@ha
    ADDI r4, r4, aSslStatemExten_1@l
    MULLI r3, r17, 0x18
    BL sub_1010EFB0
    MR. r22, r3
    BEQ cr0, loc_100702E8
loc_100702D4:
    MR r9, r31
    LI r25, 0
    CMPWI cr7, r31, 0
    BNE cr7, loc_10070318
loc_100702E4:
    B loc_1007058C
loc_100702E8:
    LI r9, 0x50
    LWZ r10, 0x80+var_6C(r1)
    STW r9, 0(r10)
    LI r7, 0x1DB
    LIS r6, aSslStatemExten_1@ha
    ADDI r6, r6, aSslStatemExten_1@l
    LI r5, 0x41
    LI r4, 0x1B3
    LI r3, 0x14
    BL sub_100F2028
    LI r3, 0
    B loc_10070640
loc_10070318:
    LI r21, 0
    ORI r21, r21, 0xFF01
    LIS r15, unk_1026AC0C@ha
    ADDI r19, r15, unk_1026AC0C@l
    CMPWI cr3, r18, 0
    CMPWI cr4, r30, 0
    RLWINM r10, r23, 0,23,23
    CNTLZW r10, r10
    SRWI r10, r10, 5
    SLWI r14, r10, 1
    LIS r20, -0x5556
    ORI r20, r20, 0xAAAB
    ANDI. r10, r23, 0x6080
    MCRF cr2, cr0
loc_10070350:
    CMPLWI cr7, r9, 1
    BLE cr7, loc_10070394
loc_10070358:
    LBZ r30, 0(r29)
    SLWI r10, r30, 8
    LBZ r30, 1(r29)
    OR r30, r30, r10
    ADDI r10, r9, -2
    CMPLWI cr7, r10, 1
    BLE cr7, loc_10070394
loc_10070374:
    LBZ r28, 2(r29)
    SLWI r10, r28, 8
    LBZ r28, 3(r29)
    OR r28, r28, r10
    ADDI r24, r29, 4
    ADDI r27, r9, -4
    CMPLW cr7, r28, r27
    BLE cr7, loc_10070658
loc_10070394:
    LI r7, 0x1E7
    LIS r6, aSslStatemExten_1@ha
    ADDI r6, r6, aSslStatemExten_1@l
    LI r5, 0x6E
    LI r4, 0x1B3
    LI r3, 0x14
    BL sub_100F2028
    LI r9, 0x32
    LWZ r10, 0x80+var_6C(r1)
    STW r9, 0(r10)
    B loc_10070620
loc_100703C0:
    LWZ r9, 0(r10)
    CMPW cr7, r30, r9
    BNE cr7, loc_100703FC
loc_100703CC:
    B loc_100703D8
loc_100703D0:
    LI r31, 0
    ADDI r10, r15, unk_1026AC0C@l
loc_100703D8:
    MR r5, r23
    LWZ r4, 4(r10)
    MR r3, r26
    BL sub_1006F2BC
    CMPWI cr7, r3, 0
    BEQ cr7, loc_10070488
loc_100703F0:
    MULLI r31, r31, 0x18
    ADD r31, r22, r31
    B loc_10070460
loc_100703FC:
    ADDI r31, r31, 1
    ADDI r10, r10, 0x20
    BDNZ cr0, loc_100703C0
loc_10070408:
    BEQ cr3, loc_1007067C
loc_1007040C:
    LI r9, 0
    STW r9, 0x80+var_58(r1)
    LI r4, 1
    BNE cr4, loc_10070420
loc_1007041C:
    MR r4, r14
loc_10070420:
    ADDI r6, r1, 0x80+var_58
    MR r5, r30
    MR r3, r18
    BL sub_10073D78
    CMPWI cr0, r3, 0
    BEQ cr0, loc_1007067C
loc_10070438:
    MR r5, r23
    LWZ r4, 8(r3)
    MR r3, r26
    BL sub_1006F2BC
    CMPWI cr7, r3, 0
    BEQ cr7, loc_10070488
loc_10070450:
    LWZ r9, 0x80+var_58(r1)
    ADDI r31, r9, 0x17
    MULLI r31, r31, 0x18
    ADD r31, r22, r31
loc_10070460:
    CMPWI cr7, r31, 0
    BEQ cr7, loc_10070474
loc_10070468:
    LWZ r9, 8(r31)
    CMPWI cr7, r9, 1
    BEQ cr7, loc_10070488
loc_10070474:
    CMPLWI cr7, r30, 0x29
    BNE cr7, loc_100704B4
loc_1007047C:
    BEQ cr4, loc_100704B4
loc_10070480:
    CMPWI cr7, r27, 0
    BEQ cr7, loc_100704B4
loc_10070488:
    LI r7, 0x1F5
    LIS r6, aSslStatemExten_1@ha
    ADDI r6, r6, aSslStatemExten_1@l
    LI r5, 0x6E
    LI r4, 0x1B3
    LI r3, 0x14
    BL sub_100F2028
    LI r9, 0x2F
    LWZ r10, 0x80+var_6C(r1)
    STW r9, 0(r10)
    B loc_10070620
loc_100704B4:
    SUBF r9, r22, r31
    SRAWI r9, r9, 3
    MULLW r9, r9, r20
    CMPLWI cr7, r9, 0x16
    BGT cr7, loc_10070524
loc_100704C8:
    BNE cr2, loc_10070524
loc_100704CC:
    CMPLWI cr7, r30, 0x2C
    BEQ cr7, loc_10070524
loc_100704D4:
    CMPW cr7, r30, r21
    BEQ cr7, loc_10070524
loc_100704DC:
    CMPLWI cr7, r30, 0x12
    BEQ cr7, loc_10070524
loc_100704E4:
    ADD r9, r26, r9
    LBZ r9, 0x460(r9)
    RLWINM r9, r9, 0,30,30
    ANDI. r10, r9, 0xFF
    BNE cr0, loc_10070524
loc_100704F8:
    LI r7, 0x210
    LIS r6, aSslStatemExten_1@ha
    ADDI r6, r6, aSslStatemExten_1@l
    LI r5, 0xD9
    LI r4, 0x1B3
    LI r3, 0x14
    BL sub_100F2028
    LI r9, 0x6E
    LWZ r10, 0x80+var_6C(r1)
    STW r9, 0(r10)
    B loc_10070620
loc_10070524:
    CMPWI cr7, r31, 0
    BEQ cr7, loc_10070580
loc_1007052C:
    STW r24, 0(r31)
    STW r28, 4(r31)
    LI r9, 1
    STW r9, 8(r31)
    STW r30, 0x10(r31)
    ADDI r28, r25, 1
    STW r25, 0x14(r31)
    LWZ r9, 0x478(r26)
    MR r25, r28
    CMPWI cr7, r9, 0
    BEQ cr7, loc_10070580
loc_10070558:
    LWZ r4, 0x1C(r26)
    LWZ r8, 0x47C(r26)
    LWZ r7, 4(r31)
    MR r6, r24
    MR r5, r30
    CNTLZW r4, r4
    SRWI r4, r4, 5
    MR r3, r26
    MTCTR ctr, r9
    BCTRL ctr
loc_10070580:
    MR r9, r27
    CMPWI cr7, r27, 0
    BNE cr7, loc_10070350
loc_1007058C:
    LWZ r9, 0x80+var_64(r1)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_10070604
loc_10070598:
    LIS r31, unk_1026AC0C@ha
    ADDI r31, r31, unk_1026AC0C@l
    ADDI r29, r31, (aSslStatemExten_1 - 0x1026AC0C)
loc_100705A4:
    LWZ r30, 8(r31)
    CMPWI cr7, r30, 0
    BEQ cr7, loc_100705F8
loc_100705B0:
    LWZ r4, 4(r31)
    AND. r10, r23, r4
    BEQ cr0, loc_100705F8
loc_100705BC:
    MR r5, r23
    MR r3, r26
    BL sub_10070100
    CMPWI cr7, r3, 0
    BEQ cr7, loc_100705F8
loc_100705D0:
    MR r4, r23
    MR r3, r26
    MTCTR ctr, r30
    BCTRL ctr
    CMPWI cr7, r3, 0
    BNE cr7, loc_100705F8
loc_100705E8:
    LI r9, 0x50
    LWZ r10, 0x80+var_6C(r1)
    STW r9, 0(r10)
    B loc_10070620
loc_100705F8:
    ADDI r31, r31, 0x20
    CMPW cr7, r31, r29
    BNE cr7, loc_100705A4
loc_10070604:
    STW r22, 0(r16)
    LWZ r9, 0x80+var_68(r1)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1007063C
loc_10070614:
    STW r17, 0(r9)
    LI r3, 1
    B loc_10070640
loc_10070620:
    LI r5, 0x237
    LIS r4, aSslStatemExten_1@ha
    ADDI r4, r4, aSslStatemExten_1@l
    MR r3, r22
    BL sub_1010EE08
    LI r3, 0
    B loc_10070640
loc_1007063C:
    LI r3, 1
loc_10070640:
    LWZ r10, 0x80+var_54(r1)
    LWZ r9, -0x7008(r2)
    XOR. r10, r10, r9
    LI r9, 0
    BEQ+ cr0, loc_10070688
loc_10070654:
    B loc_10070684
loc_10070658:
    ADD r29, r24, r28
    SUBF r27, r28, r27
    CMPW cr7, r30, r21
    BEQ cr7, loc_100703D0
loc_10070668:
    ADDI r10, r19, (unk_1026AC2C - 0x1026AC0C)
    LI r31, 1
    LI r9, 0x16
    MTCTR ctr, r9
    B loc_100703C0
loc_1007067C:
    LI r31, 0
    B loc_10070474
loc_10070684:
    BL sub_101EEE40
loc_10070688:
    LWZ r0, 0x80+sender_lr(r1)
    LWZ r12, 0x80+var_4C(r1)
    MTLR lr, r0
    LWZ r14, 0x80+var_48(r1)
    LWZ r15, 0x80+var_44(r1)
    LWZ r16, 0x80+var_40(r1)
    LWZ r17, 0x80+var_3C(r1)
    LWZ r18, 0x80+var_38(r1)
    LWZ r19, 0x80+var_34(r1)
    LWZ r20, 0x80+var_30(r1)
    LWZ r21, 0x80+var_2C(r1)
    LWZ r22, 0x80+var_28(r1)
    LWZ r23, 0x80+var_24(r1)
    LWZ r24, 0x80+var_20(r1)
    LWZ r25, 0x80+var_1C(r1)
    LWZ r26, 0x80+var_18(r1)
    LWZ r27, 0x80+var_14(r1)
    LWZ r28, 0x80+var_10(r1)
    LWZ r29, 0x80+var_C(r1)
    LWZ r30, 0x80+var_8(r1)
    LWZ r31, 0x80+var_4(r1)
    MTCRF 0x20, r12
    MTCRF 0x10, r12
    MTCRF 8, r12
    ADDI r1, r1, 0x80
    BLR lr

=====

2, powerpc

######
dtls1_reassemble_fragment:
loc_10080920:
    STWU r1, back_chain(r1)
    MFCR r12
    MFLR r0, lr
    STW r30, 0x140+var_8(r1)
    STW r27, 0x140+var_14(r1)
    STW r0, 0x140+sender_lr(r1)
    STW r28, 0x140+var_10(r1)
    STW r29, 0x140+var_C(r1)
    STW r31, 0x140+var_4(r1)
    STW r12, 0x140+var_18(r1)
    LWZ r30, 0x10(r4)
    LWZ r9, 0xC(r4)
    LWZ r10, 4(r4)
    ADD r9, r30, r9
    CMPLW cr7, r9, r10
    LWZ r9, -0x7008(r2)
    STW r9, 0x140+var_24(r1)
    LI r9, 0
    BGT cr7, loc_10080990
loc_1008096C:
    LWZ r9, 0x448(r3)
    MR r31, r4
    MR r29, r3
    CMPLWI cr7, r9, 0x454C
    BLT cr7, loc_100809F0
loc_10080980:
    CMPLW cr7, r10, r9
    BLE cr7, loc_100809E0
loc_10080988:
    NOP 
    NOP 
loc_10080990:
    LI r28, 0
loc_10080994:
    MR r3, r28
    BL sub_10080880
    LI r3, -1
loc_100809A0:
    LWZ r9, 0x140+var_24(r1)
    LWZ r10, -0x7008(r2)
    XOR. r9, r9, r10
    LI r10, 0
    BNE cr0, loc_10080CD0
loc_100809B4:
    LWZ r0, 0x140+sender_lr(r1)
    LWZ r12, 0x140+var_18(r1)
    LWZ r27, 0x140+var_14(r1)
    LWZ r28, 0x140+var_10(r1)
    MTLR lr, r0
    LWZ r29, 0x140+var_C(r1)
    LWZ r30, 0x140+var_8(r1)
    MTCRF 8, r12
    LWZ r31, 0x140+var_4(r1)
    ADDI r1, r1, 0x140
    BLR lr
loc_100809E0:
    CMPWI cr7, r30, 0
    BNE cr7, loc_10080A00
loc_100809E8:
    LI r3, -3
    B loc_100809A0
loc_100809F0:
    LI r9, 0x454C
    CMPLW cr7, r10, r9
    BGT cr7, loc_10080990
loc_100809FC:
    B loc_100809E0
loc_10080A00:
    LWZ r10, 0x78(r29)
    LHZ r9, 8(r31)
    ADDI r4, r1, 0x140+var_12C
    LWZ r3, 0x110(r10)
    SRWI r8, r9, 8
    LI r10, 0
    STW r10, 0x140+var_128(r1)
    STW r10, 0x140+var_12C(r1)
    STB r8, 0x140+var_128+2(r1)
    STB r9, 0x140+var_128+3(r1)
    BL sub_1004F830
    CMPWI cr4, r3, 0
    MR r27, r3
    BEQ cr4, loc_10080C84
loc_10080A38:
    LWZ r28, 8(r3)
    LWZ r10, 4(r31)
    LWZ r9, 4(r28)
    CMPW cr7, r9, r10
    BNE cr7, loc_10080990
loc_10080A4C:
    LWZ r9, 0x30(r28)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_10080AB0
loc_10080A58:
    LWZ r10, 4(r29)
    LWZ r5, 0x2C(r28)
    ADDI r9, r1, 0x140+var_130
    LI r8, 0
    LWZ r6, 0xC(r31)
    MR r7, r30
    LI r4, 0x16
    LWZ r10, 0x38(r10)
    MR r3, r29
    ADD r6, r5, r6
    LI r5, 0
    MTCTR ctr, r10
    BCTRL ctr
    CMPWI cr7, r3, 0
    BLE cr7, loc_10080AA0
loc_10080A94:
    LWZ r9, 0x140+var_130(r1)
    CMPW cr7, r30, r9
    BEQ cr7, loc_10080B04
loc_10080AA0:
    BEQ- cr4, loc_10080994
loc_10080AA4:
    LI r3, -1
    B loc_100809A0
loc_10080AB0:
    CMPLWI cr7, r30, 0x100
    MR r7, r30
    BLE cr7, loc_10080AC0
loc_10080ABC:
    LI r7, 0x100
loc_10080AC0:
    LWZ r10, 4(r29)
    ADDI r9, r1, 0x140+var_130
    LI r8, 0
    ADDI r6, r1, 0x140+var_124
    LI r5, 0
    LWZ r10, 0x38(r10)
    LI r4, 0x16
    MR r3, r29
    MTCTR ctr, r10
    BCTRL ctr
    CMPWI cr7, r3, 0
    BLE cr7, loc_10080AA0
loc_10080AF0:
    LWZ r9, 0x140+var_130(r1)
    SUBF. r30, r9, r30
    BNE cr0, loc_10080AB0
loc_10080AFC:
    LI r3, -3
    B loc_100809A0
loc_10080B04:
    CMPWI cr7, r30, 8
    BGT cr7, loc_10080BF4
loc_10080B0C:
    LWZ r10, 0xC(r31)
    LI r5, 1
    ADD r9, r30, r10
    CMPW cr7, r10, r9
    BGE cr7, loc_10080B50
loc_10080B20:
    LWZ r7, 0x30(r28)
    SRAWI r8, r10, 3
    CLRLWI r9, r10, 29
    SLW r9, r5, r9
    ADDI r10, r10, 1
    LBZX r6, r7, r8
    OR r9, r9, r6
    STBX r9, r7, r8
    LWZ r9, 0xC(r31)
    ADD r9, r30, r9
    CMPW cr7, r9, r10
    BGT cr7, loc_10080B20
loc_10080B50:
    LWZ r10, 4(r31)
    CMPWI cr7, r10, 0
    BEQ cr7, loc_10080AA0
loc_10080B5C:
    LIS r8, byte_10284298@ha
    ADDI r9, r10, -1
    LWZ r3, 0x30(r28)
    ADDI r8, r8, byte_10284298@l
    CLRLWI r10, r10, 29
    ADD r10, r8, r10
    SRAWI r9, r9, 3
    LBZX r8, r3, r9
    LBZ r10, 8(r10)
    CMPW cr7, r8, r10
    BEQ cr7, loc_10080BBC
loc_10080B88:
    BNE cr4, loc_100809E8
loc_10080B8C:
    MR r4, r28
    ADDI r3, r1, 0x140+var_12C
    BL sub_1004F5E0
    MR. r4, r3
    BEQ cr0, loc_10080994
loc_10080BA0:
    LWZ r9, 0x78(r29)
    LWZ r3, 0x110(r9)
    BL sub_1004F6B0
    CMPWI cr7, r3, 0
    BEQ cr7, loc_10080994
loc_10080BB4:
    LI r3, -3
    B loc_100809A0
loc_10080BBC:
    ADDIC. r10, r9, -1
    BLT cr0, loc_10080CB4
loc_10080BC4:
    LBZX r9, r3, r10
    CMPWI cr7, r9, 0xFF
    BNE cr7, loc_10080B88
loc_10080BD0:
    ADD r8, r3, r10
    ADDI r10, r10, 1
    MTCTR ctr, r10
    NOP 
loc_10080BE0:
    BDZ cr0, loc_10080CB4
loc_10080BE4:
    LBZU r9, -1(r8)
    CMPWI cr7, r9, 0xFF
    BEQ cr7, loc_10080BE0
loc_10080BF0:
    B loc_10080B88
loc_10080BF4:
    LWZ r10, 0xC(r31)
    LWZ r7, 0x30(r28)
    LIS r9, byte_10284298@ha
    ADDI r6, r9, byte_10284298@l
    SRAWI r8, r10, 3
    CLRLWI r10, r10, 29
    LBZX r5, r7, r8
    LBZX r9, r6, r10
    OR r9, r9, r5
    STBX r9, r7, r8
    LWZ r10, 0xC(r31)
    ADD r9, r30, r10
    SRAWI r10, r10, 3
    ADDI r8, r9, -1
    ADDI r10, r10, 1
    SRAWI r8, r8, 3
    CMPW cr7, r8, r10
    BLE cr7, loc_10080C64
loc_10080C3C:
    LI r7, -1
loc_10080C40:
    LWZ r8, 0x30(r28)
    STBX r7, r8, r10
    ADDI r10, r10, 1
    LWZ r9, 0xC(r31)
    ADD r9, r30, r9
    ADDI r8, r9, -1
    SRAWI r8, r8, 3
    CMPW cr7, r8, r10
    BGT cr7, loc_10080C40
loc_10080C64:
    LWZ r10, 0x30(r28)
    CLRLWI r9, r9, 29
    ADD r9, r6, r9
    LBZX r7, r10, r8
    LBZ r9, 8(r9)
    OR r9, r9, r7
    STBX r9, r10, r8
    B loc_10080B50
loc_10080C84:
    LWZ r3, 4(r31)
    LI r4, 1
    BL sub_10080610
    MR. r28, r3
    BEQ cr0, loc_10080990
loc_10080C98:
    LI r5, 0x2C
    MR r4, r31
    BL sub_101F8760
    LWZ r9, 4(r28)
    STW r27, 0xC(r28)
    STW r9, 0x10(r28)
    B loc_10080A4C
loc_10080CB4:
    LIS r4, aSslStatemState_1@ha
    LI r5, 0x24E
    ADDI r4, r4, aSslStatemState_1@l
    BL sub_1011A590
    LI r9, 0
    STW r9, 0x30(r28)
    B loc_10080B88
loc_10080CD0:
    BL sub_10207740

=====

2, powerpc

######
SSL_accept:
loc_10068150:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x20+sender_lr(r1)
    STW r31, 0x20+var_4(r1)
    MR r31, r3
    LWZ r9, 0x18(r3)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_10068190
loc_10068170:
    LWZ r0, 0x20+sender_lr(r1)
    MR r3, r31
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    MTLR lr, r0
    B sub_10067B20
loc_10068190:
    BL sub_10068100
    LWZ r0, 0x20+sender_lr(r1)
    MR r3, r31
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    MTLR lr, r0
    B sub_10067B20

=====

2, powerpc

######
nid_cmp_BSEARCH_CMP_FN:
loc_1018F4F0:
    STWU r1, back_chain(r1)
    LWZ r3, 0(r3)
    LWZ r9, 0(r4)
    SUBF r3, r9, r3
    ADDI r1, r1, 0x10
    BLR lr

=====

2, powerpc

######
mem_new:
loc_100B92D0:
    STWU r1, back_chain(r1)
    LI r4, 0
    ADDI r1, r1, 0x10
    B sub_100B9180

=====

2, powerpc

######
ERR_load_TS_strings:
loc_101C13D0:
    STWU r1, back_chain(r1)
    LIS r3, 0x2F06
    MFLR r0, lr
    ORI r3, r3, 0xE000
    STW r0, 0x20+sender_lr(r1)
    STW r31, 0x20+var_4(r1)
    BL sub_100FA8D0
    CMPWI cr7, r3, 0
    BEQ cr7, loc_101C1410
loc_101C13F4:
    LWZ r0, 0x20+sender_lr(r1)
    LWZ r31, 0x20+var_4(r1)
    LI r3, 1
    ADDI r1, r1, 0x20
    MTLR lr, r0
    BLR lr
loc_101C1410:
    LIS r31, unk_102CCA20@ha
    ADDI r31, r31, unk_102CCA20@l
    MR r3, r31
    BL sub_100FA6E0
    ADDI r3, r31, (unk_102CCBF0 - 0x102CCA20)
    BL sub_100FA6E0
    LWZ r0, 0x20+sender_lr(r1)
    LWZ r31, 0x20+var_4(r1)
    LI r3, 1
    ADDI r1, r1, 0x20
    MTLR lr, r0
    BLR lr

=====

2, powerpc

######
print_reasons:
loc_10189C90:
    STWU r1, back_chain(r1)
    LIS r9, byte_1026896C@ha
    MFLR r0, lr
    MR r10, r6
    MR r7, r4
    ADDI r9, r9, byte_1026896C@l
    LIS r4, aSSS_1@ha
    ADDI r8, r6, 2
    ADDI r4, r4, aSSS_1@l
    MR r6, r9
    STW r27, 0x30+var_14(r1)
    STW r29, 0x30+var_C(r1)
    STW r31, 0x30+var_4(r1)
    MR r29, r5
    LIS r31, unk_102B9F2C@ha
    MR r5, r10
    LIS r27, (aSeconds+8)@ha
    STW r28, 0x30+var_10(r1)
    STW r30, 0x30+var_8(r1)
    STW r0, 0x30+sender_lr(r1)
    MR r28, r3
    ADDI r31, r31, unk_102B9F2C@l
    CRCLR 4*cr1+eq
    BL sub_100B0F60
    LI r30, 1
    LI r4, 0
    ADDI r27, r27, (aSeconds+8)@l
    B loc_10189D24
loc_10189D00:
    LWZ r4, 4(r31)
    MR r3, r28
    LI r30, 0
    BL sub_100B44D0
loc_10189D10:
    ADDI r31, r31, 0xC
    LWZ r9, 4(r31)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_10189D50
loc_10189D20:
    LWZ r4, 0(r31)
loc_10189D24:
    MR r3, r29
    BL sub_10196360
    CMPWI cr5, r30, 0
    CMPWI cr7, r3, 0
    BEQ cr7, loc_10189D10
loc_10189D38:
    BNE cr5, loc_10189D00
loc_10189D3C:
    MR r4, r27
    MR r3, r28
    BL sub_100B44D0
    B loc_10189D00
loc_10189D50:
    CMPWI cr7, r30, 0
    BNE cr7, loc_10189D90
loc_10189D58:
    LIS r4, (aFileSLuNeededB_0+0x3C)@ha
    MR r3, r28
    ADDI r4, r4, (aFileSLuNeededB_0+0x3C)@l
    BL sub_100B44D0
    LWZ r0, 0x30+sender_lr(r1)
    LWZ r27, 0x30+var_14(r1)
    LI r3, 1
    LWZ r28, 0x30+var_10(r1)
    LWZ r29, 0x30+var_C(r1)
    MTLR lr, r0
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr
loc_10189D90:
    LIS r4, aEmpty_1@ha
    MR r3, r28
    ADDI r4, r4, aEmpty_1@l
    BL sub_100B44D0
    LWZ r0, 0x30+sender_lr(r1)
    LWZ r27, 0x30+var_14(r1)
    LI r3, 1
    LWZ r28, 0x30+var_10(r1)
    LWZ r29, 0x30+var_C(r1)
    MTLR lr, r0
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr

=====

2, powerpc

######
CRYPTO_mem_ctrl:
loc_1011AA40:
    STWU r1, back_chain(r1)
    LI r3, 0
    ADDI r1, r1, 0x10
    BLR lr

=====

2, powerpc

######
no_check:
loc_1018F7E0:
    STWU r1, back_chain(r1)
    LI r3, 1
    ADDI r1, r1, 0x10
    BLR lr

=====

2, powerpc

######
OPENSSL_uni2asc:
loc_10136A98:
    CMPWI cr4, r4, 0
    SRAWI r29, r4, 1
    ADDZE r29, r29
    BNE cr4, loc_10136B30
loc_10136AA8:
    ADDI r29, r29, 1
loc_10136AAC:
    MR r30, r4
    LIS r4, aCryptoPkcs12P1_9@ha
    MR r31, r3
    LI r5, 0x35
    ADDI r4, r4, aCryptoPkcs12P1_9@l
    MR r3, r29
    BL sub_1011A5E0
    CMPWI cr0, r3, 0
    BEQ cr0, loc_10136B50
loc_10136AD0:
    BLE cr4, loc_10136AFC
loc_10136AD4:
    ADDI r10, r31, 1
    LI r9, 0
    NOP 
loc_10136AE0:
    SRAWI r8, r9, 1
    ADDI r9, r9, 2
    LBZ r7, 0(r10)
    CMPW cr7, r30, r9
    ADDI r10, r10, 2
    STBX r7, r3, r8
    BGT cr7, loc_10136AE0
loc_10136AFC:
    ADD r29, r3, r29
    LI r9, 0
    STB r9, -1(r29)
    LWZ r0, 0x20+sender_lr(r1)
    LWZ r12, 0x20+var_10(r1)
    LWZ r29, 0x20+var_C(r1)
    LWZ r30, 0x20+var_8(r1)
    MTLR lr, r0
    LWZ r31, 0x20+var_4(r1)
    MTCRF 8, r12
    ADDI r1, r1, 0x20
    BLR lr
loc_10136B30:
    ADD r9, r3, r4
    LBZ r9, -1(r9)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_10136AAC
loc_10136B40:
    B loc_10136AA8
loc_10136B50:
    LWZ r0, 0x20+sender_lr(r1)
    LWZ r12, 0x20+var_10(r1)
    LI r3, 0
    LWZ r29, 0x20+var_C(r1)
    LWZ r30, 0x20+var_8(r1)
    MTLR lr, r0
    LWZ r31, 0x20+var_4(r1)
    MTCRF 8, r12
    ADDI r1, r1, 0x20
    BLR lr

=====

2, powerpc

######
tls_parse_stoc_server_name:
loc_10075210:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x20+sender_lr(r1)
    STW r31, 0x20+var_4(r1)
    MR r31, r3
    STW r30, 0x20+var_8(r1)
    LWZ r3, 0x480(r3)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1007525C
loc_10075234:
    LWZ r9, 4(r4)
    CMPWI cr7, r9, 0
    BNE cr7, loc_100752D0
loc_10075240:
    LWZ r9, 0x84(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_100752AC
loc_1007524C:
    LWZ r30, 0x3E8(r31)
    LWZ r9, 0x114(r30)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_10075280
loc_1007525C:
    LWZ r0, 0x20+sender_lr(r1)
    LI r9, 0x50
    LWZ r30, 0x20+var_8(r1)
    LI r3, 0
    LWZ r31, 0x20+var_4(r1)
    STW r9, 0(r8)
    MTLR lr, r0
    ADDI r1, r1, 0x20
    BLR lr
loc_10075280:
    LIS r4, aSslStatemExten@ha
    LI r5, 0x470
    ADDI r4, r4, aSslStatemExten@l
    STW r8, 0x20+var_14(r1)
    BL sub_10122C10
    LWZ r9, 0x3E8(r31)
    LWZ r8, 0x20+var_14(r1)
    STW r3, 0x114(r30)
    LWZ r9, 0x114(r9)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1007525C
loc_100752AC:
    LWZ r0, 0x20+sender_lr(r1)
    LWZ r30, 0x20+var_8(r1)
    LI r3, 1
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    MTLR lr, r0
    BLR lr
loc_100752D0:
    LWZ r0, 0x20+sender_lr(r1)
    LI r9, 0x32
    LWZ r30, 0x20+var_8(r1)
    LI r3, 0
    LWZ r31, 0x20+var_4(r1)
    STW r9, 0(r8)
    MTLR lr, r0
    ADDI r1, r1, 0x20
    BLR lr

=====

3, powerpc

######
ssl_set_client_hello_version:
loc_10097720:
    STWU r1, back_chain(r1)
    LIS r10, 1
    MFLR r0, lr
    STW r0, 0x30+sender_lr(r1)
    STW r30, 0x30+var_8(r1)
    STW r26, 0x30+var_18(r1)
    STW r27, 0x30+var_14(r1)
    STW r28, 0x30+var_10(r1)
    STW r29, 0x30+var_C(r1)
    STW r31, 0x30+var_4(r1)
    MR r30, r3
    LWZ r8, 4(r3)
    LWZ r9, 0(r8)
    CMPW cr7, r9, r10
    BEQ cr7, loc_10097920
loc_1009775C:
    XORIS r10, r9, 0xFFFE
    CMPWI cr7, r10, -1
    BNE cr7, loc_10097830
loc_10097768:
    LIS r31, byte_102EE338@ha
    ADDI r31, r31, byte_102EE338@l
    ADDI r31, r31, (unk_102EE3C8 - 0x102EE338)
loc_10097774:
    LI r26, 0
    LI r27, 1
    NOP 
loc_10097780:
    LWZ r9, 4(r31)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_100977EC
loc_1009778C:
    MTCTR ctr, r9
    BCTRL ctr
    LWZ r10, 0x440(r30)
    CMPWI cr7, r10, 0
    MR r28, r3
    LWZ r29, 0(r3)
    BEQ cr7, loc_100977CC
loc_100977A8:
    LWZ r9, 4(r30)
    CMPW cr5, r29, r10
    LWZ r9, 0x64(r9)
    LWZ r9, 0x30(r9)
    RLWINM r9, r9, 0,28,28
    BEQ cr5, loc_100977CC
loc_100977C0:
    CMPWI cr7, r9, 0
    BNE cr7, loc_100978E0
loc_100977C8:
    BLT cr5, loc_100977EC
loc_100977CC:
    LI r7, 0
    MR r6, r29
    LI r5, 0
    LI r4, 9
    MR r3, r30
    BL sub_10067BB0
    CMPWI cr7, r3, 0
    BNE cr7, loc_10097880
loc_100977EC:
    LI r27, 1
loc_100977F0:
    LWZU r9, 0xC(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_10097780
loc_100977FC:
    CMPWI cr7, r26, 0
    LI r3, 0xBF
    BNE cr7, loc_10097940
loc_10097808:
    LWZ r0, 0x30+sender_lr(r1)
    LWZ r26, 0x30+var_18(r1)
    LWZ r27, 0x30+var_14(r1)
    LWZ r28, 0x30+var_10(r1)
    MTLR lr, r0
    LWZ r29, 0x30+var_C(r1)
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr
loc_10097830:
    LWZ r26, 0(r3)
loc_10097834:
    LWZ r9, 0x64(r8)
    STW r26, 0(r30)
    LWZ r9, 0x30(r9)
    ANDI. r10, r9, 8
    BNE cr0, loc_10097850
loc_10097848:
    CMPWI cr7, r26, 0x303
    BGT cr7, loc_10097970
loc_10097850:
    STW r26, 0x450(r30)
    LI r3, 0
loc_10097858:
    LWZ r0, 0x30+sender_lr(r1)
    LWZ r26, 0x30+var_18(r1)
    LWZ r27, 0x30+var_14(r1)
    LWZ r28, 0x30+var_10(r1)
    MTLR lr, r0
    LWZ r29, 0x30+var_C(r1)
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr
loc_10097880:
    LWZ r9, 0x444(r30)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_100978B0
loc_1009788C:
    LWZ r10, 4(r30)
    CMPW cr5, r29, r9
    LWZ r10, 0x64(r10)
    LWZ r10, 0x30(r10)
    RLWINM r10, r10, 0,28,28
    BEQ cr5, loc_100978B0
loc_100978A4:
    CMPWI cr7, r10, 0
    BNE cr7, loc_10097950
loc_100978AC:
    BGE cr5, loc_100977EC
loc_100978B0:
    LWZ r9, 0x438(r30)
    LWZ r10, 8(r28)
    AND. r8, r9, r10
    BNE cr0, loc_100977EC
loc_100978C0:
    LWZ r9, 4(r28)
    ANDI. r10, r9, 2
    BNE cr0, loc_10097980
loc_100978CC:
    CMPWI cr7, r27, 0
    BEQ cr7, loc_100977F0
loc_100978D4:
    LWZ r26, 0(r28)
    LI r27, 0
    B loc_100977F0
loc_100978E0:
    CMPWI cr7, r29, 0x100
    BEQ cr7, loc_10097900
loc_100978E8:
    CMPWI cr7, r10, 0x100
    MR r9, r29
    BEQ cr7, loc_10097930
loc_100978F4:
    CMPW cr7, r9, r10
    BLE cr7, loc_100977CC
loc_100978FC:
    B loc_100977EC
loc_10097900:
    CMPWI cr7, r10, 0x100
    LI r9, 0
    ORI r9, r9, 0xFF00
    BNE cr7, loc_100978F4
loc_10097910:
    B loc_100977CC
loc_10097920:
    LIS r31, byte_102EE338@ha
    ADDI r31, r31, byte_102EE338@l
    ADDI r31, r31, (unk_102EE380 - 0x102EE338)
    B loc_10097774
loc_10097930:
    LI r10, 0
    ORI r10, r10, 0xFF00
    B loc_100978F4
loc_10097940:
    LWZ r8, 4(r30)
    B loc_10097834
loc_10097950:
    CMPWI cr7, r29, 0x100
    BEQ cr7, loc_10097994
loc_10097958:
    CMPWI cr7, r9, 0x100
    BEQ cr7, loc_100979A8
loc_10097960:
    CMPW cr7, r29, r9
    BLE cr7, loc_100977EC
loc_10097968:
    B loc_100978B0
loc_10097970:
    LI r26, 0x303
    LI r3, 0
    STW r26, 0x450(r30)
    B loc_10097858
loc_10097980:
    LWZ r9, 0x378(r30)
    LWZ r9, 0x10(r9)
    ANDIS. r8, r9, 3
    BNE cr0, loc_100977EC
loc_10097990:
    B loc_100978CC
loc_10097994:
    CMPWI cr7, r9, 0x100
    LI r29, 0
    ORI r29, r29, 0xFF00
    BNE cr7, loc_10097960
loc_100979A4:
    B loc_100977EC
loc_100979A8:
    LI r9, 0
    ORI r9, r9, 0xFF00
    B loc_10097960

=====

3, powerpc

######
SSL_CTX_load_verify_locations:
loc_100774D0:
    STWU r1, back_chain(r1)
    LWZ r3, 0xC(r3)
    ADDI r1, r1, 0x10
    B sub_101C75C0

=====

3, powerpc

######
bn_copy_words:
loc_10202060:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r0, 0x20+sender_lr(r1)
    STW r29, 0x20+var_C(r1)
    STW r30, 0x20+var_8(r1)
    STW r31, 0x20+var_4(r1)
    LI r29, 0
    LWZ r9, 4(r4)
    CMPW cr7, r9, r5
    BLE cr7, loc_102020B0
loc_10202088:
    LWZ r0, 0x20+sender_lr(r1)
    MR r3, r29
    LWZ r30, 0x20+var_8(r1)
    LWZ r29, 0x20+var_C(r1)
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    MTLR lr, r0
    BLR lr
loc_102020B0:
    MR r31, r4
    SLWI r5, r5, 2
    LI r4, 0
    MR r30, r3
    BL sub_10262184
    LWZ r4, 0(r31)
    LI r29, 1
    CMPWI cr7, r4, 0
    BEQ cr7, loc_10202088
loc_102020D4:
    LWZ r5, 4(r31)
    MR r3, r30
    SLWI r5, r5, 2
    BL sub_10262700
    LWZ r0, 0x20+sender_lr(r1)
    MR r3, r29
    LWZ r30, 0x20+var_8(r1)
    LWZ r29, 0x20+var_C(r1)
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    MTLR lr, r0
    BLR lr

=====

3, powerpc

######
BN_bn2binpad:
loc_100E3120:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r27, 0x30+var_14(r1)
    MR. r27, r5
    STW r0, 0x30+sender_lr(r1)
    STW r26, 0x30+var_18(r1)
    STW r28, 0x30+var_10(r1)
    STW r29, 0x30+var_C(r1)
    STW r30, 0x30+var_8(r1)
    STW r31, 0x30+var_4(r1)
    BLT cr0, loc_100E32BC
loc_100E314C:
    LWZ r9, 4(r3)
    MR r29, r3
    MR r30, r4
    CMPWI cr7, r9, 0
    BEQ cr7, loc_100E31E0
loc_100E3160:
    ADDI r9, r9, -1
    LWZ r8, 0(r3)
    SLWI r10, r9, 2
    SLWI r28, r9, 5
    LWZX r10, r8, r10
    ANDIS. r9, r10, 0xFFFF
    BEQ cr0, loc_100E31A0
loc_100E317C:
    ANDIS. r9, r10, 0xFF00
    BEQ cr0, loc_100E3280
loc_100E3184:
    LIS r9, off_102FAEC0@ha
    SRWI r10, r10, 24
    ADDI r9, r9, off_102FAEC0@l
    ADD r9, r9, r10
    LBZ r9, 0x14(r9)
    ADDI r9, r9, 0x18
    B loc_100E31B8
loc_100E31A0:
    ANDI. r9, r10, 0xFF00
    BNE cr0, loc_100E32A0
loc_100E31A8:
    LIS r9, off_102FAEC0@ha
    ADDI r9, r9, off_102FAEC0@l
    ADD r10, r9, r10
    LBZ r9, 0x14(r10)
loc_100E31B8:
    ADD r28, r28, r9
    ADDI r28, r28, 7
    SRAWI r28, r28, 3
    ADDZE r28, r28
    CMPW cr7, r27, r28
    BLT cr7, loc_100E32BC
loc_100E31D0:
    ADDI r31, r28, -1
    BGT cr7, loc_100E31EC
loc_100E31D8:
    MR r10, r31
    B loc_100E3208
loc_100E31E0:
    BLE cr0, loc_100E324C
loc_100E31E4:
    LI r31, -1
    LI r28, 0
loc_100E31EC:
    SUBF r26, r28, r27
    MR r3, r30
    MR r5, r26
    LI r4, 0
    BL sub_10262184
    ADD r30, r30, r26
    MR r10, r31
loc_100E3208:
    CMPWI cr7, r28, 0
    ADDI r31, r31, 1
    MTCTR ctr, r31
    ADDI r4, r30, -1
    BEQ cr7, loc_100E324C
loc_100E321C:
    NOP 
loc_100E3220:
    SRAWI r9, r10, 2
    ADDZE r9, r9
    LWZ r8, 0(r29)
    SLWI r9, r9, 2
    LWZX r8, r8, r9
    SUBF r7, r9, r10
    ADDI r10, r10, -1
    SLWI r9, r7, 3
    SRW r9, r8, r9
    STBU r9, 1(r4)
    BDNZ cr0, loc_100E3220
loc_100E324C:
    MR r3, r27
loc_100E3250:
    LWZ r0, 0x30+sender_lr(r1)
    LWZ r26, 0x30+var_18(r1)
    LWZ r27, 0x30+var_14(r1)
    LWZ r28, 0x30+var_10(r1)
    MTLR lr, r0
    LWZ r29, 0x30+var_C(r1)
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr
loc_100E3280:
    LIS r9, off_102FAEC0@ha
    SRWI r10, r10, 16
    ADDI r9, r9, off_102FAEC0@l
    ADD r9, r9, r10
    LBZ r9, 0x14(r9)
    ADDI r9, r9, 0x10
    B loc_100E31B8
loc_100E32A0:
    LIS r9, off_102FAEC0@ha
    SRWI r10, r10, 8
    ADDI r9, r9, off_102FAEC0@l
    ADD r9, r9, r10
    LBZ r9, 0x14(r9)
    ADDI r9, r9, 8
    B loc_100E31B8
loc_100E32BC:
    LI r3, -1
    B loc_100E3250

=====

3, powerpc

######
fputs:
loc_1024C6D0:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r31, 0x20+var_4(r1)
    MR r31, r4
    STW r29, 0x20+var_C(r1)
    STW r30, 0x20+var_8(r1)
    STW r0, 0x20+sender_lr(r1)
    STW r28, 0x20+var_10(r1)
    MR r29, r3
    BL sub_10260C94
    LWZ r9, 0(r31)
    ANDI. r10, r9, 0x8000
    MR r30, r3
    BNE cr0, loc_1024C754
loc_1024C708:
    LWZ r3, 0x48(r31)
    ADDI r28, r2, -0x74D0
    LWZ r9, 8(r3)
    CMPW cr7, r28, r9
    BEQ cr7, loc_1024C748
loc_1024C71C:
    LI r8, 1
loc_1024C720:
    LWARX r9, 0, r3
    SUBF. r9, r10, r9
    BNE cr0, loc_1024C734
loc_1024C72C:
    STWCX. r8, 0, r3
    BNE- cr0, loc_1024C720
loc_1024C734:
    ISYNC 
    CMPWI cr7, r9, 0
    BNE cr7, loc_1024C850
loc_1024C740:
    LWZ r3, 0x48(r31)
    STW r28, 8(r3)
loc_1024C748:
    LWZ r9, 4(r3)
    ADDI r9, r9, 1
    STW r9, 4(r3)
loc_1024C754:
    LWZ r9, 0x6C(r31)
    CMPWI cr7, r9, 0
    BNE cr7, loc_1024C7C0
loc_1024C760:
    LI r9, -1
    STW r9, 0x6C(r31)
loc_1024C768:
    LWZ r9, 0x98(r31)
    MR r5, r30
    MR r4, r29
    MR r3, r31
    LWZ r9, 0x1C(r9)
    MTCTR ctr, r9
    BCTRL ctr
    CMPW cr7, r30, r3
    LI r30, 1
    BNE cr7, loc_1024C7C8
loc_1024C790:
    LWZ r9, 0(r31)
    ANDI. r10, r9, 0x8000
    BEQ cr0, loc_1024C7D8
loc_1024C79C:
    LWZ r0, 0x20+sender_lr(r1)
    MR r3, r30
    LWZ r28, 0x20+var_10(r1)
    LWZ r29, 0x20+var_C(r1)
    LWZ r30, 0x20+var_8(r1)
    MTLR lr, r0
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    BLR lr
loc_1024C7C0:
    CMPWI cr7, r9, -1
    BEQ cr7, loc_1024C768
loc_1024C7C8:
    LWZ r9, 0(r31)
    LI r30, -1
    ANDI. r10, r9, 0x8000
    BNE cr0, loc_1024C79C
loc_1024C7D8:
    LWZ r3, 0x48(r31)
    LWZ r9, 4(r3)
    ADDI r9, r9, -1
    CMPWI cr7, r9, 0
    STW r9, 4(r3)
    BNE cr7, loc_1024C79C
loc_1024C7F0:
    STW r9, 8(r3)
    SYNC 0, 0
loc_1024C7F8:
    LWARX r10, 0, r3
    STWCX. r9, 0, r3
    BNE- cr0, loc_1024C7F8
loc_1024C804:
    CMPWI cr7, r10, 1
    BLE cr7, loc_1024C79C
loc_1024C80C:
    LWZ r9, -0x7030(r2)
    LI r0, 0xDD
    LI r4, 0x81
    LI r5, 1
    LI r6, 0
    CMPWI cr7, r9, 0
    BEQ cr7, loc_1024C83C
loc_1024C828:
    LI r9, 0x31
    TABORT. r9
    MFCR r9
    EXTRWI r9, r9, 1,2
    XORI r9, r9, 1
loc_1024C83C:
    SC 0
    MFCR r0
    B loc_1024C79C
loc_1024C850:
    BL sub_102700D0
    B loc_1024C740

=====

3, powerpc

######
X509_get1_ocsp:
loc_101F42B0:
    STWU r1, back_chain(r1)
    LI r6, 0
    MFLR r0, lr
    LI r5, 0
    LI r4, 0xB1
    STW r29, 0x30+var_C(r1)
    STW r0, 0x30+sender_lr(r1)
    STW r25, 0x30+var_1C(r1)
    STW r26, 0x30+var_18(r1)
    STW r27, 0x30+var_14(r1)
    STW r28, 0x30+var_10(r1)
    STW r30, 0x30+var_8(r1)
    STW r31, 0x30+var_4(r1)
    BL sub_101C78D0
    MR. r29, r3
    BEQ cr0, loc_101F4438
loc_101F42F0:
    LIS r9, aCryptoX509v3V3_18@ha
    MR r3, r29
    ADDI r26, r9, aCryptoX509v3V3_18@l
    LIS r9, sub_101F1970@ha
    ADDI r27, r9, sub_101F1970@l
    BL sub_101B1310
    LI r31, 0
    LI r28, 0
    CMPW cr7, r31, r3
    BGE cr7, loc_101F4354
loc_101F4318:
    NOP 
    NOP 
loc_101F4320:
    MR r4, r31
    MR r3, r29
    BL sub_101B1330
    MR r30, r3
    LWZ r3, 0(r3)
    BL sub_1016CA70
    CMPWI cr7, r3, 0xB2
    BEQ cr7, loc_101F4390
loc_101F4340:
    MR r3, r29
    ADDI r31, r31, 1
    BL sub_101B1310
    CMPW cr7, r31, r3
    BLT cr7, loc_101F4320
loc_101F4354:
    MR r3, r29
    BL sub_101EADB0
    MR r3, r28
loc_101F4360:
    LWZ r0, 0x30+sender_lr(r1)
    LWZ r25, 0x30+var_1C(r1)
    LWZ r26, 0x30+var_18(r1)
    LWZ r27, 0x30+var_14(r1)
    MTLR lr, r0
    LWZ r28, 0x30+var_10(r1)
    LWZ r29, 0x30+var_C(r1)
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr
loc_101F4390:
    LWZ r10, 4(r30)
    LWZ r9, 0(r10)
    CMPWI cr7, r9, 6
    BNE cr7, loc_101F4340
loc_101F43A0:
    LWZ r30, 4(r10)
    LWZ r9, 4(r30)
    CMPWI cr7, r9, 0x16
    BNE cr7, loc_101F4340
loc_101F43B0:
    LWZ r4, 8(r30)
    CMPWI cr7, r4, 0
    BEQ cr7, loc_101F4340
loc_101F43BC:
    LWZ r9, 0(r30)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_101F4340
loc_101F43C8:
    CMPWI cr7, r28, 0
    BEQ cr7, loc_101F4440
loc_101F43D0:
    MR r3, r28
    BL sub_101B0A90
    CMPWI cr7, r3, -1
    BNE cr7, loc_101F4340
loc_101F43E0:
    LWZ r3, 8(r30)
    LI r5, 0x1DC
    MR r4, r26
    MR r25, r26
    BL sub_1016A530
    MR. r30, r3
    BEQ cr0, loc_101F4410
loc_101F43FC:
    MR r4, r30
    MR r3, r28
    BL sub_101B0CF0
    CMPWI cr7, r3, 0
    BNE cr7, loc_101F4340
loc_101F4410:
    MR r4, r25
    MR r3, r30
    LI r5, 0x1DE
    BL sub_1015A2E0
    LIS r4, sub_101F1950@ha
    MR r3, r28
    ADDI r4, r4, sub_101F1950@l
    BL sub_101B1200
loc_101F4430:
    LI r28, 0
    B loc_101F4354
loc_101F4438:
    LI r3, 0
    B loc_101F4360
loc_101F4440:
    MR r3, r27
    BL sub_101B0590
    MR. r28, r3
    BEQ cr0, loc_101F4430
loc_101F4450:
    LWZ r4, 8(r30)
    B loc_101F43D0

=====

3, powerpc

######
OBJ_dup:
loc_1016DFE0:
    MR. r9, r3
    BEQ cr0, loc_1016E120
loc_1016DFE8:
    LWZ r10, 0x14(r9)
    MR r3, r9
    ANDI. r8, r10, 1
    BEQLR cr0, lr
loc_1016DFF8:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r30, 0x20+var_8(r1)
    STW r31, 0x20+var_4(r1)
    STW r0, 0x20+sender_lr(r1)
    STW r29, 0x20+var_C(r1)
    MR r31, r9
    BL sub_100B1730
    MR. r30, r3
    BEQ cr0, loc_1016E128
loc_1016E020:
    LWZ r4, 0xC(r31)
    LWZ r9, 0x14(r31)
    CMPWI cr7, r4, 0
    ORI r9, r9, 0xD
    STW r9, 0x14(r30)
    BLE cr7, loc_1016E060
loc_1016E038:
    LIS r29, aCryptoObjectsO@ha
    LWZ r3, 0x10(r31)
    LI r6, 0x26
    ADDI r29, r29, aCryptoObjectsO@l
    MR r5, r29
    BL sub_1016A6A0
    CMPWI cr7, r3, 0
    STW r3, 0x10(r30)
    BEQ cr7, loc_1016E0F0
loc_1016E05C:
    LWZ r4, 0xC(r31)
loc_1016E060:
    LWZ r3, 4(r31)
    LWZ r9, 8(r31)
    STW r4, 0xC(r30)
    CMPWI cr7, r3, 0
    STW r9, 8(r30)
    BEQ cr7, loc_1016E098
loc_1016E078:
    LIS r29, aCryptoObjectsO@ha
    LI r5, 0x2C
    ADDI r29, r29, aCryptoObjectsO@l
    MR r4, r29
    BL sub_1016A530
    CMPWI cr7, r3, 0
    STW r3, 4(r30)
    BEQ cr7, loc_1016E0F0
loc_1016E098:
    LWZ r3, 0(r31)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1016E0C4
loc_1016E0A4:
    LIS r29, aCryptoObjectsO@ha
    LI r5, 0x2F
    ADDI r29, r29, aCryptoObjectsO@l
    MR r4, r29
    BL sub_1016A530
    CMPWI cr7, r3, 0
    STW r3, 0(r30)
    BEQ cr7, loc_1016E0F0
loc_1016E0C4:
    MR r3, r30
loc_1016E0C8:
    LWZ r0, 0x20+sender_lr(r1)
    LWZ r29, 0x20+var_C(r1)
    LWZ r30, 0x20+var_8(r1)
    LWZ r31, 0x20+var_4(r1)
    ADDI r1, r1, 0x20
    MTLR lr, r0
    BLR lr
loc_1016E0F0:
    MR r3, r30
    BL sub_100B17A0
    LI r3, 8
    LI r7, 0x35
    MR r6, r29
    LI r5, 0x41
    LI r4, 0x65
    BL sub_1012E140
    LI r3, 0
    B loc_1016E0C8
loc_1016E120:
    LI r3, 0
    BLR lr
loc_1016E128:
    LIS r6, aCryptoObjectsO@ha
    LI r3, 8
    LI r7, 0x1C
    ADDI r6, r6, aCryptoObjectsO@l
    LI r5, 0xD
    LI r4, 0x65
    BL sub_1012E140
    LI r3, 0
    B loc_1016E0C8

=====

3, powerpc

######
BN_nist_mod_256:
loc_10202D60:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r25, 0x90+var_1C(r1)
    STW r0, 0x90+sender_lr(r1)
    STW r26, 0x90+var_18(r1)
    STW r27, 0x90+var_14(r1)
    STW r28, 0x90+var_10(r1)
    STW r29, 0x90+var_C(r1)
    STW r30, 0x90+var_8(r1)
    STW r31, 0x90+var_4(r1)
    STW r22, 0x90+var_28(r1)
    STW r23, 0x90+var_24(r1)
    STW r24, 0x90+var_20(r1)
    MR r27, r3
    MR r3, r4
    MR r31, r4
    LWZ r26, 4(r4)
    LWZ r25, 0(r4)
    MR r28, r6
    LIS r30, off_103275B4@ha
    ADDI r30, r30, off_103275B4@l
    LWZ r9, -0x7008(r2)
    STW r9, 0x90+var_34(r1)
    LI r9, 0
    BL sub_100E4450
    MR. r29, r3
    BNE cr0, loc_10202DE0
loc_10202DCC:
    ADDI r4, r30, (off_10327698 - 0x103275B4)
    MR r3, r31
    BL sub_100E3860
    CMPWI cr7, r3, 0
    BLT cr7, loc_10202E50
loc_10202DE0:
    MR r6, r28
    ADDI r5, r30, (off_10327684 - 0x103275B4)
    MR r4, r31
    MR r3, r27
    BL sub_100E4810
    MR r29, r3
loc_10202DF8:
    LWZ r9, 0x90+var_34(r1)
    LWZ r10, -0x7008(r2)
    XOR. r9, r9, r10
    LI r10, 0
    MR r3, r29
    BNE cr0, loc_10203310
loc_10202E10:
    LWZ r0, 0x90+sender_lr(r1)
    LWZ r22, 0x90+var_28(r1)
    LWZ r23, 0x90+var_24(r1)
    LWZ r24, 0x90+var_20(r1)
    MTLR lr, r0
    LWZ r25, 0x90+var_1C(r1)
    LWZ r26, 0x90+var_18(r1)
    LWZ r27, 0x90+var_14(r1)
    LWZ r28, 0x90+var_10(r1)
    LWZ r29, 0x90+var_C(r1)
    LWZ r30, 0x90+var_8(r1)
    LWZ r31, 0x90+var_4(r1)
    ADDI r1, r1, 0x90
    BLR lr
loc_10202E50:
    MR r4, r31
    ADDI r3, r30, (off_10327684 - 0x103275B4)
    BL sub_100E3860
    CMPWI cr7, r3, 0
    BEQ cr7, loc_10203270
loc_10202E64:
    BLE cr7, loc_10202E90
loc_10202E68:
    CMPLW cr7, r31, r27
    LI r29, 1
    BEQ cr7, loc_10202DF8
loc_10202E74:
    MR r4, r31
    MR r3, r27
    BL sub_100E2C10
    ADDIC r29, r3, -1
    SUBFE r29, r29, r3
    B loc_10202DF8
loc_10202E90:
    CMPLW cr7, r31, r27
    BEQ cr7, loc_102032B8
loc_10202E98:
    LI r4, 8
    MR r3, r27
    BL sub_100E4610
    CMPWI cr7, r3, 0
    BEQ cr7, loc_10202DF8
loc_10202EAC:
    LWZ r9, 0(r25)
    LWZ r31, 0(r27)
    STW r9, 0(r31)
    LWZ r9, 4(r25)
    STW r9, 4(r31)
    LWZ r9, 8(r25)
    STW r9, 8(r31)
    LWZ r9, 0xC(r25)
    STW r9, 0xC(r31)
    LWZ r9, 0x10(r25)
    STW r9, 0x10(r31)
    LWZ r9, 0x14(r25)
    STW r9, 0x14(r31)
    LWZ r9, 0x18(r25)
    STW r9, 0x18(r31)
    LWZ r9, 0x1C(r25)
    STW r9, 0x1C(r31)
loc_10202EF0:
    CMPWI cr7, r26, 8
    BLE cr7, loc_102032C0
loc_10202EF8:
    ADDI r9, r1, 0x90+var_74
    SLWI r5, r26, 2
    MR r3, r9
    ADDI r5, r5, -0x20
    ADDI r4, r25, 0x20
    ADDI r26, r26, -8
    BL sub_10262700
    CMPWI cr7, r26, 7
    MR r9, r3
    BGT cr7, loc_10202F3C
loc_10202F20:
    BGT cr7, loc_102032B0
loc_10202F24:
    MULLI r5, r26, -4
    ADDI r5, r5, 0x20
loc_10202F2C:
    SLWI r3, r26, 2
    LI r4, 0
    ADD r3, r9, r3
    BL sub_10262184
loc_10202F3C:
    LWZ r26, 0x90+var_74(r1)
    LWZ r9, 0(r31)
    LI r10, 0
    LWZ r25, 0x90+var_70(r1)
    LWZ r29, 0x90+var_68(r1)
    ADDC r9, r9, r26
    LWZ r8, 0x90+var_64(r1)
    LWZ r5, 0x90+var_60(r1)
    ADDE r6, r10, r10
    ADDC r11, r9, r25
    LWZ r9, 0x90+var_5C(r1)
    LWZ r7, 4(r31)
    ADDZE r6, r6
    SUBFC r11, r29, r11
    LWZ r28, 0x90+var_6C(r1)
    LWZ r4, 0x90+var_58(r1)
    SUBFE r6, r10, r6
    SUBFC r11, r8, r11
    LWZ r22, 0x18(r31)
    SUBFE r6, r10, r6
    SUBFC r11, r5, r11
    SUBFE r6, r10, r6
    SUBFC r11, r9, r11
    SUBFE r6, r10, r6
    STW r11, 0(r31)
    SRAWI r0, r6, 0x1F
    ADDC r7, r7, r6
    ADDZE r0, r0
    ADDC r7, r25, r7
    ADDZE r0, r0
    ADDC r3, r7, r28
    LWZ r7, 8(r31)
    ADDZE r0, r0
    SUBFC r3, r8, r3
    SUBFE r0, r10, r0
    SUBFC r3, r5, r3
    SUBFE r0, r10, r0
    SUBFC r3, r9, r3
    SUBFE r0, r10, r0
    SUBFC r3, r4, r3
    SUBFE r0, r10, r0
    STW r3, 4(r31)
    SRAWI r6, r0, 0x1F
    ADDC r0, r7, r0
    ADDZE r7, r6
    ADDC r0, r28, r0
    LWZ r6, 0xC(r31)
    ADDZE r7, r7
    ADDC r0, r29, r0
    ADDZE r7, r7
    SUBFC r0, r5, r0
    SUBFE r7, r10, r7
    SUBFC r0, r9, r0
    SUBFE r7, r10, r7
    SUBFC r0, r4, r0
    SUBFE r7, r10, r7
    STW r0, 8(r31)
    SRAWI r12, r7, 0x1F
    ADDC r6, r6, r7
    LWZ r7, 0x10(r31)
    ADDZE r12, r12
    ADDC r6, r29, r6
    ADDZE r12, r12
    ADDC r6, r29, r6
    ADDZE r12, r12
    ADDC r6, r8, r6
    ADDZE r12, r12
    ADDC r6, r8, r6
    ADDZE r12, r12
    ADDC r6, r5, r6
    ADDZE r12, r12
    SUBFC r6, r4, r6
    SUBFE r12, r10, r12
    SUBFC r6, r26, r6
    SUBFE r12, r10, r12
    SUBFC r6, r25, r6
    SUBFE r12, r10, r12
    STW r6, 0xC(r31)
    SRAWI r24, r12, 0x1F
    ADDC r12, r7, r12
    LWZ r7, 0x14(r31)
    ADDZE r24, r24
    ADDC r12, r8, r12
    ADDZE r24, r24
    ADDC r12, r8, r12
    ADDZE r24, r24
    ADDC r12, r5, r12
    ADDZE r24, r24
    ADDC r12, r5, r12
    ADDZE r24, r24
    ADDC r12, r9, r12
    ADDZE r24, r24
    SUBFC r12, r25, r12
    SUBFE r24, r10, r24
    SUBFC r12, r28, r12
    SUBFE r24, r10, r24
    STW r12, 0x10(r31)
    SRAWI r23, r24, 0x1F
    ADDC r7, r7, r24
    ADDZE r23, r23
    ADDC r7, r5, r7
    ADDZE r23, r23
    ADDC r7, r5, r7
    ADDZE r23, r23
    ADDC r7, r9, r7
    ADDZE r23, r23
    ADDC r7, r9, r7
    ADDZE r23, r23
    ADDC r7, r4, r7
    ADDZE r23, r23
    SUBFC r7, r28, r7
    SUBFE r23, r10, r23
    SUBFC r24, r29, r7
    SUBFE r23, r10, r23
    STW r24, 0x14(r31)
    SRAWI r7, r23, 0x1F
    ADDC r23, r22, r23
    ADDZE r7, r7
    ADDC r23, r9, r23
    ADDZE r7, r7
    ADDC r23, r9, r23
    ADDZE r7, r7
    ADDC r23, r4, r23
    ADDZE r7, r7
    ADDC r23, r4, r23
    ADDZE r7, r7
    ADDC r9, r9, r23
    LWZ r23, 0x1C(r31)
    ADDZE r7, r7
    ADDC r9, r5, r9
    ADDZE r7, r7
    SUBFC r9, r26, r9
    SUBFE r7, r10, r7
    SUBFC r9, r25, r9
    SUBFE r7, r10, r7
    STW r9, 0x18(r31)
    SRAWI r25, r7, 0x1F
    ADDC r7, r23, r7
    ADDZE r25, r25
    ADDC r7, r4, r7
    ADDZE r25, r25
    ADDC r7, r4, r7
    ADDZE r25, r25
    ADDC r7, r4, r7
    ADDZE r4, r25
    ADDC r26, r26, r7
    ADDZE r7, r4
    SUBFC r28, r28, r26
    SUBFE r7, r10, r7
    SUBFC r29, r29, r28
    SUBFE r7, r10, r7
    SUBFC r8, r8, r29
    SUBFE r7, r10, r7
    SUBFC r8, r5, r8
    SUBFE r10, r10, r7
    LIS r29, sub_101FD990@ha
    SRAWI. r7, r10, 0x1F
    STW r8, 0x1C(r31)
    ADDI r29, r29, sub_101FD990@l
    BNE cr0, loc_10203290
loc_102031BC:
    CMPWI cr7, r10, 0
    BEQ cr7, loc_10203290
loc_102031C4:
    ADDI r10, r10, -1
    ADDI r30, r30, (unk_103276AC - 0x103275B4)
    SLWI r5, r10, 5
    LI r6, 8
    ADD r5, r30, r5
    MR r4, r31
    MR r3, r31
    BL sub_101FD990
    NEG r26, r3
loc_102031E8:
    MTCTR ctr, r29
    ADDI r28, r1, 0x90+var_54
    LI r6, 8
    MR r5, r30
    MR r4, r31
    MR r3, r28
    LI r29, 1
    BCTRL ctr
    XOR r10, r31, r28
    AND r10, r10, r26
    NEG r3, r3
    AND r10, r10, r3
    MR r3, r27
    XOR r9, r10, r28
    LWZ r10, 0(r9)
    STW r10, 0(r31)
    LWZ r10, 4(r9)
    STW r10, 4(r31)
    LWZ r10, 8(r9)
    STW r10, 8(r31)
    LWZ r10, 0xC(r9)
    STW r10, 0xC(r31)
    LWZ r10, 0x10(r9)
    STW r10, 0x10(r31)
    LWZ r10, 0x14(r9)
    STW r10, 0x14(r31)
    LWZ r10, 0x18(r9)
    STW r10, 0x18(r31)
    LWZ r9, 0x1C(r9)
    STW r9, 0x1C(r31)
    LI r9, 8
    STW r9, 4(r27)
    BL sub_100E47B0
    B loc_10202DF8
loc_10203270:
    LI r4, 0
    MR r3, r27
    BL sub_100E2DD0
    LI r29, 1
    B loc_10202DF8
loc_10203290:
    OR. r9, r7, r10
    BNE cr0, loc_102032D0
loc_10203298:
    LIS r30, unk_103276AC@ha
    LI r26, -1
    ADDI r30, r30, unk_103276AC@l
    B loc_102031E8
loc_102032B0:
    LI r5, 4
    B loc_10202F2C
loc_102032B8:
    MR r31, r25
    B loc_10202EF0
loc_102032C0:
    LI r26, 0
    ADDI r9, r1, 0x90+var_74
    CMPWI cr7, r26, 7
    B loc_10202F20
loc_102032D0:
    NOT r10, r10
    ADDI r30, r30, (unk_103276AC - 0x103275B4)
    SLWI r5, r10, 5
    LI r6, 8
    ADD r5, r30, r5
    MR r4, r31
    MR r3, r31
    BL sub_101FD850
    LIS r9, sub_101FD850@ha
    ADDI r9, r9, sub_101FD850@l
    NEG r3, r3
    XOR r29, r29, r9
    AND r29, r29, r3
    MR r26, r3
    XOR r29, r29, r9
    B loc_102031E8
loc_10203310:
    BL sub_102716E0

=====

3, powerpc

######
rand_drbg_get_entropy:
loc_1018DF70:
    STWU r1, back_chain(r1)
    MFLR r0, lr
    STW r30, 0x30+var_8(r1)
    LIS r30, aCryptoRandRand@ha
    ADDI r30, r30, aCryptoRandRand@l
    STW r26, 0x30+var_18(r1)
    STW r27, 0x30+var_14(r1)
    STW r28, 0x30+var_10(r1)
    MR r26, r3
    MR r27, r4
    MR r28, r5
    MR r4, r30
    LI r5, 0x139
    LI r3, 0x18
    STW r25, 0x30+var_1C(r1)
    STW r29, 0x30+var_C(r1)
    STW r31, 0x30+var_4(r1)
    MR r29, r7
    STW r0, 0x30+sender_lr(r1)
    MR r25, r6
    BL sub_1015A5E0
    LI r7, 0x13C
    MR. r31, r3
    BEQ cr0, loc_1018E34C
loc_1018DFD0:
    STW r25, 8(r31)
    STW r29, 0xC(r31)
    LI r5, 0x143
    MR r4, r30
    MR r3, r29
    BL sub_1015C040
    CMPWI cr7, r3, 0
    STW r3, 0(r31)
    BEQ cr7, loc_1018E348
loc_1018DFF4:
    LWZ r29, 0x14(r26)
    STW r28, 0x14(r31)
    CMPWI cr7, r29, 0
    BEQ cr7, loc_1018E068
loc_1018E004:
    LWZ r10, 4(r31)
    LWZ r9, 0xC(r31)
    LWZ r25, 4(r29)
    SUBF r9, r10, r9
    CMPLW cr7, r25, r9
    BGT cr7, loc_1018E260
loc_1018E01C:
    CMPWI cr7, r25, 0
    LWZ r4, 0(r29)
    BNE cr7, loc_1018E2B0
loc_1018E028:
    LWZ r9, 0x10(r31)
    CMPLW cr7, r28, r9
    BGT cr7, loc_1018E240
loc_1018E034:
    CMPWI cr7, r29, 0
    BEQ cr7, loc_1018E060
loc_1018E03C:
    LWZ r3, 0(r29)
loc_1018E040:
    LWZ r4, 0xC(r29)
    MR r5, r30
    LI r6, 0x15A
    BL sub_1015C210
    LI r5, 0x15B
    MR r4, r30
    MR r3, r29
    BL sub_1015A2E0
loc_1018E060:
    LI r9, 0
    STW r9, 0x14(r26)
loc_1018E068:
    LWZ r10, 4(r26)
    CMPWI cr7, r10, 0
    BEQ cr7, loc_1018E2E0
loc_1018E074:
    LWZ r8, 0x10(r31)
    LWZ r29, 0x14(r31)
    CMPLW cr7, r8, r29
    BLT cr7, loc_1018E180
loc_1018E084:
    LWZ r9, 4(r31)
    LWZ r8, 8(r31)
    LWZ r4, 0xC(r31)
    CMPLW cr7, r8, r9
    BLE cr7, loc_1018E1B4
loc_1018E098:
    LI r29, 0
    SUBF r7, r9, r4
loc_1018E0A0:
    SUBF r8, r9, r8
    CMPLW cr7, r29, r8
    BLT cr7, loc_1018E250
loc_1018E0AC:
    CMPLW cr7, r7, r29
    BLT cr7, loc_1018E280
loc_1018E0B4:
    LWZ r3, 0(r31)
    ADD. r28, r3, r9
    BEQ cr0, loc_1018E1C4
loc_1018E0C0:
    LWZ r3, 0(r10)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1018E0D4
loc_1018E0CC:
    BL sub_101B3120
    LWZ r10, 4(r26)
loc_1018E0D4:
    LI r8, 0x3B0
    MR r7, r26
    LI r6, 0
    MR r5, r29
    MR r4, r28
    MR r3, r10
    BL sub_1018AC20
    LWZ r9, 4(r26)
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1018E220
loc_1018E0FC:
    LWZ r3, 0(r9)
    SLWI r28, r29, 3
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1018E110
loc_1018E10C:
    BL sub_101B3140
loc_1018E110:
    LWZ r4, 0xC(r31)
    LWZ r10, 4(r31)
    SUBF r9, r10, r4
    CMPLW cr7, r9, r29
    BLT cr7, loc_1018E2F0
loc_1018E124:
    CMPWI cr7, r29, 0
    LWZ r3, 0x10(r31)
    BEQ cr7, loc_1018E140
loc_1018E130:
    ADD r29, r10, r29
    ADD r3, r28, r3
    STW r29, 4(r31)
    STW r3, 0x10(r31)
loc_1018E140:
    LWZ r9, 0x14(r31)
    CMPLW cr7, r3, r9
    BLT cr7, loc_1018E1C0
loc_1018E14C:
    LWZ r9, 4(r31)
    LWZ r10, 8(r31)
    CMPLW cr7, r9, r10
    BLT cr7, loc_1018E1C0
loc_1018E15C:
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1018E1B4
loc_1018E164:
    LWZ r9, 0(r31)
    LI r10, 0
    LWZ r29, 4(r31)
    STW r10, 0(r31)
    STW r9, 0(r27)
    LWZ r3, 0(r31)
    B loc_1018E1C8
loc_1018E180:
    ADDI r29, r29, 7
    LWZ r4, 0xC(r31)
    LWZ r9, 4(r31)
    SUBF r29, r8, r29
    SRWI r29, r29, 3
    SUBF r7, r9, r4
    CMPLW cr7, r29, r7
    BGT cr7, loc_1018E320
loc_1018E1A0:
    LWZ r8, 8(r31)
    CMPLW cr7, r9, r8
    BLT cr7, loc_1018E0A0
loc_1018E1AC:
    CMPWI cr7, r29, 0
    BNE cr7, loc_1018E0B4
loc_1018E1B4:
    LI r29, 0
    LWZ r3, 0(r31)
    B loc_1018E1C8
loc_1018E1C0:
    LWZ r3, 0(r31)
loc_1018E1C4:
    LI r29, 0
loc_1018E1C8:
    LI r6, 0x15A
    MR r5, r30
    BL sub_1015C210
    MR r3, r31
    LI r5, 0x15B
    MR r4, r30
    BL sub_1015A2E0
    MR r3, r29
loc_1018E1E8:
    LWZ r0, 0x30+sender_lr(r1)
    LWZ r25, 0x30+var_1C(r1)
    LWZ r26, 0x30+var_18(r1)
    LWZ r27, 0x30+var_14(r1)
    MTLR lr, r0
    LWZ r28, 0x30+var_10(r1)
    LWZ r29, 0x30+var_C(r1)
    LWZ r30, 0x30+var_8(r1)
    LWZ r31, 0x30+var_4(r1)
    ADDI r1, r1, 0x30
    BLR lr
loc_1018E220:
    LWZ r3, 0(r9)
    LI r28, 0
    LI r29, 0
    CMPWI cr7, r3, 0
    BNE cr7, loc_1018E10C
loc_1018E234:
    LWZ r4, 0xC(r31)
    LWZ r3, 0x10(r31)
    B loc_1018E140
loc_1018E240:
    MR r3, r4
    B loc_1018E040
loc_1018E250:
    MR r29, r8
    CMPLW cr7, r7, r29
    BGE cr7, loc_1018E0B4
loc_1018E25C:
    B loc_1018E280
loc_1018E260:
    LI r7, 0x1DF
    MR r6, r30
    LI r5, 0x6A
    LI r4, 0x67
    LI r3, 0x24
    BL sub_1012E140
    LWZ r29, 0x14(r26)
    B loc_1018E034
loc_1018E280:
    LI r4, 0x71
    LI r3, 0x24
    LI r7, 0x1FE
    MR r6, r30
    LI r5, 0x7D
    LI r29, 0
    BL sub_1012E140
    LWZ r4, 0xC(r31)
    LWZ r3, 0(r31)
    B loc_1018E1C8
loc_1018E2B0:
    MR r5, r25
    ADD r3, r3, r10
    LWZ r29, 0x10(r29)
    BL sub_10262700
    LWZ r10, 4(r31)
    LWZ r9, 0x10(r31)
    ADD r25, r10, r25
    ADD r29, r9, r29
    STW r29, 0x10(r31)
    STW r25, 4(r31)
    LWZ r29, 0x14(r26)
    B loc_1018E034
loc_1018E2E0:
    MR r3, r31
    BL sub_1018F820
    LWZ r4, 0xC(r31)
    B loc_1018E15C
loc_1018E2F0:
    LI r4, 0x72
    LI r3, 0x24
    LI r7, 0x211
    MR r6, r30
    LI r5, 0x7D
    BL sub_1012E140
    LWZ r4, 0xC(r31)
    LWZ r3, 0(r31)
    B loc_1018E1C4
loc_1018E320:
    LI r4, 0x73
    LI r3, 0x24
    LI r7, 0x1BF
    MR r6, r30
    LI r5, 0x7D
    LI r29, 0
    BL sub_1012E140
    LWZ r4, 0xC(r31)
    LWZ r3, 0(r31)
    B loc_1018E1C8
loc_1018E348:
    LI r7, 0x145
loc_1018E34C:
    MR r6, r30
    LI r5, 0x41
    LI r4, 0x74
    LI r3, 0x24
    BL sub_1012E140
    MR r3, r31
    LI r5, 0x14E
    MR r4, r30
    BL sub_1015A2E0
    LI r3, 0
    B loc_1018E1E8

=====

3, powerpc

######
tls_parse_ctos_use_srtp:
loc_100882A0:
    STWU r1, back_chain(r1)
    MFCR r12
    MFLR r0, lr
    STW r23, 0x40+var_24(r1)
    STW r24, 0x40+var_20(r1)
    STW r25, 0x40+var_1C(r1)
    STW r0, 0x40+sender_lr(r1)
    STW r22, 0x40+var_28(r1)
    STW r26, 0x40+var_18(r1)
    STW r27, 0x40+var_14(r1)
    STW r28, 0x40+var_10(r1)
    STW r29, 0x40+var_C(r1)
    STW r30, 0x40+var_8(r1)
    STW r31, 0x40+var_4(r1)
    STW r12, 0x40+var_2C(r1)
    MR r23, r3
    MR r25, r4
    MR r24, r8
    BL sub_10055D70
    CMPWI cr7, r3, 0
    BEQ cr7, loc_1008846C
loc_100882F4:
    LWZ r10, 4(r25)
    CMPLWI cr7, r10, 1
    BLE cr7, loc_100883C0
loc_10088300:
    LWZ r9, 0(r25)
    ADDI r10, r10, -2
    LHZ r26, 0(r9)
    ADDI r27, r9, 2
    STW r10, 4(r25)
    STW r27, 0(r25)
    ANDI. r31, r26, 1
    BNE cr0, loc_100883C0
loc_10088320:
    CMPLW cr7, r26, r10
    BGT cr7, loc_100883C0
loc_10088328:
    SUBF r10, r26, r10
    ADD r9, r27, r26
    STW r9, 0(r25)
    STW r10, 4(r25)
    MR r3, r23
    BL sub_10055D70
    STW r31, 0x514(r23)
    MR r28, r3
    BL sub_101B1310
    MR r29, r3
loc_10088350:
    ADDI r9, r27, -2
    CMPWI cr4, r29, 0
loc_10088358:
    CMPWI cr7, r26, 0
    BEQ cr7, loc_10088428
loc_10088360:
    CMPLWI cr7, r26, 1
    BEQ cr7, loc_100884C0
loc_10088368:
    ADDI r22, r9, 2
    LHZ r30, 2(r9)
    ADDI r27, r9, 4
    ADDI r26, r26, -2
    LI r31, 0
    BGT cr4, loc_1008839C
loc_10088380:
    B loc_100884B0
loc_10088390:
    ADDI r31, r31, 1
    CMPW cr7, r29, r31
    BEQ cr7, loc_100884B0
loc_1008839C:
    MR r4, r31
    MR r3, r28
    BL sub_101B1330
    LWZ r9, 4(r3)
    CMPW cr7, r9, r30
    BNE cr7, loc_10088390
loc_100883B4:
    STW r3, 0x514(r23)
    MR r29, r31
    B loc_10088350
loc_100883C0:
    LI r7, 0x18D
loc_100883C4:
    LIS r6, aSslStatemExten_2@ha
    LI r5, 0x161
    ADDI r6, r6, aSslStatemExten_2@l
loc_100883D0:
    LI r3, 0x14
    LI r4, 0x1D1
    BL sub_1012E140
    LWZ r0, 0x40+sender_lr(r1)
    LWZ r12, 0x40+var_2C(r1)
    LI r9, 0x32
    LI r3, 0
    STW r9, 0(r24)
    LWZ r22, 0x40+var_28(r1)
    MTLR lr, r0
    LWZ r23, 0x40+var_24(r1)
    LWZ r24, 0x40+var_20(r1)
    MTCRF 8, r12
    LWZ r25, 0x40+var_1C(r1)
    LWZ r26, 0x40+var_18(r1)
    LWZ r27, 0x40+var_14(r1)
    LWZ r28, 0x40+var_10(r1)
    LWZ r29, 0x40+var_C(r1)
    LWZ r30, 0x40+var_8(r1)
    LWZ r31, 0x40+var_4(r1)
    ADDI r1, r1, 0x40
    BLR lr
loc_10088428:
    LWZ r9, 4(r25)
    CMPWI cr7, r9, 0
    BEQ cr7, loc_100884C8
loc_10088434:
    LWZ r10, 0(r25)
    ADDI r9, r9, -1
    LBZ r8, 0(r10)
    ADDI r10, r10, 1
    STW r9, 4(r25)
    STW r10, 0(r25)
    CMPLW cr7, r8, r9
    BGT cr7, loc_100884D0
loc_10088454:
    SUBF r9, r8, r9
    ADD r10, r10, r8
    CMPWI cr7, r9, 0
    STW r10, 0(r25)
    STW r9, 4(r25)
    BNE cr7, loc_100884D0
loc_1008846C:
    LWZ r0, 0x40+sender_lr(r1)
    LWZ r12, 0x40+var_2C(r1)
    LI r3, 1
    LWZ r22, 0x40+var_28(r1)
    LWZ r23, 0x40+var_24(r1)
    MTLR lr, r0
    LWZ r24, 0x40+var_20(r1)
    LWZ r25, 0x40+var_1C(r1)
    MTCRF 8, r12
    LWZ r26, 0x40+var_18(r1)
    LWZ r27, 0x40+var_14(r1)
    LWZ r28, 0x40+var_10(r1)
    LWZ r29, 0x40+var_C(r1)
    LWZ r30, 0x40+var_8(r1)
    LWZ r31, 0x40+var_4(r1)
    ADDI r1, r1, 0x40
    BLR lr
loc_100884B0:
    MR r9, r22
    B loc_10088358
loc_100884C0:
    LI r7, 0x19A
    B loc_100883C4
loc_100884C8:
    LI r7, 0x1B4
    B loc_100883C4
loc_100884D0:
    LIS r6, aSslStatemExten_2@ha
    LI r7, 0x1BB
    ADDI r6, r6, aSslStatemExten_2@l
    LI r5, 0x160
    B loc_100883D0

=====

